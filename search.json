[{"path":"index.html","id":"about-this-book","chapter":"About this book","heading":"About this book","text":"Targeted Learning R: Causal Data Science tlverse Software\nEcosystem open source, reproducible electronic handbook applying \nTargeted Learning methodology practice using tlverse software\necosystem. work currently early draft\nphase available facilitate input community. view \ncontribute available content, consider visiting GitHub\nrepository.\n","code":""},{"path":"index.html","id":"outline","chapter":"About this book","heading":"0.1 Outline","text":"contents handbook meant serve reference guide \napplied research well materials can taught series short\ncourses focused applications Targeted Learning. section\nintroduces set distinct causal questions, motivated case study,\nalongside statistical methodology software assessing causal claim \ninterest. (evolving) set materials includesMotivation: need statistical\nrevolutionThe Roadmap introductory case study: WASH Beneifits dataIntroduction tlverse software\necosystemCross-validation origami\npackageEnsemble machine learning \nsl3 packageTargeted learning causal inference \ntmle3 packageOptimal treatments regimes \ntmle3mopttx packageStochastic treatment regimes \ntmle3shift packageCausal mediation analysis \ntmle3mediate package\n(work progress)Coda: need statistical\nrevolution","code":""},{"path":"index.html","id":"what-this-book-is-not","chapter":"About this book","heading":"What this book is not","text":"focus work providing -depth technical descriptions\ncurrent statistical methodology recent advancements. Instead, goal \nconvey key details state---art techniques manner \nclear complete, without burdening reader extraneous information.\nhope presentations herein serve references researchers\n– methodologists domain specialists alike – empower deploy\ncentral tools Targeted Learning efficient manner. technical\ndetails -depth descriptions classical theory recent advances\nfield Targeted Learning, interested reader invited consult\nvan der Laan Rose (2011) /van der Laan Rose (2018) appropriate. primary literature\nstatistical causal inference, machine learning, non/semiparametric theory\ninclude many recent advances Targeted Learning related areas.","code":""},{"path":"index.html","id":"about-the-authors","chapter":"About this book","heading":"About the authors","text":"","code":""},{"path":"index.html","id":"mark-van-der-laan","chapter":"About this book","heading":"Mark van der Laan","text":"Mark van der Laan, PhD, Professor Biostatistics Statistics UC\nBerkeley. research interests include statistical methods computational\nbiology, survival analysis, censored data, adaptive designs, targeted maximum\nlikelihood estimation, causal inference, data-adaptive loss-based learning, \nmultiple testing. research group developed loss-based super learning \nsemiparametric models, based cross-validation, generic optimal tool \nestimation infinite-dimensional parameters, nonparametric density\nestimation prediction censored uncensored data. Building \nwork, research group developed targeted maximum likelihood estimation\ntarget parameter data-generating distribution arbitrary\nsemiparametric nonparametric models, generic optimal methodology \nstatistical causal inference. recently, Mark’s group focused \npart development centralized, principled set software tools \ntargeted learning, tlverse.","code":""},{"path":"index.html","id":"jeremy-coyle","chapter":"About this book","heading":"Jeremy Coyle","text":"Jeremy Coyle, PhD, consulting data scientist statistical programmer,\ncurrently leading software development effort produced \ntlverse ecosystem R packages related software tools. Jeremy earned \nPhD Biostatistics UC Berkeley 2016, primarily supervision\nAlan Hubbard.","code":""},{"path":"index.html","id":"nima-hejazi","chapter":"About this book","heading":"Nima Hejazi","text":"Nima Hejazi PhD candidate biostatistics, working collaborative\ndirection Mark van der Laan Alan Hubbard. Nima affiliated UC\nBerkeley’s Center Computational Biology NIH Biomedical Big Data training\nprogram, well Fred Hutchinson Cancer Research Center. Previously,\nearned MA Biostatistics BA (majors Molecular Cell\nBiology, Psychology, Public Health), UC Berkeley. research\ninterests fall intersection causal inference machine learning,\ndrawing ideas non/semi-parametric estimation large, flexible\nstatistical models develop efficient robust statistical procedures \nevaluating complex target estimands observational randomized studies.\nParticular areas current emphasis include mediation/path analysis,\noutcome-dependent sampling designs, targeted loss-based estimation, vaccine\nefficacy trials. Nima also passionate statistical computing open\nsource software development applied statistics.","code":""},{"path":"index.html","id":"ivana-malenica","chapter":"About this book","heading":"Ivana Malenica","text":"Ivana Malenica PhD student biostatistics advised Mark van der Laan.\nIvana currently fellow Berkeley Institute Data Science, \nserving NIH Biomedical Big Data Freeport-McMoRan Genomic Engine fellow.\nearned Master’s Biostatistics Bachelor’s Mathematics, \nspent time Translational Genomics Research Institute. broadly,\nresearch interests span non/semi-parametric theory, probability theory,\nmachine learning, causal inference high-dimensional statistics. \ncurrent work involves complex dependent settings (dependence time \nnetwork) adaptive sequential designs.","code":""},{"path":"index.html","id":"rachael-phillips","chapter":"About this book","heading":"Rachael Phillips","text":"Rachael Phillips PhD student biostatistics, advised Alan Hubbard \nMark van der Laan. MA Biostatistics, BS Biology, BA \nMathematics. student targeted learning causal inference; research\nintegrates personalized medicine, human-computer interaction, experimental\ndesign, regulatory policy.","code":""},{"path":"index.html","id":"alan-hubbard","chapter":"About this book","heading":"Alan Hubbard","text":"Alan Hubbard Professor Biostatistics, former head Division \nBiostatistics UC Berkeley, head data analytics core UC Berkeley’s\nSuperFund research program. current research interests include causal\ninference, variable importance analysis, statistical machine learning,\nestimation inference data-adaptive statistical target parameters, \ntargeted minimum loss-based estimation. Research group generally\nmotivated applications problems computational biology, epidemiology,\nprecision medicine.","code":""},{"path":"index.html","id":"repro","chapter":"About this book","heading":"0.2 Reproduciblity with the tlverse","text":"tlverse software ecosystem growing collection packages, several \nquite early software lifecycle. team best \nmaintain backwards compatibility. work reaches completion, \nspecific versions tlverse packages used archived tagged \nproduce .book written using bookdown, complete\nsource available GitHub.\nversion book built R version 4.0.2 (2020-06-22),\npandoc version 2.2, \nfollowing packages:","code":""},{"path":"index.html","id":"learn","chapter":"About this book","heading":"0.3 Learning resources","text":"effectively utilize handbook, reader need fully trained\nstatistician begin understanding applying methods. However, \nhighly recommended reader understanding basic statistical\nconcepts confounding, probability distributions, confidence intervals,\nhypothesis tests, regression. Advanced knowledge mathematical statistics\nmay useful necessary. Familiarity R programming\nlanguage essential. also recommend understanding introductory\ncausal inference.learning R programming language recommend following (free)\nintroductory resources:Software Carpentry’s Programming \nRSoftware Carpentry’s R Reproducible Scientific\nAnalysisGarret Grolemund Hadley Wickham’s R Data\nScienceFor general introduction causal inference, recommendMiguel . Hernán James M. Robins’ Causal Inference: ,\n2021Jason . Roy’s Crash Course Causality: Inferring Causal Effects \nObservational Data \nCoursera","code":""},{"path":"index.html","id":"setup","chapter":"About this book","heading":"0.4 Setup instructions","text":"","code":""},{"path":"index.html","id":"r-and-rstudio","chapter":"About this book","heading":"0.4.1 R and RStudio","text":"R RStudio separate downloads installations. R \nunderlying statistical computing environment. RStudio graphical integrated\ndevelopment environment (IDE) makes using R much easier \ninteractive. need install R install RStudio.","code":""},{"path":"index.html","id":"windows","chapter":"About this book","heading":"0.4.1.1 Windows","text":"","code":""},{"path":"index.html","id":"if-you-already-have-r-and-rstudio-installed","chapter":"About this book","heading":"0.4.1.1.1 If you already have R and RStudio installed","text":"Open RStudio, click “Help” > “Check updates”. new version \navailable, quit RStudio, download latest version RStudio.check version R using, start RStudio first thing\nappears console indicates version R \nrunning. Alternatively, can type sessionInfo(), also display\nversion R running. Go CRAN\nwebsite check whether \nrecent version available. , please download install . \ncan check \ninformation remove old versions system \nwish .","code":""},{"path":"index.html","id":"if-you-dont-have-r-and-rstudio-installed","chapter":"About this book","heading":"0.4.1.1.2 If you don’t have R and RStudio installed","text":"Download R \nCRAN website.Run .exe file just downloadedGo RStudio download pageUnder Installers select RStudio x.yy.zzz - Windows\nXP/Vista/7/8 (x, y, z represent version numbers)Double click file install itOnce ’s installed, open RStudio make sure works don’t get \nerror messages.","code":""},{"path":"index.html","id":"macos-mac-os-x","chapter":"About this book","heading":"0.4.1.2 macOS / Mac OS X","text":"","code":""},{"path":"index.html","id":"if-you-already-have-r-and-rstudio-installed-1","chapter":"About this book","heading":"0.4.1.2.1 If you already have R and RStudio installed","text":"Open RStudio, click “Help” > “Check updates”. new version \navailable, quit RStudio, download latest version RStudio.check version R using, start RStudio first thing\nappears terminal indicates version R running.\nAlternatively, can type sessionInfo(), also display \nversion R running. Go CRAN\nwebsite check whether \nrecent version available. , please download install .","code":""},{"path":"index.html","id":"if-you-dont-have-r-and-rstudio-installed-1","chapter":"About this book","heading":"0.4.1.2.2 If you don’t have R and RStudio installed","text":"Download R \nCRAN website.Select .pkg file latest R versionDouble click downloaded file install RIt also good idea install XQuartz (needed\npackages)Go RStudio download\npageUnder Installers select RStudio x.yy.zzz - Mac OS X 10.6+ (64-bit)\n(x, y, z represent version numbers)Double click file install RStudioOnce ’s installed, open RStudio make sure works don’t get \nerror messages.","code":""},{"path":"index.html","id":"linux","chapter":"About this book","heading":"0.4.1.3 Linux","text":"Follow instructions distribution\nCRAN, provide information\nget recent version R common distributions. \ndistributions, use package manager (e.g., Debian/Ubuntu run\nsudo apt-get install r-base, Fedora sudo yum install R), \ndon’t recommend approach versions provided \nusually date. case, make sure least R 3.3.1.Go RStudio download\npageUnder Installers select version matches distribution, \ninstall preferred method (e.g., Debian/Ubuntu sudo dpkg -rstudio-x.yy.zzz-amd64.deb terminal).’s installed, open RStudio make sure works don’t get \nerror messages.setup instructions adapted written Data Carpentry: R\nData Analysis Visualization Ecological\nData.","code":""},{"path":"robust.html","id":"robust","chapter":"1 Robust Statistics and Reproducible Science","heading":"1 Robust Statistics and Reproducible Science","text":"“One enemy robust science humanity — appetite \nright, tendency find patterns noise, see supporting\nevidence already believe true, ignore facts \nfit.”— Anonymous (2015)Scientific research unique point history. need improve rigor\nreproducibility field greater ever; corroboration moves\nscience forward, yet growing alarm results \nreproduced report false discoveries (Baker 2016). Consequences \nmeeting need result decline rate scientific\nprogression, reputation sciences, public’s trust \nfindings (Munafò et al. 2017; Editorial 2015).“key question want answer seeing results scientific\nstudy whether can trust data analysis.”— Peng (2015)Unfortunately, current state culture data analysis statistics\nactually enables human bias improper model selection. hypothesis\ntests estimators derived statistical models, obtain valid\nestimates inference critical statistical model contains \nprocess generated data. Perhaps treatment randomized \ndepended small number baseline covariates; knowledge \ncan incorporated model. Alternatively, maybe data \nobservational, knowledge data-generating process (DGP).\ncase, statistical model contain data\ndistributions. practice; however, models selected based knowledge\nDGP, instead models often selected based (1) p-values \nyield, (2) convenience implementation, /(3) analysts loyalty\nparticular model. practice “cargo-cult statistics — \nritualistic miming statistics rather conscientious practice,”\n(Stark Saltelli 2018) characterized arbitrary modeling choices, even though\nchoices often result different answers research question.\n, “increasingly often, [statistics] used instead aid \nabet weak science, role can perform well used mechanically \nritually,” opposed original purpose safeguarding weak\nscience (Stark Saltelli 2018). presents fundamental drive behind epidemic\nfalse findings scientific research suffering (van der Laan Starmans 2014).“suggest weak statistical understanding probably due \ninadequate”statistics lite\" education. approach build \nappropriate mathematical fundamentals provide scientifically\nrigorous introduction statistics. Hence, students’ knowledge may remain\nimprecise, patchy, prone serious misunderstandings. approach\nachieves, however, providing students false confidence able\nuse inferential tools whereas usually interpret p-value\nprovided black box statistical software. educational problem\nremains unaddressed, poor statistical practices prevail regardless \nprocedures measures may favored /banned editorials.\"— Szucs Ioannidis (2017)team University California, Berkeley, uniquely positioned \nprovide education. Spearheaded Professor Mark van der Laan, \nspreading rapidly many students colleagues greatly\nenriched field, aptly named “Targeted Learning” methodology targets \nscientific question hand counter current culture \n“convenience statistics” opens door biased estimation, misleading\nresults, false discoveries. Targeted Learning restores fundamentals \nformalized field statistics, facts statistical\nmodel represents real knowledge experiment generated data,\ntarget parameter represents seeking learn data \nfeature distribution generated (van der Laan Starmans 2014). way,\nTargeted Learning defines truth establishes principled standard \nestimation, thereby inhibiting --human biases (e.g., hindsight bias,\nconfirmation bias, outcome bias) infiltrating analysis.“key effective classical [statistical] inference \nwell-defined questions analysis plan tests questions.”— Nosek et al. (2018)objective handbook provide training students, researchers,\nindustry professionals, faculty science, public health, statistics, \nfields empower necessary knowledge skills utilize \nsound methodology Targeted Learning — technique provides tailored\npre-specified machines answering queries, data analysis \ncompletely reproducible, estimators efficient, minimally biased, \nprovide formal statistical inference.Just conscientious use modern statistical methodology necessary \nensure scientific practice thrives, remains critical acknowledge \nrole robust software plays allowing practitioners direct access \npublished results. recall “article…scientific publication \nscholarship , merely advertising scholarship. \nactual scholarship complete software development environment \ncomplete set instructions generated figures,” thus making \navailability adoption robust statistical software key enhancing \ntransparency inherent aspect science (Buckheit Donoho 1995).statistical methodology readily accessible practice, \ncrucial accompanied robust user-friendly software\n(Pullenayegum et al. 2016; Stromberg others 2004). tlverse software\necosystem developed fulfill need Targeted Learning\nmethodology. software facilitate computationally reproducible\nefficient analyses, also tool Targeted Learning education since\nworkflow mirrors methodology. particular, tlverse\nparadigm focus implementing specific estimator small set \nrelated estimators. Instead, focus exposing statistical framework\nTargeted Learning — R packages tlverse ecosystem\ndirectly model key objects defined mathematical theoretical\nframework Targeted Learning. ’s , tlverse R packages share \ncore set design principles centered extensibility, allowing \nused conjunction built upon one cohesive\nfashion. introduction Targeted Learning, recommend recent\nreview paper Coyle et al. (2021).handbook, reader embark journey tlverse\necosystem. Guided R programming exercises, case studies, \nintuitive explanation readers build toolbox applying Targeted\nLearning statistical methodology, translate real-world causal\ninference analyses. preliminaries required prior learning\nendeavor – made available list recommended learning\nresources.","code":""},{"path":"intro.html","id":"intro","chapter":"2 The Roadmap for Targeted Learning","heading":"2 The Roadmap for Targeted Learning","text":"","code":""},{"path":"intro.html","id":"learning-objectives","chapter":"2 The Roadmap for Targeted Learning","heading":"Learning Objectives","text":"end chapter able :Translate scientific questions statistical questions.Define statistical model based knowledge experiment \ngenerated data.Identify causal parameter function observed data distribution.Explain following causal statistical assumptions \nimplications: ..d., consistency, interference, positivity, SUTVA.","code":""},{"path":"intro.html","id":"introduction","chapter":"2 The Roadmap for Targeted Learning","heading":"Introduction","text":"roadmap statistical learning concerned translation \nreal-world data applications mathematical statistical formulation \nrelevant estimation problem. involves data random variable \nprobability distribution, scientific knowledge represented statistical\nmodel, statistical target parameter representing answer question \ninterest, notion estimator sampling distribution \nestimator.","code":""},{"path":"intro.html","id":"roadmap","chapter":"2 The Roadmap for Targeted Learning","heading":"2.1 The Roadmap","text":"Following roadmap process five stages.Data random variable probability distribution, \\(O \\sim P_0\\).statistical model \\(\\M\\) \\(P_0 \\\\M\\).statistical target parameter \\(\\Psi\\) estimand \\(\\Psi(P_0)\\).estimator \\(\\hat{\\Psi}\\) estimate \\(\\hat{\\Psi}(P_n)\\).measure uncertainty estimate \\(\\hat{\\Psi}(P_n)\\).","code":""},{"path":"intro.html","id":"data-a-random-variable-with-a-probability-distribution-o-sim-p_0","chapter":"2 The Roadmap for Targeted Learning","heading":"(1) Data: A random variable with a probability distribution, \\(O \\sim P_0\\)","text":"data set ’re confronted result experiment can\nview data random variable, \\(O\\), repeat experiment\ndifferent realization experiment. particular, \nrepeat experiment many times learn probability distribution,\n\\(P_0\\), data. , observed data \\(O\\) probability distribution\n\\(P_0\\) \\(n\\) independent identically distributed (..d.) observations \nrandom variable \\(O; O_1, \\ldots, O_n\\). Note data ..d.,\nways handle non-..d. data, establishing conditional\nindependence, stratifying data create sets identically distributed data,\netc. crucial researchers absolutely clear actually\nknow data-generating distribution given problem interest.\nUnfortunately, communication statisticians researchers often\nfraught misinterpretation. roadmap provides mechanism \nensure clear communication research statistician – truly helps\ncommunication!","code":""},{"path":"intro.html","id":"the-empirical-probability-measure-p_n","chapter":"2 The Roadmap for Targeted Learning","heading":"The empirical probability measure, \\(P_n\\)","text":"\\(n\\) ..d. observations empirical probability\nmeasure, \\(P_n\\). empirical probability measure approximation \ntrue probability measure \\(P_0\\), allowing us learn data. \nexample, can define empirical probability measure set, \\(\\), \nproportion observations end \\(\\). ,\n\\[\\begin{equation*}\n  P_n() = \\frac{1}{n}\\sum_{=1}^{n} \\(O_i \\)\n\\end{equation*}\\]order start learning something, need ask “know \nprobability distribution data?” brings us Step 2.","code":""},{"path":"intro.html","id":"the-statistical-model-m-such-that-p_0-in-m","chapter":"2 The Roadmap for Targeted Learning","heading":"(2) The statistical model \\(\\M\\) such that \\(P_0 \\in \\M\\)","text":"statistical model \\(\\M\\) defined question asked end \nStep 1. defined set possible probability distributions \nobserved data. Often \\(\\M\\) large (possibly infinite-dimensional), \nreflect fact statistical knowledge limited. case \\(\\M\\) \ninfinite-dimensional, deem nonparametric statistical model.Alternatively, probability distribution data hand described\nfinite number parameters, statistical model parametric. \ncase, subscribe belief random variable \\(O\\) \nobserved , example, normal distribution mean \\(\\mu\\) variance\n\\(\\sigma^2\\). Formally, parametric model may defined\n\\[\\begin{equation*}\n  \\M = \\{P_{\\theta} : \\theta \\\\R^d \\}\n\\end{equation*}\\]Sadly, assumption data-generating distribution specific,\nparametric form common, especially since leap faith \nassumption made convenience. practice oversimplification \ncurrent culture data analysis typically derails attempt trying \nanswer scientific question hand; alas, statements \never-popular quip Box “models wrong useful”\nencourage data analyst make arbitrary choices even practice\noften forces starkly different answers estimation problem. \nTargeted Learning paradigm suffer bias since defines \nstatistical model representation true data-generating\ndistribution corresponding observed data.Now, Step 3: “trying learn data?”","code":""},{"path":"intro.html","id":"the-statistical-target-parameter-psi-and-estimand-psip_0","chapter":"2 The Roadmap for Targeted Learning","heading":"(3) The statistical target parameter \\(\\Psi\\) and estimand \\(\\Psi(P_0)\\)","text":"statistical target parameter, \\(\\Psi\\), defined mapping \nstatistical model, \\(\\M\\), parameter space (.e., real number) \\(\\R\\). \n, \\(\\Psi: \\M \\rightarrow \\R\\). estimand may seen representation \nquantity wish learn data, answer well-specified\n(often causal) question interest. contrast purely statistical\nestimands, causal estimands require identification observed data,\nbased causal models include several untestable assumptions, described \ndetail section causal target parameters.simple example, consider data set contains observations \nsurvival time every subject, question interest “’s\nprobability someone lives longer five years?” ,\n\\[\\begin{equation*}\n  \\Psi(P_0) = \\P(O > 5)\n\\end{equation*}\\]answer question estimand, \\(\\Psi(P_0)\\), \nquantity ’re trying learn data. defined \\(O\\), \\(\\M\\) \n\\(\\Psi(P_0)\\) formally defined statistical estimation problem.","code":""},{"path":"intro.html","id":"the-estimator-hatpsi-and-estimate-hatpsip_n","chapter":"2 The Roadmap for Targeted Learning","heading":"(4) The estimator \\(\\hat{\\Psi}\\) and estimate \\(\\hat{\\Psi}(P_n)\\)","text":"obtain good approximation estimand, need estimator, \npriori-specified algorithm defined mapping set possible\nempirical distributions, \\(P_n\\), live non-parametric statistical\nmodel, \\(\\M_{NP}\\) (\\(P_n \\\\M_{NP}\\)), parameter space parameter \ninterest. , \\(\\hat{\\Psi} : \\M_{NP} \\rightarrow \\R^d\\). estimator \nfunction takes input observed data, realization \\(P_n\\), \ngives output value parameter space, estimate,\n\\(\\hat{\\Psi}(P_n)\\).estimator may seen operator maps observed data \ncorresponding empirical distribution value parameter space, \nnumerical output produced function estimate. Thus, \nelement parameter space based empirical probability distribution\nobserved data. plug realization \\(P_n\\) (based sample\nsize \\(n\\) random variable \\(O\\)), get back estimate \\(\\hat{\\Psi}(P_n)\\)\ntrue parameter value \\(\\Psi(P_0)\\).order quantify uncertainty estimate target parameter\n(.e., construct statistical inference), understanding sampling\ndistribution estimator necessary. brings us Step 5.","code":""},{"path":"intro.html","id":"a-measure-of-uncertainty-for-the-estimate-hatpsip_n","chapter":"2 The Roadmap for Targeted Learning","heading":"(5) A measure of uncertainty for the estimate \\(\\hat{\\Psi}(P_n)\\)","text":"Since estimator \\(\\hat{\\Psi}\\) function empirical distribution\n\\(P_n\\), estimator random variable sampling distribution.\n, repeat experiment drawing \\(n\\) observations every time\nend different realization estimate estimator \nsampling distribution. sampling distribution estimators can \ntheoretically validated approximately normally distributed Central\nLimit Theorem (CLT).Central Limit Theorem (CLTs) statement regarding convergence \nsampling distribution estimator normal distribution. \ngeneral, construct estimators whose limit sampling distributions may \nshown approximately normal distributed sample size increases. large\nenough \\(n\\) ,\n\\[\\begin{equation*}\n  \\hat{\\Psi}(P_n) \\sim N \\left(\\Psi(P_0), \\frac{\\sigma^2}{n}\\right),\n\\end{equation*}\\]\npermitting statistical inference. Now, can proceed quantify \nuncertainty chosen estimator construction hypothesis tests \nconfidence intervals. example, may construct confidence interval \nlevel \\((1 - \\alpha)\\) estimand, \\(\\Psi(P_0)\\):\n\\[\\begin{equation*}\n  \\hat{\\Psi}(P_n) \\pm z_{1 - \\frac{\\alpha}{2}}\n    \\left(\\frac{\\sigma}{\\sqrt{n}}\\right),\n\\end{equation*}\\]\n\\(z_{1 - \\frac{\\alpha}{2}}\\) \\((1 - \\frac{\\alpha}{2})^\\text{th}\\)\nquantile standard normal distribution. Often, interested \nconstructing 95% confidence intervals, corresponding mass \\(\\alpha = 0.05\\) \neither tail limit distribution; thus, typically take\n\\(z_{1 - \\frac{\\alpha}{2}} \\approx 1.96\\).Note: typically estimate standard error,\n\\(\\frac{\\sigma}{\\sqrt{n}}\\).95% confidence interval means take 100 different samples\nsize \\(n\\) compute 95% confidence interval sample, \napproximately 95 100 confidence intervals contain estimand,\n\\(\\Psi(P_0)\\). practically, means 95% probability\nconfidence interval procedure generates intervals containing \ntrue estimand value (95% confidence “covering” true value). ,\nsingle estimated confidence interval either contain true estimand\n(also called “coverage”).","code":""},{"path":"intro.html","id":"roadmap-summary","chapter":"2 The Roadmap for Targeted Learning","heading":"2.2 Summary of the Roadmap","text":"Data, \\(O\\), viewed random variable probability distribution.\noften \\(n\\) units independent identically distributed units \nprobability distribution \\(P_0\\), \\(O_1, \\ldots, O_n \\sim P_0\\). \nstatistical knowledge experiment generated data. \nwords, make statement true data distribution \\(P_0\\) falls \ncertain set called statistical model, \\(\\M\\). Often sets large\nstatistical knowledge limited - hence, statistical models\noften infinite dimensional models. statistical query , “\ntrying learn data?” denoted statistical target parameter,\n\\(\\Psi\\), maps \\(P_0\\) estimand, \\(\\Psi(P_0)\\). point \nstatistical estimation problem formally defined now need\nstatistical theory guide us construction estimators. ’s lot\nstatistical theory review course , particular, relies\nCentral Limit Theorem, allowing us come estimators \napproximately normally distributed also allowing us come statistical\ninference (.e., confidence intervals hypothesis tests).","code":""},{"path":"intro.html","id":"causal","chapter":"2 The Roadmap for Targeted Learning","heading":"2.3 Causal Target Parameters","text":"many cases, interested problems ask questions regarding \neffect intervention future outcome interest. questions can\nrepresented causal estimands.","code":""},{"path":"intro.html","id":"the-causal-model","chapter":"2 The Roadmap for Targeted Learning","heading":"The Causal Model","text":"formalizing data statistical model, can define causal\nmodel express causal parameters interest. Directed acyclic graphs (DAGs)\none useful tool express know causal relations among\nvariables. Ignoring exogenous \\(U\\) terms (explained ), assume \nfollowing ordering variables observed data \\(O\\). \nusing DAGitty (Textor, Hardt, Knüppel 2011):directed acyclic graphs (DAGs) like provide convenient means \nvisualize causal relations variables, causal relations\namong variables can represented via set structural equations, \ndefine non-parametric structural equation model (NPSEM):\n\\[\\begin{align*}\n  W &= f_W(U_W) \\\\\n  &= f_A(W, U_A) \\\\\n  Y &= f_Y(W, , U_Y),\n\\end{align*}\\]\n\\(U_W\\), \\(U_A\\), \\(U_Y\\) represent unmeasured exogenous background\ncharacteristics influence value variable. NPSEM, \\(f_W\\),\n\\(f_A\\) \\(f_Y\\) denote variable (\\(W\\), \\(\\) \\(Y\\), respectively)\nfunction parents unmeasured background characteristics, note\nimposition particular functional constraints(e.g.,\nlinear, logit-linear, one interaction, etc.). reason, \ncalled non-parametric structural equation models (NPSEMs). DAG set \nnonparametric structural equations represent exactly information \nmay used interchangeably.first hypothetical experiment consider assigning exposure \nwhole population observing outcome, assigning exposure \nwhole population observing outcome. nonparametric structural\nequations, corresponds comparison outcome distribution \npopulation two interventions:\\(\\) set \\(1\\) individuals, \\(\\) set \\(0\\) individuals.interventions imply two new nonparametric structural equation models. \ncase \\(= 1\\), \n\\[\\begin{align*}\n  W &= f_W(U_W) \\\\\n  &= 1 \\\\\n  Y(1) &= f_Y(W, 1, U_Y),\n\\end{align*}\\]\ncase \\(=0\\),\n\\[\\begin{align*}\n  W &= f_W(U_W) \\\\\n  &= 0 \\\\\n  Y(0) &= f_Y(W, 0, U_Y).\n\\end{align*}\\]equations, \\(\\) longer function \\(W\\) \nintervened system, setting \\(\\) deterministically either values\n\\(1\\) \\(0\\). new symbols \\(Y(1)\\) \\(Y(0)\\) indicate outcome variable \npopulation generated respective NPSEMs ; \noften called counterfactuals (since run contrary--fact). difference\nmeans outcome two interventions defines \nparameter often called “average treatment effect” (ATE), denoted\n\\[\\begin{equation}\n  ATE = \\E_X(Y(1) - Y(0)),\n  \\tag{2.1}\n\\end{equation}\\]\n\\(\\E_X\\) mean theoretical (unobserved) full data \\(X = (W, Y(1), Y(0))\\).Note, can define much complicated interventions NPSEM’s, \ninterventions based upon rules (based upon covariates), stochastic\nrules, etc. results different targeted parameter entails\ndifferent identifiability assumptions discussed .","code":"\nlibrary(dagitty)\nlibrary(ggdag)\n\n# make DAG by specifying dependence structure\ndag <- dagitty(\n  \"dag {\n    W -> A\n    W -> Y\n    A -> Y\n    W -> A -> Y\n  }\"\n)\nexposures(dag) <- c(\"A\")\noutcomes(dag) <- c(\"Y\")\ntidy_dag <- tidy_dagitty(dag)\n\n# visualize DAG\nggdag(tidy_dag) +\n  theme_dag()"},{"path":"intro.html","id":"identifiability","chapter":"2 The Roadmap for Targeted Learning","heading":"Identifiability","text":"can never observe \\(Y(0)\\) (counterfactual outcome \\(=0\\))\n\\(Y(1)\\) (similarly, counterfactual outcome \\(=1\\)), \nestimate quantity Equation (2.1) directly. Instead, \nmake assumptions quantity may estimated observed\ndata \\(O \\sim P_0\\) data-generating distribution \\(P_0\\). Fortunately,\ngiven causal model specified NPSEM , can, handful \nuntestable assumptions, estimate ATE, even observational data. \nassumptions may summarized follows.causal graph implies \\(Y() \\perp \\) \\(\\\\mathcal{}\\), \nrandomization assumption. case observational data, \nanalogous assumption strong ignorability unmeasured confounding\n\\(Y() \\perp \\mid W\\) \\(\\\\mathcal{}\\);Although represented causal graph, also required assumption\ninterference units, , outcome unit \\(\\) \\(Y_i\\) \naffected exposure unit \\(j\\) \\(A_j\\) unless \\(=j\\);Consistency treatment mechanism also required, .e., outcome\nunit \\(\\) \\(Y_i()\\) whenever \\(A_i = \\), assumption also known “\nversions treatment”;also necessary observed units, across strata defined \\(W\\),\nbounded (non-deterministic) probability receiving treatment –\n, \\(0 < \\P(= \\mid W) < 1\\) \\(\\) \\(W\\)). assumption\nreferred positivity overlap.Remark: Together, (2) (3), assumptions interference \nconsistency, respectively, jointly referred stable unit\ntreatment value assumption (SUTVA).Given assumptions, ATE may re-written function \\(P_0\\),\nspecifically\n\\[\\begin{equation}\n  ATE = \\E_0(Y(1) - Y(0)) = \\E_0\n    \\left(\\E_0[Y \\mid = 1, W] - \\E_0[Y \\mid = 0, W]\\right).\n  \\tag{2.2}\n\\end{equation}\\]\nwords, ATE difference predicted outcome values \nsubject, contrast treatment conditions (\\(= 0\\) versus \\(= 1\\)),\npopulation, averaged observations. Thus, parameter \ntheoretical “full” data distribution can represented estimand \nobserved data distribution. Significantly, nothing \nrepresentation Equation (2.2) requires parameteric\nassumptions; thus, regressions right hand side may estimated\nfreely machine learning. different parameters, \npotentially different identifiability assumptions resulting estimands\ncan functions different components \\(P_0\\). discuss several \ncomplex estimands later sections handbook.","code":""},{"path":"tlverse.html","id":"tlverse","chapter":"3 Welcome to the tlverse","heading":"3 Welcome to the tlverse","text":"","code":""},{"path":"tlverse.html","id":"learning-objectives-1","chapter":"3 Welcome to the tlverse","heading":"Learning Objectives","text":"Understand tlverse ecosystem conceptuallyIdentify core components tlverseInstall tlverse R packagesUnderstand Targeted Learning roadmapLearn WASH Benefits example data","code":""},{"path":"tlverse.html","id":"what-is-the-tlverse","chapter":"3 Welcome to the tlverse","heading":"What is the tlverse?","text":"tlverse new framework Targeted Learning R, inspired \ntidyverse ecosystem R packages.analogy tidyverse:tidyverse opinionated collection R packages designed data\nscience. packages share underlying design philosophy, grammar, data\nstructures., tlverse isan opinionated collection R packages Targeted Learningsharing underlying philosophy, grammar, set data structures","code":""},{"path":"tlverse.html","id":"anatomy-of-the-tlverse","chapter":"3 Welcome to the tlverse","heading":"Anatomy of the tlverse","text":"main packages represent core tlverse:sl3: Modern Super Learning Pipelines\n? modern object-oriented re-implementation Super Learner\nalgorithm, employing recently developed paradigms R programming.\n? design leverages modern tools fast computation, \nforward-looking, can form one cornerstones tlverse.\n? modern object-oriented re-implementation Super Learner\nalgorithm, employing recently developed paradigms R programming.? design leverages modern tools fast computation, \nforward-looking, can form one cornerstones tlverse.tmle3: Engine Targeted Learning\n? generalized framework simplifies Targeted Learning \nidentifying implementing series common statistical estimation\nprocedures.\n? common interface engine accommodates current algorithmic\napproaches Targeted Learning still flexible enough remain \nengine even new techniques developed.\n? generalized framework simplifies Targeted Learning \nidentifying implementing series common statistical estimation\nprocedures.? common interface engine accommodates current algorithmic\napproaches Targeted Learning still flexible enough remain \nengine even new techniques developed.addition engines drive development tlverse, \nsupporting packages – particular, two…origami: Generalized Framework \nCross-Validation\n? generalized framework flexible cross-validation\n? Cross-validation key part ensuring error estimates honest\npreventing overfitting. essential part Super\nLearner algorithm Targeted Learning.\n? generalized framework flexible cross-validationWhy? Cross-validation key part ensuring error estimates honest\npreventing overfitting. essential part Super\nLearner algorithm Targeted Learning.delayed: Parallelization Framework \nDependent Tasks\n? framework delayed computations (futures) based task\ndependencies.\n? Efficient allocation compute resources essential deploying\nlarge-scale, computationally intensive algorithms.\n? framework delayed computations (futures) based task\ndependencies.? Efficient allocation compute resources essential deploying\nlarge-scale, computationally intensive algorithms.key principle tlverse extensibility. , want support\nnew Targeted Learning estimators developed. model \nnew estimators implemented additional packages using core packages\n. currently two featured examples :tmle3mopttx: Optimal Treatments\ntlverse\n? Learn optimal rule estimate mean outcome rule\n? Optimal Treatment powerful tool precision healthcare \nsettings one-size-fits-treatment approach \nappropriate.\n? Learn optimal rule estimate mean outcome ruleWhy? Optimal Treatment powerful tool precision healthcare \nsettings one-size-fits-treatment approach \nappropriate.tmle3shift: Shift Interventions \ntlverse\n? Shift interventions continuous treatments\n? treatment variables discrete. able estimate \neffects continuous treatment represents powerful extension \nTargeted Learning approach.\n? Shift interventions continuous treatmentsWhy? treatment variables discrete. able estimate \neffects continuous treatment represents powerful extension \nTargeted Learning approach.","code":""},{"path":"tlverse.html","id":"installtlverse","chapter":"3 Welcome to the tlverse","heading":"3.1 Installation","text":"tlverse ecosystem packages currently hosted \nhttps://github.com/tlverse, yet CRAN. \ncan use usethis package install :tlverse depends large number packages also hosted\nGitHub. , may see following error:just means R tried install many packages GitHub \nshort window. fix , need tell R use GitHub \nuser (’ll need GitHub user account). Follow two steps:Type usethis::browse_github_pat() R console, direct\nGitHub’s page create New Personal Access Token (PAT).Create PAT simply clicking “Generate token” bottom page.Copy PAT, long string lowercase letters numbers.Type usethis::edit_r_environ() R console, open \n.Renviron file source window RStudio.\n.Renviron file pop-calling\nusethis::edit_r_environ(); try inputting\nSys.setenv(GITHUB_PAT = \"yourPAT\"), replacing PAT inside \nquotes. error, skip step 8.\nType usethis::edit_r_environ() R console, open \n.Renviron file source window RStudio..Renviron file pop-calling\nusethis::edit_r_environ(); try inputting\nSys.setenv(GITHUB_PAT = \"yourPAT\"), replacing PAT inside \nquotes. error, skip step 8..Renviron file, type GITHUB_PAT= paste PAT \nequals symbol space..Renviron file, press enter key ensure .Renviron\nends new line.Save .Renviron file. example shows syntax \nlook.Save .Renviron file. example shows syntax \nlook.Restart R. can restart R via drop-menu RStudio’s “Session”\ntab, located top RStudio interface. \nrestart R changes take effect!following steps, able successfully install \npackage threw error .","code":"\ninstall.packages(\"devtools\")\ndevtools::install_github(\"tlverse/tlverse\")Error: HTTP error 403.\n  API rate limit exceeded for 71.204.135.82. (But here's the good news:\n  Authenticated requests get a higher rate limit. Check out the documentation\n  for more details.)\n\n  Rate limit remaining: 0/60\n  Rate limit reset at: 2019-03-04 19:39:05 UTC\n\n  To increase your GitHub API rate limit\n  - Use `usethis::browse_github_pat()` to create a Personal Access Token.\n  - Use `usethis::edit_r_environ()` and add the token as `GITHUB_PAT`.\nGITHUB_PAT=yourPAT"},{"path":"data.html","id":"data","chapter":"4 Meet the Data","heading":"4 Meet the Data","text":"","code":""},{"path":"data.html","id":"wash","chapter":"4 Meet the Data","heading":"4.1 WASH Benefits Example Dataset","text":"data come study effect water quality, sanitation, hand\nwashing, nutritional interventions child development rural Bangladesh\n(WASH Benefits Bangladesh): cluster randomized controlled trial\n(Tofail et al. 2018). study enrolled pregnant women first second\ntrimester rural villages Gazipur, Kishoreganj, Mymensingh, \nTangail districts central Bangladesh, average eight women per\ncluster. Groups eight geographically adjacent clusters block randomized,\nusing random number generator, six intervention groups (\nreceived weekly visits community health promoter first 6 months\nevery 2 weeks next 18 months) double-sized control group (\nintervention health promoter visit). six intervention groups :chlorinated drinking water;improved sanitation;hand-washing soap;combined water, sanitation, hand washing;improved nutrition counseling provision lipid-based nutrient\nsupplements; andcombined water, sanitation, handwashing, nutrition.handbook, concentrate child growth (size age) outcome \ninterest. reference, trial registered ClinicalTrials.gov \nNCT01590095.purposes handbook, start treating data independent\nidentically distributed (..d.) random draws large target\npopulation. , available options, account clustering \ndata (within sampled geographic units), , simplification, avoid \ndetails handbook, although modifications methodology biased\nsamples, repeated measures, related complications, available.28 variables measured, single variable set \noutcome interest. outcome, \\(Y\\), weight--height Z-score\n(whz dat); treatment interest, \\(\\), randomized treatment\ngroup (tr dat); adjustment set, \\(W\\), consists simply \neverything else. results observed data structure \\(n\\) ..d.\ncopies \\(O_i = (W_i, A_i, Y_i)\\), \\(= 1, \\ldots, n\\).Using skimr package, can\nquickly summarize variables measured WASH Benefits data set:(#tab:skim_washb_data)Data summaryVariable type: characterVariable type: numericA convenient summary relevant variables given just , complete\nsmall visualization describing marginal characteristics \ncovariate. Note asset variables reflect socio-economic status \nstudy participants. Notice also uniform distribution treatment groups\n(twice many controls); , course, design.","code":"\nlibrary(readr)\n# read in data via readr::read_csv\ndat <- read_csv(\n  paste0(\n    \"https://raw.githubusercontent.com/tlverse/tlverse-data/master/\",\n    \"wash-benefits/washb_data.csv\"\n  )\n)"},{"path":"data.html","id":"ist","chapter":"4 Meet the Data","heading":"4.2 International Stroke Trial Example Dataset","text":"International Stroke Trial database contains individual patient data \nInternational Stroke Trial (IST), multi-national randomized trial\nconducted 1991 1996 (pilot phase 1991 1993) aimed\nassess whether early administration aspirin, heparin, aspirin \nheparin, neither influenced clinical course acute ischaemic stroke\n(Sandercock et al. 1997). IST dataset includes data 19,435 patients\nacute stroke, 99% complete follow-. De-identified data \navailable download https://datashare..ed.ac.uk/handle/10283/128. \nstudy described detail Sandercock, Niewada, Członkowska (2011). example\ndata handbook considers sample 5,000 patients binary\noutcome recurrent ischemic stroke within 14 days randomization. Also\nexample data, ensure subjects missing outcome.26 variables measured, outcome interest, \\(Y\\),\nindicates recurrent ischemic stroke within 14 days randomization (DRSISC\nist); treatment interest, \\(\\), randomized aspirin vs. \naspirin treatment allocation (RXASP ist); adjustment set, \\(W\\),\nconsists variables measured baseline. data, outcome\noccasionally missing, need create variable indicating\nmissingness (\\(\\Delta\\)) analyses tlverse, since \nautomatically detected NA present outcome. observed data\nstructure can denoted \\(n\\) ..d. copies \\(O_i = (W_i, A_i, \\Delta_i, \\Delta Y_i)\\), \\(= 1, \\ldots, n\\), \\(\\Delta\\) denotes binary\nindicator outcome observed.Like , can summarize variables measured IST sample data set\nskimr:(#tab:skim_ist_data)Data summaryVariable type: characterVariable type: numeric","code":"\n# read in data\nist <- read_csv(\n  paste0(\n    \"https://raw.githubusercontent.com/tlverse/tlverse-handbook/master/\",\n    \"data/ist_sample.csv\"\n  )\n)"},{"path":"data.html","id":"NHEFS","chapter":"4 Meet the Data","heading":"4.3 NHANES I Epidemiologic Follow-up Study (NHEFS)","text":"data National Health Nutrition Examination Survey (NHANES)\nData Epidemiologic Follow-Study. coming soon.snapshot data set shown :(#tab:skim_nhefs_data)Data summaryVariable type: numeric","code":"\n# read in data\nnhefs_data <- read_csv(\n  paste0(\n    \"https://raw.githubusercontent.com/tlverse/tlverse-handbook/master/\",\n    \"data/NHEFS.csv\"\n  )\n)"},{"path":"origami.html","id":"origami","chapter":"5 Cross-validation","heading":"5 Cross-validation","text":"Ivana MalenicaBased origami R package\nJeremy Coyle, Nima Hejazi, Ivana Malenica Rachael Phillips.Updated: 2021-04-04","code":""},{"path":"origami.html","id":"learning-objectives-2","chapter":"5 Cross-validation","heading":"5.1 Learning Objectives","text":"Differentiate training, validation test sets.Understand concept loss function, risk cross-validation.Select loss function appropriate functional parameter \nestimated.Understand contrast different cross-validation schemes ..d. data.Understand contrast different cross-validation schemes time dependent\ndata.Setup proper fold structure, build custom fold-based function, \ncross-validate proposed function using origami R package.Setup proper cross-validation structure use Super Learner\nusing origami R package.","code":""},{"path":"origami.html","id":"introduction-1","chapter":"5 Cross-validation","heading":"5.2 Introduction","text":"chapter, start elaborating estimation step outlined \nintroductory chapter, discussed Roadmap Targeted\nLearning. order generate initial estimate target\nparameter – focus following chapter Super\nLearning, first need translate, incorporate, knowledge\ndata generating process estimation procedure, decide \nevaluate estimation performance.performance, error, algorithm used estimation procedure\ndirectly relates generalizability independent data. proper\nassessment performance proposed algorithms extremely important; \nguides choice final learning method, gives us quantitative\nassessment good chosen algorithm . order assess \nperformance algorithm, introduce concept loss function,\nhelps us define risk, also referred expected\nprediction error. goal, specified next chapter, \nestimate true risk proposed statistical learning method. \ngoal(s) consist :Estimating performance different algorithms order choose \nbest one.chosen winner, try estimate true risk proposed\nstatistical learning method.following, propose method using observed data \ncross-validation procedure using origami package (Coyle Hejazi 2018).","code":""},{"path":"origami.html","id":"background","chapter":"5 Cross-validation","heading":"5.3 Background","text":"Ideally, data-rich scenario, split dataset three parts:training set,validation set,test set.training set used fit algorithm(s) interest; evaluate \nperformance fit(s) validation set, can used estimate\nprediction error (e.g., tuning model selection). final error \nchosen algorithm(s) obtained using test set, kept separately,\ndoesn’t see data final evaluation. One might wonder, \ntraining data readily available, use training error evaluate \nproposed algorithm’s performance? Unfortunately, training error \ngood estimate true risk; consistently decreases model complexity,\nresulting possible overfit training data low generalizability.Since data often scarce, separating training, validation test\nset usually possible. absence large data set designated\ntest set, must resort methods estimate true risk efficient\nsample re-use. Re-sampling methods, great generality, involve repeatedly\nsampling training set fitting proposed algorithms new\nsamples. often computationally intensive, re-sampling methods \nparticularly useful model selection estimation true risk. \naddition, might provide insight variability robustness \nalgorithm fit fitting algorithm training data.","code":""},{"path":"origami.html","id":"introducing-cross-validation","chapter":"5 Cross-validation","heading":"5.3.1 Introducing: cross-validation","text":"chapter, focus cross-validation – essential tool \nevaluating given algorithm extends sample target\npopulation sample derived. seen widespread application\nfacets statistics, perhaps notably statistical machine learning.\ncross-validation procedure can used model selection, well \nestimation true risk associated statistical learning method \norder evaluate performance. particular, cross-validation directly\nestimates true risk estimate applied independent sample\njoint distribution predictors outcome. used model\nselection, cross-validation powerful optimality properties. asymptotic\noptimality results state cross-validated selector performs (terms \nrisk) asymptotically well optimal oracle selector based true,\nunknown data generating distribution. details theoretical\nresults, suggest van der Laan, Dudoit, Keles (2004), Dudoit van der Laan (2005) \nVan der Vaart, Dudoit, Laan (2006).great generality, cross-validation works partitioning sample \ncomplementary subsets, applying particular algorithm(s) subset (\ntraining set), evaluating method choice complementary subset\n(validation/test set). procedure repeated across multiple partitions\ndata. variety different partitioning schemes exist, depending \nproblem interest, data size, prevalence outcome, dependence\nstructure. origami package provides suite tools generalize \napplication cross-validation arbitrary data analytic procedures. \nfollowing, describe different types cross-validation schemes readily\navailable origami, introduce general structure origami\npackage, show use applied settings.","code":""},{"path":"origami.html","id":"estimation-roadmap-how-does-it-all-fit-together","chapter":"5 Cross-validation","heading":"5.4 Estimation Roadmap: how does it all fit together?","text":"Similarly defined Roadmap Targeted Learning, \ncan define Estimation Roadmap guide estimation process. \nparticular, developed unified loss-based cross-validation methodology\nestimator construction, selection, performance assessment series \narticles (e.g., see van der Laan, Dudoit, Keles (2004), Dudoit van der Laan (2005),\nVan der Vaart, Dudoit, Laan (2006), van der Laan, Polley, Hubbard (2007)) follow three main steps:loss funtion:\nDefine target parameter minimizer expected loss (risk) \nfull data loss function chosen represent desired performance measure.\nMap full data loss function observed data loss function, \nexpected value leading efficient estimator risk.loss funtion:\nDefine target parameter minimizer expected loss (risk) \nfull data loss function chosen represent desired performance measure.\nMap full data loss function observed data loss function, \nexpected value leading efficient estimator risk.algorithms:\nConstruct finite collection candidate estimators parameter \ninterest.algorithms:\nConstruct finite collection candidate estimators parameter \ninterest.cross-validation scheme:\nApply appropriate cross-validation select optimal estimator among \ncandidates, assess overall performance resulting estimator.cross-validation scheme:\nApply appropriate cross-validation select optimal estimator among \ncandidates, assess overall performance resulting estimator.Step 1 Estimation Roadmap allows us unify broad range problems\ntraditionally treated separately statistical literature,\nincluding density estimation, prediction polychotomous continuous\noutcomes. example, interested estimating full joint\nconditional density, use negative log-likelihood loss. instead\ninterested conditional mean continuous outcome, one use\nsquared error loss; outcome binary, one resort \nindicator (0-1) loss. unified loss-based framework also reconciles censored\nfull data estimation methods, full data estimators recovered \nspecial cases censored data estimators.","code":""},{"path":"origami.html","id":"example-cross-validation-and-prediction","chapter":"5 Cross-validation","heading":"5.5 Example: cross-validation and prediction","text":"Now introduced Estimation Roadmap, can define objective \nmathematical notation, using prediction example. Let observed\ndata defined \\(X = (W,Y)\\), unit specific data can written \n\\(X_i = (W_i,Y_i)\\), \\(= 1, \\ldots, n\\). \\(n\\) samples, \ndenote \\(Y_i\\) outcome interest (polychotomous continuous), \\(W_i\\)\n\\(p\\)-dimensional set covariates. Let \\(\\psi_0(W)\\) denote target\nparameter interest want estimate; example, interested\nestimating conditional expectation outcome given covariates,\n\\(\\psi_0(W) = E(Y \\mid W)\\). Following Estimation Roadmap, chose \nappropriate loss function, \\(L\\), \\(\\psi_0(W) = \\text{argmin}_{\\psi} E[L(X,\\psi(W))]\\). know \\(\\psi\\) ? order pick\noptimal estimator among candidates, assess overall performance\nresulting estimator, use cross-validation – dividing available data\ntraining set validation set. Observations training set \nused fit (train) estimator, validation set used assess\nrisk (validate) .derive general representation cross-validation, define split\nvector, \\(B_n = (B_n(): = 1, \\ldots, n) \\\\{0,1\\}^n\\). Note split\nvector independent empirical distribution, \\(P_n\\). realization \n\\(B_n\\) defines random split data training validation set \n\n\\[B_n() = 0, \\ \\ \\text{sample training set}\\]\n\\[B_n() = 1, \\ \\ \\text{sample validation set.}\\]\ncan define \\(P_{n,B_n}^0\\) \\(P_{n,B_n}^1\\) empirical\ndistributions training validation sets, respectively. \\(n_0 = \\sum_i 1-B_n()\\) \\(n_1 = \\sum_i B_n()\\) denote number samples \nset. particular distribution split vector \\(B_n\\) defines type \ncross-validation scheme, tailored problem data set hand.","code":""},{"path":"origami.html","id":"cross-validation-schemes-in-origami","chapter":"5 Cross-validation","heading":"5.6 Cross-validation schemes in origami","text":"specified earlier, particular distribution split vector \\(B_n\\)\ndefines type cross-validation method. following, describe\ndifferent types cross-validation schemes available origami package, \nshow use sequel.","code":""},{"path":"origami.html","id":"wash-benefits-study-example","chapter":"5 Cross-validation","heading":"WASH Benefits Study Example","text":"order illustrate different cross-validation schemes, using \nWASH data. Detailed information WASH Benefits Example Dataset can \nfound Chapter 3. particular, interested predicting\nweight--height z-score whz using available covariate data. \nillustration, start treating data independent identically\ndistributed (..d.) random draws. see cross-validation scheme \n, subset data \\(n=30\\). Note row represents \n..d. sample, indexed row number.look first 30 data.","code":"\nlibrary(data.table)\nlibrary(origami)\nlibrary(knitr)\nlibrary(kableExtra)\n\n# load data set and take a peek\nwashb_data <- fread(\n  paste0(\n    \"https://raw.githubusercontent.com/tlverse/tlverse-data/master/\",\n    \"wash-benefits/washb_data.csv\"\n  ),\n  stringsAsFactors = TRUE\n)"},{"path":"origami.html","id":"cross-validation-for-i.i.d.-data","chapter":"5 Cross-validation","heading":"5.6.1 Cross-validation for i.i.d. data","text":"","code":""},{"path":"origami.html","id":"re-substitution","chapter":"5 Cross-validation","heading":"5.6.1.1 Re-substitution","text":"re-substitution method simplest strategy estimating risk\nassociated fitting proposed algorithm set observations. , \nobserved data used training validation set.illustrate usage re-substitution method origami package\n; use function folds_resubstitution(n). order setup\nfolds_resubstitution(n), just need total number samples want \nallocate training validation sets; remember row data \nunique ..d. sample. Notice structure origami output:v: cross-validation foldtraining_set: indexes samples training setvalidation_set: indexes samples training set.structure origami output (fold(s)) persist \ncross-validation schemes present chapter. , show fold\ngenerated re-substitution method:","code":"\nfolds_resubstitution(nrow(washb_data))\n#> [[1]]\n#> $v\n#> [1] 1\n#> \n#> $training_set\n#>  [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25\n#> [26] 26 27 28 29 30\n#> \n#> $validation_set\n#>  [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25\n#> [26] 26 27 28 29 30\n#> \n#> attr(,\"class\")\n#> [1] \"fold\""},{"path":"origami.html","id":"holdout-method","chapter":"5 Cross-validation","heading":"5.6.1.2 Holdout method","text":"holdout method, validation set approach, consists randomly\ndividing available data training set validation set (holdout\nset). model fitted training set, evaluated \nobservations validation set. Typically, data split \n\\(60/40\\), \\(70/30\\) \\(80/20\\) splits.holdout method intuitive, conceptually easy, computationally \ndemanding. However, repeat process randomly splitting data \ntraining validation set, might get different validation loss (e.g.,\nMSE). particular, loss validation sets might highly\nvariable, depending samples included training/validation\nsplit. classification problems, possibility uneven\ndistribution different classes training validation set unless data\nstratified. Finally, note using data train \nevaluate performance proposed algorithm, might result bias.","code":""},{"path":"origami.html","id":"leave-one-out","chapter":"5 Cross-validation","heading":"5.6.1.3 Leave-one-out","text":"leave-one-cross-validation scheme closely related holdout\nmethod. particular, also involves splitting data training \nvalidation set; however, instead partitioning observed data sets \nsimilar size, single observation used validation set. ,\nmajority units employed training (fitting) proposed\nalgorithm. Since one unit (example \\(x_1 = (w_1, y_1)\\)) used \nfitting process, leave-one-cross-validation results possibly less\nbiased estimate true risk; typically, leave-one-approach \noverestimate risk much holdout method. hand, since\nestimate risk based single sample, typically highly\nvariable estimate.can repeat process spiting data training validation set\nsamples part validation set point. example,\nnext iteration cross-validation might \\(x_2 = (w_2,y_2)\\) \nvalidation set rest \\(n-1\\) samples training set. Repeating\napproach \\(n\\) times results , example, \\(n\\) squared errors \\(MSE_1, MSE_2, \\ldots, MSE_n\\). estimate true risk average \n\\(n\\) squared errors. leave-one-cross-validation results less\nbiased (albeit, variable) estimate risk holdout method, \nexpensive implement \\(n\\) large.illustrate usage leave-one-cross-validation origami\npackage ; use function folds_loo(n). order setup\nfolds_loo(n), similarly re-substitution method, just need total\nnumber samples want cross-validate. show first two folds\ngenerated leave-one-cross-validation .","code":"\nfolds <- folds_loo(nrow(washb_data))\nfolds[[1]]\n#> $v\n#> [1] 1\n#> \n#> $training_set\n#>  [1]  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26\n#> [26] 27 28 29 30\n#> \n#> $validation_set\n#> [1] 1\n#> \n#> attr(,\"class\")\n#> [1] \"fold\"\nfolds[[2]]\n#> $v\n#> [1] 2\n#> \n#> $training_set\n#>  [1]  1  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26\n#> [26] 27 28 29 30\n#> \n#> $validation_set\n#> [1] 2\n#> \n#> attr(,\"class\")\n#> [1] \"fold\""},{"path":"origami.html","id":"v-fold","chapter":"5 Cross-validation","heading":"5.6.1.4 V-fold","text":"alternative leave-one-V-fold cross-validation. \ncross-validation scheme randomly divides data \\(v\\) sets (folds) equal\nsize; fold, number samples validation set .\nV-fold cross-validation, one folds treated validation set,\nwhereas proposed algorithm fit remaining \\(v-1\\) folds \ntraining set. loss, example MSE, computed samples \nvalidation set. proposed algorithm trained performance\nevaluated first fold, repeat process \\(v\\) times; time, \ndifferent group samples treated validation set. Note V-fold\ncross-validation effectively use data train evaluate \nproposed algorithm without overfitting training data. end, \nV-fold cross-validation results \\(v\\) estimates validation error. final\nV-fold CV estimate computed average validation losses.dataset \\(n\\) samples, V-fold cross-validation \\(v=n\\) just\nleave-one-; similarly, set \\(n=1\\), can get holdout method’s\nestimate algorithm’s performance. Despite obvious computational\nadvantages, V-fold cross-validation often gives accurate estimates \ntrue risk. reason comes bias-variance trade-comes\nemploying methods; leave-one-might less biased, \nhigher variance. difference becomes obvious \\(v<<n\\) (\nsmall, increase bias). V-fold cross-validation, end \naveraging output \\(v\\) fits typically less correlated \noutputs leave-one-fits. Since mean many highly correlated\nquantities higher variance, leave-one-estimate risk also\nhigher variance estimate based V-fold cross-validation.Let’s see V-fold cross-validation origami action! next chapter\nstudy Super Learner, actual algorithm fit evaluate\nperformance, uses V-fold default cross-validation scheme. order\nset V-fold CV, need call function folds_vfold(n, V). Arguments\nfolds_vfold(n, V) require total number samples \ncross-validated, number folds want get.\\(V=2\\), get 2 folds \\(n/2\\) number samples training \nvalidation set.","code":"\nfolds <- folds_vfold(nrow(washb_data), V = 2)\nfolds[[1]]\n#> $v\n#> [1] 1\n#> \n#> $training_set\n#>  [1]  2  3  4  6  7  8 11 12 14 15 19 22 23 24 28\n#> \n#> $validation_set\n#>  [1]  1  5  9 10 13 16 17 18 20 21 25 26 27 29 30\n#> \n#> attr(,\"class\")\n#> [1] \"fold\"\nfolds[[2]]\n#> $v\n#> [1] 2\n#> \n#> $training_set\n#>  [1]  1  5  9 10 13 16 17 18 20 21 25 26 27 29 30\n#> \n#> $validation_set\n#>  [1]  2  3  4  6  7  8 11 12 14 15 19 22 23 24 28\n#> \n#> attr(,\"class\")\n#> [1] \"fold\""},{"path":"origami.html","id":"monte-carlo","chapter":"5 Cross-validation","heading":"5.6.1.5 Monte Carlo","text":"Monte Carlo cross-validation, randomly select fraction data\n(without replacement) form training set; assign rest \nsamples validation set. , data repeatedly randomly\ndivided two sets, training set \\(n_0 = n \\cdot (1-p)\\) observations \nvalidation set \\(n_1 = n \\cdot p\\) observations. process \nrepeated multiple times, generating (random) new training validation\npartitions time.Since partitions independent across folds, sample can appear \nvalidation set multiple times – note stark difference\nMonte Carlo V-fold cross-validation. Monte Carlo\ncross-validation, one able explore many available partitions \nV-fold cross-validation – resulting possibly less variable estimate\nrisk, cost increase bias.illustrate usage Monte Carlo cross-validation origami\npackage using function folds_montecarlo(n, V, pvalidation). order\nsetup folds_montecarlo(n, V, pvalidation), need:total number samples want cross-validate;number folds;proportion observations placed validation set.\\(V=2\\) \\(pvalidation=0.2\\), obtain 2 folds approximately \\(6\\) samples\nvalidation set per fold.","code":"\nfolds <- folds_montecarlo(nrow(washb_data), V = 2, pvalidation = 0.2)\nfolds[[1]]\n#> $v\n#> [1] 1\n#> \n#> $training_set\n#>  [1] 19 27 16 29 23 12  1  3 18 11  5  7  8  6  9 22 10 25 20 28 15  2 24 26\n#> \n#> $validation_set\n#> [1]  4 13 14 17 21 30\n#> \n#> attr(,\"class\")\n#> [1] \"fold\"\nfolds[[2]]\n#> $v\n#> [1] 2\n#> \n#> $training_set\n#>  [1] 19 15 28 25 29 11 20 17 14  4  9 12 30  8 27 18 16 10 13  6 24  3 26  1\n#> \n#> $validation_set\n#> [1]  2  5  7 21 22 23\n#> \n#> attr(,\"class\")\n#> [1] \"fold\""},{"path":"origami.html","id":"bootstrap","chapter":"5 Cross-validation","heading":"5.6.1.6 Bootstrap","text":"bootstrap cross-validation also consists randomly selecting samples, \nreplacement, training set. rest samples picked \ntraining set allocated validation set. process repeated\nmultiple times, generating (random) new training validation partitions\ntime. contract Monte Carlo cross-validation, total number \nsamples training validation size across folds constant. also\nsample replacement, hence samples can multiple training\nsets. proportion observations validation sets random\nvariable, expectation \\(\\sim 0.368\\).illustrate usage bootstrap cross-validation origami package\nusing function folds_bootstrap(n, V). order setup\nfolds_bootstrap(n, V), need:total number samples want cross-validate;number folds.\\(V=2\\), obtain \\(2\\) folds different number samples validation\nset across folds.","code":"\nfolds <- folds_bootstrap(nrow(washb_data), V = 2)\nfolds[[1]]\n#> $v\n#> [1] 1\n#> \n#> $training_set\n#>  [1]  2  5 30  1 29 16 10 11  8 25 28  2 11  2 16 28 15 28  1 27  9 19 20 30 18\n#> [26] 11 13  2 18 12\n#> \n#> $validation_set\n#>  [1]  3  4  6  7 14 17 21 22 23 24 26\n#> \n#> attr(,\"class\")\n#> [1] \"fold\"\nfolds[[2]]\n#> $v\n#> [1] 2\n#> \n#> $training_set\n#>  [1] 12 16 10 29 22 15 27  9 27 16 12 28 10 28 26  1 14  6 23 14 21 16  5 20  8\n#> [26] 23 25  8 27  5\n#> \n#> $validation_set\n#>  [1]  2  3  4  7 11 13 17 18 19 24 30\n#> \n#> attr(,\"class\")\n#> [1] \"fold\""},{"path":"origami.html","id":"cross-validation-for-dependent-data","chapter":"5 Cross-validation","heading":"5.6.2 Cross-validation for dependent data","text":"origami package also supports numerous cross-validation schemes \ntime-series data, single multiple time-series arbitrary time\nnetwork dependence.","code":""},{"path":"origami.html","id":"airpassenger-example","chapter":"5 Cross-validation","heading":"AirPassenger Example","text":"order illustrate different cross-validation schemes time-series, \nusing AirPassenger data; widely used, freely available\ndataset. AirPassenger dataset R provides monthly totals \ninternational airline passengers 1949 1960. dataset already \ntime series class therefore class date manipulation required.Goal: want forecast number airline passengers time \\(h\\)\nhorizon using historical data 1949 1960.","code":"\nlibrary(ggfortify)\n\ndata(AirPassengers)\nAP <- AirPassengers\n\nautoplot(AP) +\n  labs(\n    x = \"Date\",\n    y = \"Passenger numbers (1000's)\",\n    title = \"Air Passengers from 1949 to 1961\"\n  )\n\nt <- length(AP)"},{"path":"origami.html","id":"rolling-origin","chapter":"5 Cross-validation","heading":"5.6.2.1 Rolling origin","text":"Rolling origin cross-validation scheme lends “online” algorithms,\nlarge streams data fit continually, final fit \nconstantly updated data acquired. general, rolling origin\nscheme defines initial training set, iteration size \ntraining set grows \\(m\\) observations reach time \\(t\\) particular\nfold. time points included training set always behind \nvalidation set time points; addition, might gap training\nvalidation times size \\(h\\).illustrate rolling origin cross-validation, show example\n3 folds. , first window size 15 time points, first\ntrain proposed algorithm. evaluate performance 10 time\npoints, gap size 5 training validation time points.\nfollowing fold, train algorithm longer stream data, 25\ntime points, including original 15 started . evaluate \nperformance 10 time points future.\nFIGURE 5.1: Rolling origin CV\nillustrate usage rolling origin cross-validation origami\npackage using function folds_rolling_origin(n, first_window, validation_size, gap, batch). order setup folds_rolling_origin(n, first_window, validation_size, gap, batch), need:total number time points want cross-validatethe size first training setthe size validation setthe gap training validation setthe size update training set per iteration CVOur time-series \\(t=144\\) time points. Setting first_window \\(50\\),\nvalidation_size 10, gap 5 batch 20, get 4 time-series\nfolds; show first two .","code":"\nfolds <- folds_rolling_origin(\n  t,\n  first_window = 50, validation_size = 10, gap = 5, batch = 20\n)\nfolds[[1]]\n#> $v\n#> [1] 1\n#> \n#> $training_set\n#>  [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25\n#> [26] 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50\n#> \n#> $validation_set\n#>  [1] 56 57 58 59 60 61 62 63 64 65\n#> \n#> attr(,\"class\")\n#> [1] \"fold\"\nfolds[[2]]\n#> $v\n#> [1] 2\n#> \n#> $training_set\n#>  [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25\n#> [26] 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50\n#> [51] 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70\n#> \n#> $validation_set\n#>  [1] 76 77 78 79 80 81 82 83 84 85\n#> \n#> attr(,\"class\")\n#> [1] \"fold\""},{"path":"origami.html","id":"rolling-window","chapter":"5 Cross-validation","heading":"5.6.2.2 Rolling window","text":"Instead adding time points training set per iteration, \nrolling window cross-validation scheme “rolls” training sample forward \n\\(m\\) time units. rolling window scheme might considered parametric\nsettings one wishes guard moment parameter drift \ndifficult model explicitly; also efficient computationally\ndemanding settings streaming data, large amounts training\ndata stored. contrast rolling origin CV, training sample \niteration rolling window scheme always .illustrate rolling window cross-validation 3 time-series folds\n. first window size 15 time points, first train \nproposed algorithm. previous illustration, evaluate performance\n10 time points, gap size 5 training validation time\npoints. However, next fold, train algorithm time points\naway origin (, 10 time points). Note size \ntraining set new fold first fold (15 time points).\nsetup keeps training sets comparable time (fold) compared\nrolling origin CV. evaluate performance proposed\nalgorithm 10 time points future.\nFIGURE 5.2: Rolling window CV\nillustrate usage rolling window cross-validation origami\npackage using function folds_rolling_window(n, window_size, validation_size, gap, batch). order setup folds_rolling_window(n, window_size, validation_size, gap, batch), need:total number time points want cross-validatethe size training setsthe size validation setthe gap training validation setthe size update training set per iteration CVSetting window_size \\(50\\), validation_size 10, gap 5 \nbatch 20, also get 4 time-series folds; show first two .","code":"\nfolds <- folds_rolling_window(\n  t,\n  window_size = 50, validation_size = 10, gap = 5, batch = 20\n)\nfolds[[1]]\n#> $v\n#> [1] 1\n#> \n#> $training_set\n#>  [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25\n#> [26] 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50\n#> \n#> $validation_set\n#>  [1] 56 57 58 59 60 61 62 63 64 65\n#> \n#> attr(,\"class\")\n#> [1] \"fold\"\nfolds[[2]]\n#> $v\n#> [1] 2\n#> \n#> $training_set\n#>  [1] 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45\n#> [26] 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70\n#> \n#> $validation_set\n#>  [1] 76 77 78 79 80 81 82 83 84 85\n#> \n#> attr(,\"class\")\n#> [1] \"fold\""},{"path":"origami.html","id":"rolling-origin-with-v-fold","chapter":"5 Cross-validation","heading":"5.6.2.3 Rolling origin with V-fold","text":"variant rolling origin scheme accounts sample dependence \nrolling-origin-\\(V\\)-fold cross-validation. contrast canonical rolling\norigin CV, samples training validation set , \nvariant encompasses \\(V\\)-fold CV addition time-series setup. \npredictions evaluated future times time-series units seen\ntraining step, allowing dependence samples time. One\ncan use rolling-origin-\\(v\\)-fold cross-validation origami package\nusing function folds_vfold_rolling_origin_pooled(n, t, id, time, V, first_window, validation_size, gap, batch). figure , show \\(V=2\\)\n\\(V\\)-folds, 2 time-series CV folds.\nFIGURE 5.3: Rolling origin V-fold CV\n","code":""},{"path":"origami.html","id":"rolling-window-with-v-fold","chapter":"5 Cross-validation","heading":"5.6.2.4 Rolling window with v-fold","text":"Analogous previous section, can extend rolling window CV support\nmultiple time-series arbitrary sample dependence. One can use \nrolling-window-\\(V\\)-fold cross-validation origami package using \nfunction folds_vfold_rolling_window_pooled(n, t, id, time, V, window_size, validation_size, gap, batch). figure , show \\(V=2\\) \\(V\\)-folds, \n2 time-series CV folds.\nFIGURE 5.4: Rolling window V-fold CV\n","code":""},{"path":"origami.html","id":"general-workflow-of-origami","chapter":"5 Cross-validation","heading":"5.7 General workflow of origami","text":"dive details, let’s take moment review \nbasic functionality origami R package. main function origami\ncross_validate. start , user must define folds function\noperates fold. passed cross_validate, \nfunction map fold-specific function across folds, combining \nresults reasonable way. see action later sections; \nnow, provide specific details step process .","code":""},{"path":"origami.html","id":"define-folds","chapter":"5 Cross-validation","heading":"5.7.1 (1) Define folds","text":"folds object passed cross_validate list folds; lists can\ngenerated using make_folds function. fold consists list \ntraining index vector, validation index vector, fold_index (\norder list folds). function supports variety \ncross-validation schemes describe following section. make_folds\ncan balance across levels variable (strata_ids), can also keep\nobservations independent unit together (cluster).","code":""},{"path":"origami.html","id":"define-fold-function","chapter":"5 Cross-validation","heading":"5.7.2 (2) Define fold function","text":"cv_fun argument cross_validate function perform \noperation fold. first argument function must fold,\nreceive individual fold object operate . Additional arguments\ncan passed cv_fun using ... argument cross_validate. Within\nfunction, convenience functions training, validation \nfold_index can return various components fold object. training\nvalidation passed object, index sensible way.\ninstance, vector, index vector directly. \ndata.frame matrix, index rows. allows user easily\npartition data training validation sets. fold function must return\nnamed list results containing whatever fold-specific outputs generated.","code":""},{"path":"origami.html","id":"apply-cross_validate","chapter":"5 Cross-validation","heading":"5.7.3 (3) Apply cross_validate","text":"defining folds, cross_validate can used map cv_fun across\nfolds using future_lapply. means can easily parallelized\nspecifying parallelization scheme (.e., plan future\nparallelization framework R\n(Bengtsson 2020)). application cross_validate generates list\nresults. described , call cv_fun returns list \nresults, different elements type result care . main\nloop generates list individual lists results (sort \n“meta-list”). “meta-list” inverted one element\nper result type (list results fold). default,\ncombine_results used combine results type lists sensible\nmanner. results combined determined automatically examining \ndata types results first fold. can modified \nspecifying list arguments .combine_control.","code":""},{"path":"origami.html","id":"cross-validation-in-action","chapter":"5 Cross-validation","heading":"5.8 Cross-validation in action","text":"Let’s see origami action! following chapter learn use\ncross-validation Super Learner, can utilize power \ncross-validation build optimal ensembles algorithms, just use \nsingle statistical learning method.","code":""},{"path":"origami.html","id":"cross-validation-with-linear-regression","chapter":"5 Cross-validation","heading":"5.8.1 Cross-validation with linear regression","text":"First, load relevant R packages, set seed, load full\nWASH data . order illustrate cross-validation origami \nlinear regression, focus predicting weight--height Z-score\nwhz using available covariate data. stated previously, \nassume data independent identically distributed, ignoring cluster\nstructure imposed clinical trial design. sake illustration, \nwork subset data, remove samples missing data \ndataset; learn next chapter deal missingness.’s look data:can see covariates used prediction:Next, fit linear model full data, goal predicting \nweight--height Z-score whz using available covariate data. Let’s\ntry :can assess well model fits data comparing predictions \nlinear model true outcomes observed data set. well\nknown (standard) mean squared error. can extract lm model\nobject like :mean squared error 0.86568. important problem arises\nassess model way - , trained linear\nregression model full data set assessed error full data\nset, using data. , course, generally interested \nwell model explains variation observed data; rather, \ninterested explanation provided model generalizes target\npopulation sample presumably derived. used \navailable data, honestly evaluate well model fits (thus\nexplains) variation population level.resolve issue, cross-validation allows particular procedure (e.g.,\nlinear regression) implemented subsets data, evaluating \nwell procedure fits testing (“validation”) set, thereby providing \nhonest evaluation error.can easily add cross-validation linear regression procedure using\norigami. First, let us define new function perform linear regression \nspecific partition data (called “fold”):cv_lm function rather simple: merely split available data \ntraining validation sets, using eponymous functions provided \norigami, fit linear model training set, evaluate model \ntesting set. simple example origami considers \ncv_fun – functions using cross-validation perform particular routine\ninput data set. defined function, can simply generate \nset partitions using origami’s make_folds function, apply cv_lm\nfunction resultant folds object. , replicate \nre-substitution estimate error – “hand” – using\nfunctions make_folds cv_lm.(nearly) matches estimate error obtained .can honestly evaluate error V-fold cross-validation, \npartitions data \\(v\\) subsets, fitting model \\(v - 1\\) \nsubsets evaluating subset held testing. \nrepeated subset used testing. can easily apply \ncv_lm function using origami’s cross_validate (n.b., default \nperforms 10-fold cross-validation):performed 10-fold cross-validation, quickly notice previous\nestimate model error (resubstitution) bit optimistic. honest\nestimate error larger.","code":"\nlibrary(stringr)\nlibrary(dplyr)\nlibrary(tidyr)\n\n# load data set and take a peek\nwashb_data <- fread(\n  paste0(\n    \"https://raw.githubusercontent.com/tlverse/tlverse-data/master/\",\n    \"wash-benefits/washb_data.csv\"\n  ),\n  stringsAsFactors = TRUE\n)\n\n# Remove missing data, then pick just the first 500 rows\nwashb_data <- washb_data %>%\n  drop_na() %>%\n  slice(1:500)\n\noutcome <- \"whz\"\ncovars <- colnames(washb_data)[-which(names(washb_data) == outcome)]\noutcome\n#> [1] \"whz\"\ncovars\n#>  [1] \"tr\"             \"fracode\"        \"month\"          \"aged\"          \n#>  [5] \"sex\"            \"momage\"         \"momedu\"         \"momheight\"     \n#>  [9] \"hfiacat\"        \"Nlt18\"          \"Ncomp\"          \"watmin\"        \n#> [13] \"elec\"           \"floor\"          \"walls\"          \"roof\"          \n#> [17] \"asset_wardrobe\" \"asset_table\"    \"asset_chair\"    \"asset_khat\"    \n#> [21] \"asset_chouki\"   \"asset_tv\"       \"asset_refrig\"   \"asset_bike\"    \n#> [25] \"asset_moto\"     \"asset_sewmach\"  \"asset_mobile\"\nlm_mod <- lm(whz ~ ., data = washb_data)\nsummary(lm_mod)\n#> \n#> Call:\n#> lm(formula = whz ~ ., data = washb_data)\n#> \n#> Residuals:\n#>     Min      1Q  Median      3Q     Max \n#> -2.8890 -0.6799 -0.0169  0.6595  3.1005 \n#> \n#> Coefficients:\n#>                                 Estimate Std. Error t value Pr(>|t|)   \n#> (Intercept)                     -1.89006    1.72022   -1.10   0.2725   \n#> trHandwashing                   -0.25276    0.17032   -1.48   0.1385   \n#> trNutrition                     -0.09695    0.15696   -0.62   0.5371   \n#> trNutrition + WSH               -0.09587    0.16528   -0.58   0.5622   \n#> trSanitation                    -0.27702    0.15846   -1.75   0.0811 . \n#> trWSH                           -0.02846    0.15967   -0.18   0.8586   \n#> trWater                         -0.07148    0.15813   -0.45   0.6515   \n#> fracodeN05160                    0.62355    0.30719    2.03   0.0430 * \n#> fracodeN05265                    0.38762    0.31011    1.25   0.2120   \n#> fracodeN05359                    0.10187    0.31329    0.33   0.7452   \n#> fracodeN06229                    0.30933    0.29766    1.04   0.2993   \n#> fracodeN06453                    0.08066    0.30006    0.27   0.7882   \n#> fracodeN06458                    0.43707    0.29970    1.46   0.1454   \n#> fracodeN06473                    0.45406    0.30912    1.47   0.1426   \n#> fracodeN06479                    0.60994    0.31463    1.94   0.0532 . \n#> fracodeN06489                    0.25923    0.31901    0.81   0.4169   \n#> fracodeN06500                    0.07539    0.35794    0.21   0.8333   \n#> fracodeN06502                    0.36748    0.30504    1.20   0.2290   \n#> fracodeN06505                    0.20038    0.31560    0.63   0.5258   \n#> fracodeN06516                    0.55455    0.29807    1.86   0.0635 . \n#> fracodeN06524                    0.49429    0.31423    1.57   0.1164   \n#> fracodeN06528                    0.75966    0.31060    2.45   0.0148 * \n#> fracodeN06531                    0.36856    0.30155    1.22   0.2223   \n#> fracodeN06862                    0.56932    0.29293    1.94   0.0526 . \n#> fracodeN08002                    0.36779    0.26846    1.37   0.1714   \n#> month                            0.17161    0.10865    1.58   0.1149   \n#> aged                            -0.00336    0.00112   -3.00   0.0029 **\n#> sexmale                          0.12352    0.09203    1.34   0.1802   \n#> momage                          -0.01379    0.00973   -1.42   0.1570   \n#> momeduPrimary (1-5y)            -0.13214    0.15225   -0.87   0.3859   \n#> momeduSecondary (>5y)            0.12632    0.16041    0.79   0.4314   \n#> momheight                        0.00512    0.00919    0.56   0.5776   \n#> hfiacatMildly Food Insecure      0.05804    0.19341    0.30   0.7643   \n#> hfiacatModerately Food Insecure -0.01362    0.12887   -0.11   0.9159   \n#> hfiacatSeverely Food Insecure   -0.13447    0.25418   -0.53   0.5970   \n#> Nlt18                           -0.02557    0.04060   -0.63   0.5291   \n#> Ncomp                            0.00179    0.00762    0.23   0.8145   \n#> watmin                           0.01347    0.00861    1.57   0.1182   \n#> elec                             0.08906    0.10700    0.83   0.4057   \n#> floor                           -0.17763    0.17734   -1.00   0.3171   \n#> walls                           -0.03001    0.21445   -0.14   0.8888   \n#> roof                            -0.03716    0.49214   -0.08   0.9399   \n#> asset_wardrobe                  -0.05754    0.13736   -0.42   0.6755   \n#> asset_table                     -0.22079    0.12276   -1.80   0.0728 . \n#> asset_chair                      0.28012    0.13750    2.04   0.0422 * \n#> asset_khat                       0.02306    0.11766    0.20   0.8447   \n#> asset_chouki                    -0.13943    0.14084   -0.99   0.3227   \n#> asset_tv                         0.17723    0.12972    1.37   0.1726   \n#> asset_refrig                     0.12613    0.23162    0.54   0.5863   \n#> asset_bike                      -0.02568    0.10083   -0.25   0.7990   \n#> asset_moto                      -0.32094    0.19944   -1.61   0.1083   \n#> asset_sewmach                    0.05090    0.17795    0.29   0.7750   \n#> asset_mobile                     0.01420    0.14972    0.09   0.9245   \n#> ---\n#> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n#> \n#> Residual standard error: 0.984 on 447 degrees of freedom\n#> Multiple R-squared:  0.129,  Adjusted R-squared:  0.0277 \n#> F-statistic: 1.27 on 52 and 447 DF,  p-value: 0.104\n(err <- mean(resid(lm_mod)^2))\n#> [1] 0.86568\ncv_lm <- function(fold, data, reg_form) {\n  # get name and index of outcome variable from regression formula\n  out_var <- as.character(unlist(str_split(reg_form, \" \"))[1])\n  out_var_ind <- as.numeric(which(colnames(data) == out_var))\n\n  # split up data into training and validation sets\n  train_data <- training(data)\n  valid_data <- validation(data)\n\n  # fit linear model on training set and predict on validation set\n  mod <- lm(as.formula(reg_form), data = train_data)\n  preds <- predict(mod, newdata = valid_data)\n  valid_data <- as.data.frame(valid_data)\n\n  # capture results to be returned as output\n  out <- list(\n    coef = data.frame(t(coef(mod))),\n    SE = (preds - valid_data[, out_var_ind])^2\n  )\n  return(out)\n}\n# re-substitution estimate\nresub <- make_folds(washb_data, fold_fun = folds_resubstitution)[[1]]\nresub_results <- cv_lm(fold = resub, data = washb_data, reg_form = \"whz ~ .\")\nmean(resub_results$SE, na.rm = TRUE)\n#> [1] 0.86568\n# cross-validated estimate\nfolds <- make_folds(washb_data)\ncvlm_results <- cross_validate(\n  cv_fun = cv_lm, folds = folds, data = washb_data, reg_form = \"whz ~ .\",\n  use_future = FALSE\n)\nmean(cvlm_results$SE, na.rm = TRUE)\n#> [1] 1.35"},{"path":"origami.html","id":"cross-validation-with-random-forests","chapter":"5 Cross-validation","heading":"5.8.2 Cross-validation with random forests","text":"examine origami , let us return example analysis using \nWASH data set. , write new cv_fun type object. example, \nuse Breiman’s randomForest (Breiman 2001):, writing cv_rf function cross-validate randomForest, used\nprevious function cv_lm example. now, individual cv_fun must\nwritten hand; however, future releases, wrapper may available \nsupport auto-generating cv_funs used origami., use cross_validate apply new cv_rf function folds\nobject generated make_folds.Using 10-fold cross-validation (default), obtain honest estimate \nprediction error random forests. , gather use \norigami’s cross_validate procedure can generalized arbitrary estimation\ntechniques, given availability appropriate cv_fun function.","code":"\n# make sure to load the package!\nlibrary(randomForest)\n\ncv_rf <- function(fold, data, reg_form) {\n  # get name and index of outcome variable from regression formula\n  out_var <- as.character(unlist(str_split(reg_form, \" \"))[1])\n  out_var_ind <- as.numeric(which(colnames(data) == out_var))\n\n  # define training and validation sets based on input object of class \"folds\"\n  train_data <- training(data)\n  valid_data <- validation(data)\n\n  # fit Random Forest regression on training set and predict on holdout set\n  mod <- randomForest(formula = as.formula(reg_form), data = train_data)\n  preds <- predict(mod, newdata = valid_data)\n  valid_data <- as.data.frame(valid_data)\n\n  # define output object to be returned as list (for flexibility)\n  out <- list(\n    coef = data.frame(mod$coefs),\n    SE = ((preds - valid_data[, out_var_ind])^2)\n  )\n  return(out)\n}\n# now, let's cross-validate...\nfolds <- make_folds(washb_data)\ncvrf_results <- cross_validate(\n  cv_fun = cv_rf, folds = folds, data = washb_data, reg_form = \"whz ~ .\",\n  use_future = FALSE\n)\nmean(cvrf_results$SE)\n#> [1] 1.0271"},{"path":"origami.html","id":"cross-validation-with-arima","chapter":"5 Cross-validation","heading":"5.8.3 Cross-validation with arima","text":"Cross-validation can also used forecast model selection time series\nsetting. , partitioning scheme mirrors application \nforecasting model: ’ll train data past observations (either \navailable recent subset), use model fit predict next\nobservations. consider AirPassengers dataset , monthly time\nseries passenger air traffic thousands people.Suppose want pick two forecasting models different arima\nconfigurations. can evaluating forecasting performance.\nFirst, set appropriate cross-validation scheme time-series.default, folds_rolling_origin increase size training set \none time point fold. followed default option, 85\nfolds train! Luckily, can pass batch option \nfolds_rolling_origin tells increase size training set \n10 points iteration. Since want forecast immediate next point,\ngap argument remains default (0).arima model AR component seems better fit data.","code":"\ndata(AirPassengers)\nprint(AirPassengers)\n#>      Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec\n#> 1949 112 118 132 129 121 135 148 148 136 119 104 118\n#> 1950 115 126 141 135 125 149 170 170 158 133 114 140\n#> 1951 145 150 178 163 172 178 199 199 184 162 146 166\n#> 1952 171 180 193 181 183 218 230 242 209 191 172 194\n#> 1953 196 196 236 235 229 243 264 272 237 211 180 201\n#> 1954 204 188 235 227 234 264 302 293 259 229 203 229\n#> 1955 242 233 267 269 270 315 364 347 312 274 237 278\n#> 1956 284 277 317 313 318 374 413 405 355 306 271 306\n#> 1957 315 301 356 348 355 422 465 467 404 347 305 336\n#> 1958 340 318 362 348 363 435 491 505 404 359 310 337\n#> 1959 360 342 406 396 420 472 548 559 463 407 362 405\n#> 1960 417 391 419 461 472 535 622 606 508 461 390 432\nfolds <- make_folds(AirPassengers,\n  fold_fun = folds_rolling_origin,\n  first_window = 36, validation_size = 24, batch = 10\n)\n\n# How many folds where generated?\nlength(folds)\n#> [1] 9\n\n# Examine the first 2 folds.\nfolds[[1]]\n#> $v\n#> [1] 1\n#> \n#> $training_set\n#>  [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25\n#> [26] 26 27 28 29 30 31 32 33 34 35 36\n#> \n#> $validation_set\n#>  [1] 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60\n#> \n#> attr(,\"class\")\n#> [1] \"fold\"\nfolds[[2]]\n#> $v\n#> [1] 2\n#> \n#> $training_set\n#>  [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25\n#> [26] 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46\n#> \n#> $validation_set\n#>  [1] 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70\n#> \n#> attr(,\"class\")\n#> [1] \"fold\"\n# make sure to load the package!\nlibrary(forecast)\n\n# function to calculate cross-validated squared error\ncv_forecasts <- function(fold, data) {\n  # Get training and validation data\n  train_data <- training(data)\n  valid_data <- validation(data)\n  valid_size <- length(valid_data)\n\n  train_ts <- ts(log10(train_data), frequency = 12)\n\n  # First arima model\n  arima_fit <- arima(train_ts, c(0, 1, 1),\n    seasonal = list(\n      order = c(0, 1, 1),\n      period = 12\n    )\n  )\n  raw_arima_pred <- predict(arima_fit, n.ahead = valid_size)\n  arima_pred <- 10^raw_arima_pred$pred\n  arima_MSE <- mean((arima_pred - valid_data)^2)\n\n  # Second arima model\n  arima_fit2 <- arima(train_ts, c(5, 1, 1),\n    seasonal = list(\n      order = c(0, 1, 1),\n      period = 12\n    )\n  )\n  raw_arima_pred2 <- predict(arima_fit2, n.ahead = valid_size)\n  arima_pred2 <- 10^raw_arima_pred2$pred\n  arima_MSE2 <- mean((arima_pred2 - valid_data)^2)\n\n  out <- list(mse = data.frame(\n    fold = fold_index(),\n    arima = arima_MSE, arima2 = arima_MSE2\n  ))\n  return(out)\n}\n\nmses <- cross_validate(\n  cv_fun = cv_forecasts, folds = folds, data = AirPassengers,\n  use_future = FALSE\n)\nmses$mse\n#>   fold   arima  arima2\n#> 1    1   68.21  137.28\n#> 2    2  319.68  313.15\n#> 3    3  578.35  713.36\n#> 4    4  428.69  505.31\n#> 5    5  407.33  371.27\n#> 6    6  281.82  250.99\n#> 7    7  827.56  910.12\n#> 8    8 2099.59 2213.15\n#> 9    9  398.37  293.38\ncolMeans(mses$mse[, c(\"arima\", \"arima2\")])\n#>  arima arima2 \n#> 601.07 634.22"},{"path":"origami.html","id":"exercises","chapter":"5 Cross-validation","heading":"5.9 Exercises","text":"","code":""},{"path":"origami.html","id":"review-of-key-concepts","chapter":"5 Cross-validation","heading":"5.9.1 Review of Key Concepts","text":"Compare contrast V-fold cross-validation resubstitution\ncross-validation. differences two methods?\nsimilar? Describe scenario use one \n.Compare contrast V-fold cross-validation resubstitution\ncross-validation. differences two methods?\nsimilar? Describe scenario use one \n.advantages disadvantages \\(v\\)-fold CV relative :\nholdout CV?\nleave-one-CV?\nholdout CV?leave-one-CV?can’t use V-fold cross-validation time-series data?can’t use V-fold cross-validation time-series data?use rolling window origin non-stationary time-series? ?use rolling window origin non-stationary time-series? ?","code":""},{"path":"origami.html","id":"the-ideas-in-action","chapter":"5 Cross-validation","heading":"5.9.2 The Ideas in Action","text":"Let \\(Y\\) binary variable \\(P(Y=1 \\mid W) = 0.01\\). kind \ncross-validation use rare outcome? can \norigami package?Let \\(Y\\) binary variable \\(P(Y=1 \\mid W) = 0.01\\). kind \ncross-validation use rare outcome? can \norigami package?Consider WASH benefits dataset presented chapter. can \ninclude cluster information cross-validation? can \norigami package?Consider WASH benefits dataset presented chapter. can \ninclude cluster information cross-validation? can \norigami package?","code":""},{"path":"origami.html","id":"advanced-topics","chapter":"5 Cross-validation","heading":"5.9.3 Advanced Topics","text":"Think dataset arbitrary spatial dependence, know\nextent dependence, groups formed dependence clear\nspillover effects. kind cross-validation can use?Think dataset arbitrary spatial dependence, know\nextent dependence, groups formed dependence clear\nspillover effects. kind cross-validation can use?Continuing last problem, kind procedure, cross-validation\nmethod, can use spatial dependence clearly defined \nprevious problem?Continuing last problem, kind procedure, cross-validation\nmethod, can use spatial dependence clearly defined \nprevious problem?Consider classification problem large number predictors. \nstatistician proposes following analysis:\nFirst screen predictors, leaving covariates strong\ncorrelation class labels.\nFit algorithm using subset highly correlated covariates.\nUse cross-validation estimate tuning parameters performance\nproposed algorithm.\ncorrect application cross-validation? ?Consider classification problem large number predictors. \nstatistician proposes following analysis:First screen predictors, leaving covariates strong\ncorrelation class labels.Fit algorithm using subset highly correlated covariates.Use cross-validation estimate tuning parameters performance\nproposed algorithm.correct application cross-validation? ?","code":""},{"path":"sl3.html","id":"sl3","chapter":"6 Super (Machine) Learning","heading":"6 Super (Machine) Learning","text":"Rachael PhillipsBased sl3 R package Jeremy\nCoyle, Nima Hejazi, Ivana Malenica, Rachael Phillips, Oleg Sofrygin.Updated: 2021-04-04","code":""},{"path":"sl3.html","id":"learning-objectives-3","chapter":"6 Super (Machine) Learning","heading":"Learning Objectives","text":"end chapter able :Select loss function appropriate functional parameter \nestimated.Assemble ensemble learners based properties identify \nfeatures support.Customize learner tuning parameters incorporate diversity different\nsettings.Select subset available covariates pass variables \nmodeling algorithm.Fit ensemble nested cross-validation obtain estimate \nperformance ensemble .Obtain sl3 variable importance metrics.Interpret discrete continuous Super Learner fits.Rationalize need remove bias Super Learner make \noptimal bias-variance tradeoff parameter interest.","code":""},{"path":"sl3.html","id":"motivation","chapter":"6 Super (Machine) Learning","heading":"Motivation","text":"common task data analysis prediction – using observed data \nlearn function, can used map new input variables \npredicted outcome.\ndata, algorithms can model complex function necessary \nadequately model data. data, main terms regression model might\nfit data quite well.Super Learner (SL), ensemble learner, solves issue, allowing \ncombination algorithms simplest (intercept-) complex\n(neural nets, random forests, SVM, etc).works using cross-validation manner guarantees \nresulting fit good possible, given learners provided.","code":""},{"path":"sl3.html","id":"introduction-2","chapter":"6 Super (Machine) Learning","heading":"Introduction","text":"Chapter 1, introduced Roadmap Targeted\nLearning general template translate real-world data\napplications formal statistical estimation problems. first steps \nroadmap define statistical estimation problem, establishData random variable, equivalently, realization particular\nexperiment/study. assume observations data independent \nidentically distributed.statistical model set possible probability distributions \ngiven rise observed data.translation scientific question, often causal, \ntarget estimand.Note estimand causal, step 3 also requires establishing\nidentifiability estimand observed data, possible\nnon-testable assumptions may necessarily reasonable. Still, \ntarget quantity valid statistical interpretation. See causal target\nparameters detail causal models identifiability.Now defined statistical estimation problem, ready \nconstruct TMLE; asymptotically linear efficient substitution\nestimator estimand. first step estimation procedure \ninitial estimate data-generating distribution, relevant part \ndistribution needed evaluate target parameter. \ninitial estimation, use Super Learner (SL) (van der Laan, Polley, Hubbard 2007).SL provides important step creating robust estimator. \nloss-function-based tool uses cross-validation obtain best\nprediction target parameter, based weighted average library \nmachine learning algorithms. library machine learning algorithms consists\nfunctions (“learners” sl3 nomenclature) think might \nconsistent true data-generating distribution. “consistent \ntrue data-generating distribution”, mean algorithms selected \nviolate subject-matter knowledge experiment generated \ndata. Also, library contain diversity algorithms range \nparametric regression models multi-step algorithms involving screening\ncovariates, penalizations, optimizing tuning parameters, etc.ensembling collection algorithms weights (“metalearning” \nsl3 nomenclature) shown adaptive robust, even small\nsamples (Polley van der Laan 2010). SL proven asymptotically accurate \nbest possible prediction algorithm library (van der Laan Dudoit 2003; Van der Vaart, Dudoit, Laan 2006).","code":""},{"path":"sl3.html","id":"step-by-step-overview","chapter":"6 Super (Machine) Learning","heading":"Step-by-step overview","text":"Consider scenario \\(n\\) independent identically\ndistributed observations data, data structure time\nseries. Also, let’s say \\(k\\) number candidate learners/algorithms.Create validation data \\(V=v\\) folds. Break data evenly\n\\(V=v\\) splits; observation contained one split,\nsplits contain number observations (e.g., \n\\(n/V\\) observations split).\nrare binary outcome (highly important binary predictor, \ntreatment) present data, consider making \nprevalence binary outcome splits similar \nprevalence exists data. can achieve specifying,\nstrata_ids argument origami::make_folds(), vector \nbinary outcomes (important binary covariate).\nrepeated measures cluster-level dependence data,\nobservations within subject/cluster placed \nsplit.\nCreate validation data \\(V=v\\) folds. Break data evenly\n\\(V=v\\) splits; observation contained one split,\nsplits contain number observations (e.g., \n\\(n/V\\) observations split).rare binary outcome (highly important binary predictor, \ntreatment) present data, consider making \nprevalence binary outcome splits similar \nprevalence exists data. can achieve specifying,\nstrata_ids argument origami::make_folds(), vector \nbinary outcomes (important binary covariate).repeated measures cluster-level dependence data,\nobservations within subject/cluster placed \nsplit.fold \\(v\\):\nSeparate () (ii):\ndata selected fold \\(v\\) Step 1, contains\nroughly \\(n/V\\) total observations. refer subset \ndata “validation” data, ’s also commonly referred \n“test” data. Let’s call \\(n_{\\text{validation}}\\) number \nobservations validation data,\ndata selected fold \\(v\\) Step 1, contains\nroughly \\(n - n_{\\text{validation}}\\) total observations. refer\nsubset data “training”, \n\\(n_{\\text{training}}\\) number observations training\ndata.\nFit \\(k\\) learners training data (ii).\nUsing \\(k\\) trained learners, predict outcomes \nvalidation data (). can call predictions\n“cross-validated predictions”; since obtained \nvalidation sample’s covariate information, never seen \nfitting models. end \\(n_{validation} \\times k\\)\nmatrix cross-validated predictions.\nfold \\(v\\):Separate () (ii):Separate () (ii):data selected fold \\(v\\) Step 1, contains\nroughly \\(n/V\\) total observations. refer subset \ndata “validation” data, ’s also commonly referred \n“test” data. Let’s call \\(n_{\\text{validation}}\\) number \nobservations validation data,data selected fold \\(v\\) Step 1, contains\nroughly \\(n - n_{\\text{validation}}\\) total observations. refer\nsubset data “training”, \n\\(n_{\\text{training}}\\) number observations training\ndata.Fit \\(k\\) learners training data (ii).Using \\(k\\) trained learners, predict outcomes \nvalidation data (). can call predictions\n“cross-validated predictions”; since obtained \nvalidation sample’s covariate information, never seen \nfitting models. end \\(n_{validation} \\times k\\)\nmatrix cross-validated predictions.Bind together rows \\(v\\) \\(n_{validation} \\times k\\) matrices \ncross-validated predictions, obtain \\(n \\times k\\) matrix \ncross-validated predictions. matrix \\(n \\times k\\) matrix \ncross-validated predictions often referred \n“level-one” “Z” matrix.Retain observed outcome \\(Y\\) \\(n\\) observations, using\nmeasure “loss” cross-validated prediction\n(e.g., (\\(Y - \\hat{Y}^2\\)).\\(k\\) column, take (potentially weighted) mean across \n\\(n\\) losses, call “cross-validated empirical risk”. \ncross-validated empirical risk provides measure performance, summarized\nacross \\(n\\), \\(k\\) learners. weights \nincorporated data, used calculate weighted mean, serve \nweight weight samples whose loss considered less \nimportant, respectively.Establish ensemble/combination \\(k\\) learners fitting \n-called “metalearner”. ensemble just weighted combination \nlearners, weights just \\(k\\)-dimensional vector. \nmetalearner function decides weights assigned \n\\(k\\) learners; taking input cross-validated empirical risk\n\\(k\\) learners (), taking input loss function Z\nmatrix (b).\ndiscrete SL (cross-validated selector) employs simple\nmetalearner takes input cross-validated empirical risk \n\\(k\\) learners. metalearner assigns weight 1 single\nlearner smallest cross-validated risk, weight 0 \nlearners.\nensemble SL (often referred “Super Learner”) employs\nmetalearners take input Z matrix, loss function \ninterest (unless loss implied metalearning function\n). metalearners assign weights weighted\ncombination Z matrix predictions optimized minimize \ncross-validated empirical risk. often results one\nlearner positive weight. Aggressive metalearning (e.g., assigning\nnegative weight) can problematic, leading overfitting.\nEstablish ensemble/combination \\(k\\) learners fitting \n-called “metalearner”. ensemble just weighted combination \nlearners, weights just \\(k\\)-dimensional vector. \nmetalearner function decides weights assigned \n\\(k\\) learners; taking input cross-validated empirical risk\n\\(k\\) learners (), taking input loss function Z\nmatrix (b).discrete SL (cross-validated selector) employs simple\nmetalearner takes input cross-validated empirical risk \n\\(k\\) learners. metalearner assigns weight 1 single\nlearner smallest cross-validated risk, weight 0 \nlearners.ensemble SL (often referred “Super Learner”) employs\nmetalearners take input Z matrix, loss function \ninterest (unless loss implied metalearning function\n). metalearners assign weights weighted\ncombination Z matrix predictions optimized minimize \ncross-validated empirical risk. often results one\nlearner positive weight. Aggressive metalearning (e.g., assigning\nnegative weight) can problematic, leading overfitting.Fit learners (learners non-zero weight Step 5)\nentire sample \\(n\\) observations, use weights \nobtained Step 5 get SL fit. ’s ! SL fit just \n\\(k\\) learner fits — weights don’t come play obtain \npredictions SL; SL predictions weighted\ncombination \\(k\\) learner predictions, determined \nmetalearner. Notice , use rigorous, optimal, fair procedure\nderive weights \\(n \\times k\\) Z matrix cross-validated\npredictions; ’ve done , capitalize entire sample\nobservations, transitioning focus obtaining best fit possible\n\\(k\\) learners.SL predictions, variable importance, /cross-validated SL can \nobtained SL fit (like learners). cross-validated SL\nprovides estimate performance SL unseen data, \nincorporates outer layer cross-validation order cross-validate\nentire procedure.SL predictions, variable importance, /cross-validated SL can \nobtained SL fit (like learners). cross-validated SL\nprovides estimate performance SL unseen data, \nincorporates outer layer cross-validation order cross-validate\nentire procedure.figure [ADD REF] describing step--step procedure.\nfigure considers \\(k=16\\) learners, figure \\(p=k\\); squared\nerror loss function, thus mean squared error (MSE) risk.\n","code":""},{"path":"sl3.html","id":"theoretical-foundations-and-further-reading","chapter":"6 Super (Machine) Learning","heading":"Theoretical Foundations and Further Reading","text":"Cross-validation proven optimal selection among estimators. \nresult established oracle inequality cross-validation\nselector among collection candidate estimators (van der Laan Dudoit 2003; Van der Vaart, Dudoit, Laan 2006). condition loss function uniformly\nbounded, guaranteed sl3.use loss function \\(L\\) assign measure performance \nlearner \\(\\psi\\) applied data \\(O\\), subsequently compare\nperformance across learners. generally, \\(L\\) maps every \\(\\psi \\\\R\\)\n\\(L(\\psi) : (O) \\mapsto L(\\psi)(O)\\). use terms “learner”,\n“algorithm”, “estimator” interchangeably.\nimportant recall \\(\\psi\\) estimator \\(\\psi_0\\), \nunknown true parameter value \\(P_0\\).\nvalid loss function mean/expectation (risk) minimized\ntrue value parameter \\(\\psi_0\\). Thus, minimizing expected\nloss bring estimator \\(\\psi\\) closer true \\(\\psi_0\\).\nexample, say observe learning data set \\(O_i=(Y_i,X_i)\\), \n\\(=1, \\ldots, n\\) independent identically distributed observations,\n\\(Y_i\\) continuous outcome interest, \\(X_i\\) set \ncovariates. Also, let objective estimate function \\(\\psi_0: X \\mapsto \\psi_0(X) = E_0(Y \\mid X)\\), conditional mean outcome\ngiven covariates. function can expressed minimizer \nexpected squared error loss: \\(\\psi_0 = \\text{argmin}_{\\psi} E[L(O,\\psi(X))]\\), \\(L(O, \\psi(X)) = (Y - \\psi(X))^2\\).\ncan estimate loss substituting empirical distribution \ndata \\(P_n\\) true unknown distribution observed data\n\\(P_0\\).\nAlso, can use cross-validated risk empirically determine \nrelative performance estimator (.e., candidate learner), \nperhaps ’s performance compares estimators.\ntested different estimators actual data, looked \nperformance (e.g., MSE predictions across learners), can\nsee algorithm (weighted combination) lowest risk, \nthus closest true \\(\\psi_0\\).\nuse loss function \\(L\\) assign measure performance \nlearner \\(\\psi\\) applied data \\(O\\), subsequently compare\nperformance across learners. generally, \\(L\\) maps every \\(\\psi \\\\R\\)\n\\(L(\\psi) : (O) \\mapsto L(\\psi)(O)\\). use terms “learner”,\n“algorithm”, “estimator” interchangeably.important recall \\(\\psi\\) estimator \\(\\psi_0\\), \nunknown true parameter value \\(P_0\\).valid loss function mean/expectation (risk) minimized\ntrue value parameter \\(\\psi_0\\). Thus, minimizing expected\nloss bring estimator \\(\\psi\\) closer true \\(\\psi_0\\).example, say observe learning data set \\(O_i=(Y_i,X_i)\\), \n\\(=1, \\ldots, n\\) independent identically distributed observations,\n\\(Y_i\\) continuous outcome interest, \\(X_i\\) set \ncovariates. Also, let objective estimate function \\(\\psi_0: X \\mapsto \\psi_0(X) = E_0(Y \\mid X)\\), conditional mean outcome\ngiven covariates. function can expressed minimizer \nexpected squared error loss: \\(\\psi_0 = \\text{argmin}_{\\psi} E[L(O,\\psi(X))]\\), \\(L(O, \\psi(X)) = (Y - \\psi(X))^2\\).can estimate loss substituting empirical distribution \ndata \\(P_n\\) true unknown distribution observed data\n\\(P_0\\).Also, can use cross-validated risk empirically determine \nrelative performance estimator (.e., candidate learner), \nperhaps ’s performance compares estimators.tested different estimators actual data, looked \nperformance (e.g., MSE predictions across learners), can\nsee algorithm (weighted combination) lowest risk, \nthus closest true \\(\\psi_0\\).cross-validated empirical risk algorithm defined \nempirical mean validation sample loss algorithm fitted \ntraining sample, averaged across splits data.\ndiscrete Super Learner, cross-validation selector, \nalgorithm library minimizes cross-validated empirical\nrisk.\ncontinuous/ensemble Super Learner, often referred \nSuper Learner weighted average library algorithm\npredictions, weights chosen minimize cross-validated\nempirical risk library. notion weighted combinations \nintroduced Wolpert (1992) neural networks adapted \nregressions Breiman (1996). Restricting weights positive\nsum one (.e., convex combination) shown perform well\npractice (Polley van der Laan 2010; van der Laan, Polley, Hubbard 2007).\ncross-validated empirical risk algorithm defined \nempirical mean validation sample loss algorithm fitted \ntraining sample, averaged across splits data.discrete Super Learner, cross-validation selector, \nalgorithm library minimizes cross-validated empirical\nrisk.continuous/ensemble Super Learner, often referred \nSuper Learner weighted average library algorithm\npredictions, weights chosen minimize cross-validated\nempirical risk library. notion weighted combinations \nintroduced Wolpert (1992) neural networks adapted \nregressions Breiman (1996). Restricting weights positive\nsum one (.e., convex combination) shown perform well\npractice (Polley van der Laan 2010; van der Laan, Polley, Hubbard 2007).","code":""},{"path":"sl3.html","id":"sl3-microwave-dinner-implementation","chapter":"6 Super (Machine) Learning","heading":"sl3 “Microwave Dinner” Implementation","text":"begin illustrating core functionality SL algorithm \nimplemented sl3.sl3 implementation consists following steps:Load necessary libraries data.Define machine learning task.Make SL creating library base learners metalearner.Train SL machine learning task.Obtain predicted values.","code":""},{"path":"sl3.html","id":"wash-benefits-study-example-1","chapter":"6 Super (Machine) Learning","heading":"WASH Benefits Study Example","text":"Using WASH Benefits Bangladesh data, interested predicting\nweight--height z-score whz using available covariate data. \ninformation dataset, data work \nhandbook, contained Chapter 3. Let’s begin!","code":""},{"path":"sl3.html","id":"load-the-necessary-libraries-and-data","chapter":"6 Super (Machine) Learning","heading":"0. Load the necessary libraries and data","text":"First, load relevant R packages, set seed, load data.quick look data:","code":"\nlibrary(data.table)\nlibrary(dplyr)\nlibrary(readr)\nlibrary(ggplot2)\nlibrary(SuperLearner)\nlibrary(origami)\nlibrary(sl3)\nlibrary(knitr)\nlibrary(kableExtra)\n\n# load data set and take a peek\nwashb_data <- fread(\n  paste0(\n    \"https://raw.githubusercontent.com/tlverse/tlverse-data/master/\",\n    \"wash-benefits/washb_data.csv\"\n  ),\n  stringsAsFactors = TRUE\n)"},{"path":"sl3.html","id":"define-the-machine-learning-task","chapter":"6 Super (Machine) Learning","heading":"1. Define the machine learning task","text":"define machine learning “task” (predict weight--height Z-score\nwhz using available covariate data), need create sl3_Task\nobject.sl3_Task keeps track roles variables play machine\nlearning problem, data, metadata (e.g., observational-level\nweights, IDs, offset).Also, missing outcomes, need set drop_missing_outcome = TRUE create task. next analysis, IST stroke trial\ndata, missing outcome. following chapter, need \nestimate “missingness mechanism”; conditional probability \noutcome observed, given history (.e., variables measured\nmissingness). Estimating missingness mechanism requires learning\nprediction function outputs predicted probability unit \nmissing, given history.warning important. task just imputed missing covariates us.\nSpecifically, covariate column missing values, sl3 uses \nmedian impute missing continuous covariates, mode impute binary\ncategorical covariates.Also, covariate column missing values, sl3 adds additional\ncolumn indicating whether value imputed, particularly\nhandy missingness data might informative.Also, notice specify number folds, loss function\ntask. default cross-validation scheme V-fold, \\(V=10\\) number\nfolds.Let’s visualize washb_task:can’t see print task, default cross-validation fold\nstructure (\\(V\\)-fold cross-validation \\(V\\)=10 folds) created \ndefined task.R6 Tip: type washb_task$ press “tab” button (\nneed press “tab” twice ’re RStudio), can view \nactive public fields methods can accessed washb_task\nobject.","code":"\n# specify the outcome and covariates\noutcome <- \"whz\"\ncovars <- colnames(washb_data)[-which(names(washb_data) == outcome)]\n\n# create the sl3 task\nwashb_task <- make_sl3_Task(\n  data = washb_data,\n  covariates = covars,\n  outcome = outcome\n)\n#> Warning in process_data(data, nodes, column_names = column_names, flag = flag, :\n#> Missing covariate data detected: imputing covariates.\nwashb_task\n#> A sl3 Task with 4695 obs and these nodes:\n#> $covariates\n#>  [1] \"tr\"              \"fracode\"         \"month\"           \"aged\"           \n#>  [5] \"sex\"             \"momage\"          \"momedu\"          \"momheight\"      \n#>  [9] \"hfiacat\"         \"Nlt18\"           \"Ncomp\"           \"watmin\"         \n#> [13] \"elec\"            \"floor\"           \"walls\"           \"roof\"           \n#> [17] \"asset_wardrobe\"  \"asset_table\"     \"asset_chair\"     \"asset_khat\"     \n#> [21] \"asset_chouki\"    \"asset_tv\"        \"asset_refrig\"    \"asset_bike\"     \n#> [25] \"asset_moto\"      \"asset_sewmach\"   \"asset_mobile\"    \"delta_momage\"   \n#> [29] \"delta_momheight\"\n#> \n#> $outcome\n#> [1] \"whz\"\n#> \n#> $id\n#> NULL\n#> \n#> $weights\n#> NULL\n#> \n#> $offset\n#> NULL\n#> \n#> $time\n#> NULL\nlength(washb_task$folds) # how many folds?\n#> [1] 10\n\nhead(washb_task$folds[[1]]$training_set) # row indexes for fold 1 training\n#> [1] 1 2 3 4 5 6\nhead(washb_task$folds[[1]]$validation_set) # row indexes for fold 1 validation\n#> [1] 12 21 29 41 43 53\n\nany(\n  washb_task$folds[[1]]$training_set %in%\n    washb_task$folds[[1]]$validation_set\n)\n#> [1] FALSE"},{"path":"sl3.html","id":"make-a-super-learner","chapter":"6 Super (Machine) Learning","heading":"2. Make a Super Learner","text":"Now defined machine learning problem sl3_Task, \nready “make” Super Learner (SL). requires specification ofA set candidate machine learning algorithms, also commonly referred \n“library” “learners”. set include diversity algorithms\nbelieved consistent true data-generating\ndistribution.metalearner, ensemble base learners.might also incorporateFeature selection, pass subset predictors algorithm.Hyperparameter specification, tune base learners.Learners properties indicate features support. may use\nsl3_list_properties() get list properties supported least\none learner.Since continuous outcome, may identify learners support\noutcome type sl3_list_learners().Now idea learners, can construct using \nmake_learner function new method.can customize learner hyperparameters incorporate diversity \ndifferent settings. Documentation learners hyperparameters\ncan found sl3 Learners\nReference.can use Lrnr_define_interactions define interaction terms among\ncovariates. interactions supplied list character vectors,\nvector specifies interaction. example, specify\ninteractions (1) tr (whether subject received \nWASH intervention) elec (whether subject electricity); \n(2) tr hfiacat (subject’s level food security).just defined incomplete. order fit learners \ninteractions, need create Pipeline. Pipeline set learners\nfit sequentially, fit one learner used define \ntask next learner. need create Pipeline interaction\ndefining learner another learner incorporate terms fitting\nmodel. Let’s create learner pipeline fit linear model \ncombination main terms interactions terms, specified \nlrn_interaction_main.can also include learners SuperLearner R package.fun trick create customized learners grid parameters.see Lrnr_caret called sl3_list_learners(c(\"binomial\"))?\nneed specify use popular algorithm candidate \nSL algorithm want tune, passed method \ncaret::train(). default method parameter selection criterion \nset “CV” instead caret::train() default boot. summary metric\nused select optimal model RMSE continuous outcomes \nAccuracy categorical binomial outcomes.order assemble library learners, need “stack” \ntogether.Stack special learner interface \nlearners. makes stack special combines multiple learners \ntraining simultaneously, predictions can either combined\ncompared.can also stack learners first creating vector, \ninstantiating stack. prefer method, since easily allows us \nmodify names learners.’re jumping ahead bit, let’s check something quickly. ’s\nstraightforward, just one step, set stack \nlearners train cross-validated manner.","code":"\nsl3_list_properties()\n#>  [1] \"binomial\"      \"categorical\"   \"continuous\"    \"cv\"           \n#>  [5] \"density\"       \"h2o\"           \"ids\"           \"importance\"   \n#>  [9] \"offset\"        \"preprocessing\" \"sampling\"      \"screener\"     \n#> [13] \"timeseries\"    \"weights\"       \"wrapper\"\nsl3_list_learners(\"continuous\")\n#>  [1] \"Lrnr_arima\"                     \"Lrnr_bartMachine\"              \n#>  [3] \"Lrnr_bayesglm\"                  \"Lrnr_bilstm\"                   \n#>  [5] \"Lrnr_bound\"                     \"Lrnr_caret\"                    \n#>  [7] \"Lrnr_cv_selector\"               \"Lrnr_dbarts\"                   \n#>  [9] \"Lrnr_earth\"                     \"Lrnr_expSmooth\"                \n#> [11] \"Lrnr_gam\"                       \"Lrnr_gbm\"                      \n#> [13] \"Lrnr_glm\"                       \"Lrnr_glm_fast\"                 \n#> [15] \"Lrnr_glmnet\"                    \"Lrnr_grf\"                      \n#> [17] \"Lrnr_gru_keras\"                 \"Lrnr_gts\"                      \n#> [19] \"Lrnr_h2o_glm\"                   \"Lrnr_h2o_grid\"                 \n#> [21] \"Lrnr_hal9001\"                   \"Lrnr_HarmonicReg\"              \n#> [23] \"Lrnr_hts\"                       \"Lrnr_lstm\"                     \n#> [25] \"Lrnr_lstm_keras\"                \"Lrnr_mean\"                     \n#> [27] \"Lrnr_multiple_ts\"               \"Lrnr_nnet\"                     \n#> [29] \"Lrnr_nnls\"                      \"Lrnr_optim\"                    \n#> [31] \"Lrnr_pkg_SuperLearner\"          \"Lrnr_pkg_SuperLearner_method\"  \n#> [33] \"Lrnr_pkg_SuperLearner_screener\" \"Lrnr_polspline\"                \n#> [35] \"Lrnr_randomForest\"              \"Lrnr_ranger\"                   \n#> [37] \"Lrnr_rpart\"                     \"Lrnr_rugarch\"                  \n#> [39] \"Lrnr_screener_correlation\"      \"Lrnr_solnp\"                    \n#> [41] \"Lrnr_stratified\"                \"Lrnr_svm\"                      \n#> [43] \"Lrnr_tsDyn\"                     \"Lrnr_xgboost\"\n# choose base learners\nlrn_glm <- make_learner(Lrnr_glm)\nlrn_mean <- Lrnr_mean$new()\nlrn_lasso <- make_learner(Lrnr_glmnet) # alpha default is 1\nlrn_ridge <- Lrnr_glmnet$new(alpha = 0)\nlrn_enet.5 <- make_learner(Lrnr_glmnet, alpha = 0.5)\n\nlrn_polspline <- Lrnr_polspline$new()\n\nlrn_ranger100 <- make_learner(Lrnr_ranger, num.trees = 100)\n\nlrn_hal_faster <- Lrnr_hal9001$new(max_degree = 2, reduce_basis = 0.05)\n\nxgb_fast <- Lrnr_xgboost$new() # default with nrounds = 20 is pretty fast\nxgb_50 <- Lrnr_xgboost$new(nrounds = 50)\ninteractions <- list(c(\"elec\", \"tr\"), c(\"tr\", \"hfiacat\"))\n# main terms as well as the interactions above will be included\nlrn_interaction <- make_learner(Lrnr_define_interactions, interactions)\n# we already instantiated a linear model learner above, no need to do it again\nlrn_glm_interaction <- make_learner(Pipeline, lrn_interaction, lrn_glm)\nlrn_glm_interaction\n#> [1] \"Lrnr_define_interactions_TRUE\"\n#> [1] \"Lrnr_glm_TRUE\"\nlrn_bayesglm <- Lrnr_pkg_SuperLearner$new(\"SL.bayesglm\")\n# I like to crock pot my SLs\ngrid_params <- list(\n  cost = c(0.01, 0.1, 1, 10, 100, 1000),\n  gamma = c(0.001, 0.01, 0.1, 1),\n  kernel = c(\"polynomial\", \"radial\", \"sigmoid\"),\n  degree = c(1, 2, 3)\n)\ngrid <- expand.grid(grid_params, KEEP.OUT.ATTRS = FALSE)\nsvm_learners <- apply(grid, MARGIN = 1, function(tuning_params) {\n  do.call(Lrnr_svm$new, as.list(tuning_params))\n})\ngrid_params <- list(\n  max_depth = c(2, 4, 6),\n  eta = c(0.001, 0.1, 0.3),\n  nrounds = 100\n)\ngrid <- expand.grid(grid_params, KEEP.OUT.ATTRS = FALSE)\ngrid\n#>   max_depth   eta nrounds\n#> 1         2 0.001     100\n#> 2         4 0.001     100\n#> 3         6 0.001     100\n#> 4         2 0.100     100\n#> 5         4 0.100     100\n#> 6         6 0.100     100\n#> 7         2 0.300     100\n#> 8         4 0.300     100\n#> 9         6 0.300     100\n\nxgb_learners <- apply(grid, MARGIN = 1, function(tuning_params) {\n  do.call(Lrnr_xgboost$new, as.list(tuning_params))\n})\nxgb_learners\n#> [[1]]\n#> [1] \"Lrnr_xgboost_100_1_2_0.001\"\n#> \n#> [[2]]\n#> [1] \"Lrnr_xgboost_100_1_4_0.001\"\n#> \n#> [[3]]\n#> [1] \"Lrnr_xgboost_100_1_6_0.001\"\n#> \n#> [[4]]\n#> [1] \"Lrnr_xgboost_100_1_2_0.1\"\n#> \n#> [[5]]\n#> [1] \"Lrnr_xgboost_100_1_4_0.1\"\n#> \n#> [[6]]\n#> [1] \"Lrnr_xgboost_100_1_6_0.1\"\n#> \n#> [[7]]\n#> [1] \"Lrnr_xgboost_100_1_2_0.3\"\n#> \n#> [[8]]\n#> [1] \"Lrnr_xgboost_100_1_4_0.3\"\n#> \n#> [[9]]\n#> [1] \"Lrnr_xgboost_100_1_6_0.3\"\n# Unlike xgboost, I have no idea how to tune a neural net or BART machine, so\n# I let caret take the reins\nlrnr_caret_nnet <- make_learner(Lrnr_caret, algorithm = \"nnet\")\nlrnr_caret_bartMachine <- make_learner(Lrnr_caret,\n  algorithm = \"bartMachine\",\n  method = \"boot\", metric = \"Accuracy\",\n  tuneLength = 10\n)\nstack <- make_learner(\n  Stack, lrn_glm, lrn_polspline, lrn_enet.5, lrn_ridge, lrn_lasso, xgb_50\n)\nstack\n#> [1] \"Lrnr_glm_TRUE\"                                  \n#> [2] \"Lrnr_polspline_5\"                               \n#> [3] \"Lrnr_glmnet_NULL_deviance_10_0.5_100_TRUE_FALSE\"\n#> [4] \"Lrnr_glmnet_NULL_deviance_10_0_100_TRUE_FALSE\"  \n#> [5] \"Lrnr_glmnet_NULL_deviance_10_1_100_TRUE_FALSE\"  \n#> [6] \"Lrnr_xgboost_50_1\"\n# named vector of learners first\nlearners <- c(lrn_glm, lrn_polspline, lrn_enet.5, lrn_ridge, lrn_lasso, xgb_50)\nnames(learners) <- c(\n  \"glm\", \"polspline\", \"enet.5\", \"ridge\", \"lasso\", \"xgboost50\"\n)\n# next make the stack\nstack <- make_learner(Stack, learners)\n# now the names are pretty\nstack\n#> [1] \"glm\"       \"polspline\" \"enet.5\"    \"ridge\"     \"lasso\"     \"xgboost50\"\ncv_stack <- Lrnr_cv$new(stack)\ncv_stack\n#> [1] \"Lrnr_cv\"\n#> [1] \"glm\"       \"polspline\" \"enet.5\"    \"ridge\"     \"lasso\"     \"xgboost50\""},{"path":"sl3.html","id":"screening-algorithms-for-feature-selection","chapter":"6 Super (Machine) Learning","heading":"Screening Algorithms for Feature Selection","text":"can optionally select subset available covariates pass \nvariables modeling algorithm. current set learners can \nused prescreening covariates included .Lrnr_screener_importance selects num_screen (default = 5) covariates\nbased variable importance ranking provided learner. \nlearner “importance” method can used Lrnr_screener_importance;\ncurrently includes Lrnr_ranger, Lrnr_randomForest, \nLrnr_xgboost.Lrnr_screener_coefs, provides screening covariates based \nmagnitude estimated coefficients (possibly regularized) GLM.\nthreshold (default = 1e-3) defines minimum absolute size \ncoefficients, thus covariates, kept. Also, max_retain argument\ncan optionally provided restrict number selected covariates \nmax_retain.Lrnr_screener_correlation provides covariate screening procedures \nrunning test correlation (Pearson default), selecting (1)\ntop ranked variables (default), (2) variables pvalue lower \npre-specified threshold.Lrnr_screener_augment augments set screened covariates additional\ncovariates included default, even screener \nselect . example use screener included .Let’s consider screening covariates based randomForest variable\nimportance ranking (ordered mean decrease accuracy). select top\n5 important covariates according ranking, can combine\nLrnr_screener_importance Lrnr_ranger (limiting number trees \nsetting ntree = 20).Hang ! think – confess: Bob Ross know 20\ntrees makes lonely forest, shouldn’t consider , \nsacrifices make chapter build time!example format Lrnr_screener_augment included \nclarity.Selecting covariates non-zero lasso coefficients quite common. Let’s\nconstruct Lrnr_screener_coefs screener just , test .“pipe” selected covariates modeling algorithm, need \nmake Pipeline, similar one built regression model \ninteraction terms.Now, learners internal screening preceded screening\nstep.also consider original stack, compare feature selection\nmethods perform comparison methods without feature selection.Analogous seen , stack pipeline \noriginal stack together, may use base learners super\nlearner.use default\nmetalearner, \nuses Lrnr_solnp() \nprovide fitting procedures pairing loss\nfunction \nmetalearner function.\ndefault metalearner selects loss metalearner pairing based \noutcome type. Note learner can used metalearner.Now made diverse stack base learners, ready make\nSL. SL algorithm fits metalearner validation set\npredictions/losses across folds.can also use Lrnr_cv build SL, cross-validate stack \nlearners compare performance learners stack, cross-validate\nsingle learner (see “Cross-validation” section sl3\nintroductory tutorial).Furthermore, can Define New sl3\nLearners can used\nplaces otherwise use sl3 learners, including\nPipelines, Stacks, SL.Recall discrete SL, cross-validated selector, metalearner \nassigns weight 1 learner lowest cross-validated empirical\nrisk, weight 0 learners. metalearner specification can\ninvoked Lrnr_cv_selector.","code":"\nminiforest <- Lrnr_ranger$new(\n  num.trees = 20, write.forest = FALSE,\n  importance = \"impurity_corrected\"\n)\n\n# learner must already be instantiated, we did this when we created miniforest\nscreen_rf <- Lrnr_screener_importance$new(learner = miniforest, num_screen = 5)\nscreen_rf\n#> [1] \"Lrnr_screener_importance_5\"\n\n# which covariates are selected on the full data?\nscreen_rf$train(washb_task)\n#> [1] \"Lrnr_screener_importance_5\"\n#> $selected\n#> [1] \"aged\"        \"month\"       \"momedu\"      \"asset_tv\"    \"asset_chair\"\nkeepme <- c(\"aged\", \"momage\")\n# screener must already be instantiated, we did this when we created screen_rf\nscreen_augment_rf <- Lrnr_screener_augment$new(\n  screener = screen_rf, default_covariates = keepme\n)\nscreen_augment_rf\n#> [1] \"Lrnr_screener_augment_c(\\\"aged\\\", \\\"momage\\\")\"\n# we already instantiated a lasso learner above, no need to do it again\nscreen_lasso <- Lrnr_screener_coefs$new(learner = lrn_lasso, threshold = 0)\nscreen_lasso\n#> [1] \"Lrnr_screener_coefs_0_NULL_2\"\nscreen_rf_pipe <- make_learner(Pipeline, screen_rf, stack)\nscreen_lasso_pipe <- make_learner(Pipeline, screen_lasso, stack)\n# pretty names again\nlearners2 <- c(learners, screen_rf_pipe, screen_lasso_pipe)\nnames(learners2) <- c(names(learners), \"randomforest_screen\", \"lasso_screen\")\n\nfancy_stack <- make_learner(Stack, learners2)\nfancy_stack\n#> [1] \"glm\"                 \"polspline\"           \"enet.5\"             \n#> [4] \"ridge\"               \"lasso\"               \"xgboost50\"          \n#> [7] \"randomforest_screen\" \"lasso_screen\"\nsl <- make_learner(Lrnr_sl, learners = fancy_stack)\ndiscrete_sl_metalrn <- Lrnr_cv_selector$new()\ndiscrete_sl <- Lrnr_sl$new(\n  learners = fancy_stack,\n  metalearner = discrete_sl_metalrn\n)"},{"path":"sl3.html","id":"train-the-super-learner-on-the-machine-learning-task","chapter":"6 Super (Machine) Learning","heading":"3. Train the Super Learner on the machine learning task","text":"SL algorithm fits metalearner validation-set predictions \ncross-validated manner, thereby avoiding overfitting.Now ready “train” SL sl3_task object, washb_task.","code":"\nset.seed(4197)\nsl_fit <- sl$train(washb_task)"},{"path":"sl3.html","id":"obtain-predicted-values","chapter":"6 Super (Machine) Learning","heading":"4. Obtain predicted values","text":"Now fit SL, ready calculate predicted outcome\nsubject.can also obtain summary results.table printed SL fit, note SL mean risk \n1.01 \nensemble weighted ranger glmnet learners highest \nweighting mean learner highly.can also see glmnet learner lowest cross-validated mean\nrisk, thus making cross-validated selector (discrete SL). \nmean risk SL calculated using data, separate\nhold-, SL’s mean risk reported underestimation.","code":"\n# we did it! now we have SL predictions\nsl_preds <- sl_fit$predict()\nhead(sl_preds)\n#> [1] -0.64698 -0.76514 -0.64312 -0.68991 -0.68068 -0.66422\nsl_fit_summary <- sl_fit$print()\n#> [1] \"SuperLearner:\"\n#> List of 8\n#>  $ glm                : chr \"Lrnr_glm_TRUE\"\n#>  $ polspline          : chr \"Lrnr_polspline_5\"\n#>  $ enet.5             : chr \"Lrnr_glmnet_NULL_deviance_10_0.5_100_TRUE_FALSE\"\n#>  $ ridge              : chr \"Lrnr_glmnet_NULL_deviance_10_0_100_TRUE_FALSE\"\n#>  $ lasso              : chr \"Lrnr_glmnet_NULL_deviance_10_1_100_TRUE_FALSE\"\n#>  $ xgboost50          : chr \"Lrnr_xgboost_50_1\"\n#>  $ randomforest_screen: chr \"Pipeline(Lrnr_screener_importance_5->Stack)\"\n#>  $ lasso_screen       : chr \"Pipeline(Lrnr_screener_coefs_0_NULL_2->Stack)\"\n#> [1] \"Lrnr_solnp_TRUE_TRUE_FALSE_1e-05\"\n#> $pars\n#>  [1] 0.055565 0.055551 0.055558 0.055564 0.055558 0.055583 0.055556 0.055573\n#>  [9] 0.055555 0.055555 0.055555 0.055546 0.055553 0.055553 0.055553 0.055552\n#> [17] 0.055553 0.055516\n#> \n#> $convergence\n#> [1] 0\n#> \n#> $values\n#> [1] 1.01 1.01\n#> \n#> $lagrange\n#>            [,1]\n#> [1,] -0.0050956\n#> \n#> $hessian\n#>       [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12] [,13]\n#>  [1,]    1    0    0    0    0    0    0    0    0     0     0     0     0\n#>  [2,]    0    1    0    0    0    0    0    0    0     0     0     0     0\n#>  [3,]    0    0    1    0    0    0    0    0    0     0     0     0     0\n#>  [4,]    0    0    0    1    0    0    0    0    0     0     0     0     0\n#>  [5,]    0    0    0    0    1    0    0    0    0     0     0     0     0\n#>  [6,]    0    0    0    0    0    1    0    0    0     0     0     0     0\n#>  [7,]    0    0    0    0    0    0    1    0    0     0     0     0     0\n#>  [8,]    0    0    0    0    0    0    0    1    0     0     0     0     0\n#>  [9,]    0    0    0    0    0    0    0    0    1     0     0     0     0\n#> [10,]    0    0    0    0    0    0    0    0    0     1     0     0     0\n#> [11,]    0    0    0    0    0    0    0    0    0     0     1     0     0\n#> [12,]    0    0    0    0    0    0    0    0    0     0     0     1     0\n#> [13,]    0    0    0    0    0    0    0    0    0     0     0     0     1\n#> [14,]    0    0    0    0    0    0    0    0    0     0     0     0     0\n#> [15,]    0    0    0    0    0    0    0    0    0     0     0     0     0\n#> [16,]    0    0    0    0    0    0    0    0    0     0     0     0     0\n#> [17,]    0    0    0    0    0    0    0    0    0     0     0     0     0\n#> [18,]    0    0    0    0    0    0    0    0    0     0     0     0     0\n#>       [,14] [,15] [,16] [,17] [,18]\n#>  [1,]     0     0     0     0     0\n#>  [2,]     0     0     0     0     0\n#>  [3,]     0     0     0     0     0\n#>  [4,]     0     0     0     0     0\n#>  [5,]     0     0     0     0     0\n#>  [6,]     0     0     0     0     0\n#>  [7,]     0     0     0     0     0\n#>  [8,]     0     0     0     0     0\n#>  [9,]     0     0     0     0     0\n#> [10,]     0     0     0     0     0\n#> [11,]     0     0     0     0     0\n#> [12,]     0     0     0     0     0\n#> [13,]     0     0     0     0     0\n#> [14,]     1     0     0     0     0\n#> [15,]     0     1     0     0     0\n#> [16,]     0     0     1     0     0\n#> [17,]     0     0     0     1     0\n#> [18,]     0     0     0     0     1\n#> \n#> $ineqx0\n#> NULL\n#> \n#> $nfuneval\n#> [1] 23\n#> \n#> $outer.iter\n#> [1] 1\n#> \n#> $elapsed\n#> Time difference of 0.011869 secs\n#> \n#> $vscale\n#>  [1] 1.01001 0.00001 1.00000 1.00000 1.00000 1.00000 1.00000 1.00000 1.00000\n#> [10] 1.00000 1.00000 1.00000 1.00000 1.00000 1.00000 1.00000 1.00000 1.00000\n#> [19] 1.00000 1.00000\n#> \n#> $coefficients\n#>                           glm                     polspline \n#>                      0.055565                      0.055551 \n#>                        enet.5                         ridge \n#>                      0.055558                      0.055564 \n#>                         lasso                     xgboost50 \n#>                      0.055558                      0.055583 \n#>       randomforest_screen_glm randomforest_screen_polspline \n#>                      0.055556                      0.055573 \n#>    randomforest_screen_enet.5     randomforest_screen_ridge \n#>                      0.055555                      0.055555 \n#>     randomforest_screen_lasso randomforest_screen_xgboost50 \n#>                      0.055555                      0.055546 \n#>              lasso_screen_glm        lasso_screen_polspline \n#>                      0.055553                      0.055553 \n#>           lasso_screen_enet.5            lasso_screen_ridge \n#>                      0.055553                      0.055552 \n#>            lasso_screen_lasso        lasso_screen_xgboost50 \n#>                      0.055553                      0.055516 \n#> \n#> $training_offset\n#> [1] FALSE\n#> \n#> $name\n#> [1] \"solnp\"\n#> \n#> [1] \"Cross-validated risk:\"\n#>                           learner coefficients   risk       se  fold_sd\n#>  1:                           glm     0.055565 1.0202 0.023955 0.067500\n#>  2:                     polspline     0.055551 1.0208 0.023577 0.067921\n#>  3:                        enet.5     0.055558 1.0131 0.023598 0.065732\n#>  4:                         ridge     0.055564 1.0153 0.023739 0.065299\n#>  5:                         lasso     0.055558 1.0130 0.023592 0.065840\n#>  6:                     xgboost50     0.055583 1.1136 0.025262 0.077580\n#>  7:       randomforest_screen_glm     0.055556 1.0173 0.023830 0.069913\n#>  8: randomforest_screen_polspline     0.055573 1.0135 0.023814 0.069240\n#>  9:    randomforest_screen_enet.5     0.055555 1.0177 0.023842 0.070142\n#> 10:     randomforest_screen_ridge     0.055555 1.0176 0.023855 0.069787\n#> 11:     randomforest_screen_lasso     0.055555 1.0177 0.023840 0.070155\n#> 12: randomforest_screen_xgboost50     0.055546 1.1277 0.026043 0.078673\n#> 13:              lasso_screen_glm     0.055553 1.0164 0.023542 0.065018\n#> 14:        lasso_screen_polspline     0.055553 1.0177 0.023520 0.065566\n#> 15:           lasso_screen_enet.5     0.055553 1.0163 0.023544 0.065017\n#> 16:            lasso_screen_ridge     0.055552 1.0166 0.023553 0.064869\n#> 17:            lasso_screen_lasso     0.055553 1.0163 0.023544 0.065020\n#> 18:        lasso_screen_xgboost50     0.055516 1.1256 0.025939 0.084270\n#> 19:                  SuperLearner           NA 1.0100 0.023524 0.068184\n#>     fold_min_risk fold_max_risk\n#>  1:       0.89442        1.1200\n#>  2:       0.89892        1.1255\n#>  3:       0.88839        1.1058\n#>  4:       0.88559        1.1063\n#>  5:       0.88842        1.1060\n#>  6:       0.96019        1.2337\n#>  7:       0.88579        1.1119\n#>  8:       0.89370        1.1190\n#>  9:       0.88593        1.1137\n#> 10:       0.88620        1.1128\n#> 11:       0.88593        1.1136\n#> 12:       1.00223        1.2465\n#> 13:       0.90204        1.1156\n#> 14:       0.89742        1.1162\n#> 15:       0.90184        1.1154\n#> 16:       0.90120        1.1146\n#> 17:       0.90183        1.1154\n#> 18:       0.96251        1.2327\n#> 19:       0.88036        1.1041"},{"path":"sl3.html","id":"cross-validated-super-learner","chapter":"6 Super (Machine) Learning","heading":"Cross-validated Super Learner","text":"can cross-validate SL see well SL performs unseen data,\nobtain estimate cross-validated risk SL.estimation procedure requires “outer/external” layer \ncross-validation, also called nested cross-validation, involves setting\naside separate holdout sample don’t use fit SL. external\ncross-validation procedure may also incorporate 10 folds, default\nsl3. However, incorporate 2 outer/external folds \ncross-validation computational efficiency.also need specify loss function evaluate SL. Documentation \navailable loss functions can found sl3 Loss\nFunction Reference.Let’s take look table summarizing performance:","code":"\nwashb_task_new <- make_sl3_Task(\n  data = washb_data,\n  covariates = covars,\n  outcome = outcome,\n  folds = origami::make_folds(washb_data, fold_fun = folds_vfold, V = 2)\n)\nCVsl <- CV_lrnr_sl(\n  lrnr_sl = sl_fit, task = washb_task_new, loss_fun = loss_squared_error\n)\nif (knitr::is_latex_output()) {\n  CVsl %>%\n    kable(format = \"latex\")\n} else if (knitr::is_html_output()) {\n  CVsl %>%\n    kable() %>%\n    kable_styling(fixed_thead = TRUE) %>%\n    scroll_box(width = \"100%\", height = \"300px\")\n}"},{"path":"sl3.html","id":"variable-importance-measures-with-sl3","chapter":"6 Super (Machine) Learning","heading":"Variable Importance Measures with sl3","text":"Variable importance can interesting informative. can also \ncontradictory confusing. Nevertheless, like , \ncollaborators, created variable importance function sl3! sl3\nimportance function returns table variables listed decreasing order\nimportance (.e., important first row).measure importance sl3 based risk ratio, risk\ndifference, learner fit removed, permuted, covariate \nlearner fit true covariate, across covariates. manner,\nlarger risk difference, important variable \nprediction.intuition measure calculates risk (terms \naverage loss predictive accuracy) losing one covariate, keeping\neverything else fixed, compares risk covariate \nlost. risk ratio one, risk difference zero, losing \ncovariate impact, thus important measure. \nacross covariates. stated , can remove covariate \nrefit SL without , just permute covariate (faster, risky)\nhope shuffling distort meaningful information \npresent covariate. idea permuting instead removing saves \nlot time, also incorporated randomForest variable importance\nmeasures. However, permutation approach risky, importance\nfunction default remove refit.Let’s explore sl3 variable importance measurements washb data.","code":"\nwashb_varimp <- importance(sl_fit, loss = loss_squared_error, type = \"permute\")\nif (knitr::is_latex_output()) {\n  washb_varimp %>%\n    kable(format = \"latex\")\n} else if (knitr::is_html_output()) {\n  washb_varimp %>%\n    kable() %>%\n    kable_styling(fixed_thead = TRUE) %>%\n    scroll_box(width = \"100%\", height = \"300px\")\n}\n# plot variable importance\nimportance_plot(\n  washb_varimp,\n  main = \"sl3 Variable Importance for WASH Benefits Example Data\"\n)"},{"path":"sl3.html","id":"sl3-exercises","chapter":"6 Super (Machine) Learning","heading":"6.1 Exercises","text":"","code":""},{"path":"sl3.html","id":"sl3ex1","chapter":"6 Super (Machine) Learning","heading":"6.1.1 Predicting Myocardial Infarction with sl3","text":"Follow steps predict myocardial infarction (mi) using \navailable covariate data. thank Prof. David Benkeser Emory University \nmaking Cardiovascular Health Study (CHS) data accessible.Let’s take quick peek data:Create sl3 task, setting myocardial infarction mi outcome \nusing available covariate data.Make library seven relatively fast base learning algorithms (.e., \nconsider BART HAL). Customize hyperparameters one \nlearners. Feel free use learners sl3 SuperLearner. may\nuse base learning library presented .Incorporate least one pipeline feature selection. screener \nlearner(s) can used.Fit metalearning step default metalearner.metalearner base learners, make Super Learner (SL) \ntrain task.Print SL fit calling print() $.Cross-validate SL fit see well performs unseen\ndata. Specify valid loss function evaluate SL.Use importance() function identify “important” predictor \nmyocardial infarction, according sl3 importance metrics.","code":"\n# load the data set\ndb_data <- url(\n  paste0(\n    \"https://raw.githubusercontent.com/benkeser/sllecture/master/\",\n    \"chspred.csv\"\n  )\n)\nchspred <- read_csv(file = db_data, col_names = TRUE)"},{"path":"sl3.html","id":"sl3ex2","chapter":"6 Super (Machine) Learning","heading":"6.1.2 Predicting Recurrent Ischemic Stroke in an RCT with sl3","text":"exercise, work random sample 5,000 patients \nparticipated International Stroke Trial (IST). data described \nChapter 3.2 tlverse\nhandbook.Train SL predict recurrent stroke DRSISC available covariate\ndata (25 variables). course, can consider feature selection\nmachine learning algorithms. data, outcome \noccasionally missing, sure specify drop_missing_outcome = TRUE\ndefining task.Use SL-based predictions calculate area ROC curve\n(AUC).Calculate cross-validated AUC evaluate performance \nSL unseen data.covariates predictive 14-day recurrent stroke,\naccording sl3 variable importance measures?","code":"\nist_data <- paste0(\n  \"https://raw.githubusercontent.com/tlverse/\",\n  \"tlverse-handbook/master/data/ist_sample.csv\"\n) %>% fread()\n\n# number 3 help\nist_task_CVsl <- make_sl3_Task(\n  data = ist_data,\n  outcome = \"DRSISC\",\n  covariates = colnames(ist_data)[-which(names(ist_data) == \"DRSISC\")],\n  drop_missing_outcome = TRUE,\n  folds = origami::make_folds(\n    n = sum(!is.na(ist_data$DRSISC)),\n    fold_fun = folds_vfold,\n    V = 5\n  )\n)"},{"path":"sl3.html","id":"concluding-remarks","chapter":"6 Super (Machine) Learning","heading":"6.2 Concluding Remarks","text":"Super Learner (SL) general approach can applied diversity \nestimation prediction problems can defined loss function.Super Learner (SL) general approach can applied diversity \nestimation prediction problems can defined loss function.straightforward plug estimator returned SL \ntarget parameter mapping.\nexample, suppose average treatment effect (ATE) \nbinary treatment intervention:\n\\(\\Psi_0 = E_{0,W}[E_0(Y|=1,W) - E_0(Y|=0,W)]\\).\nuse SL trained original data (let’s call\nsl_fit) predict outcome subjects \nintervention. need take average difference\ncounterfactual outcomes intervention interest.\nConsidering \\(\\Psi_0\\) , first need two \\(n\\)-length vectors \npredicted outcomes intervention. One vector represent\npredicted outcomes intervention sets subjects \nreceive \\(=1\\), \\(Y_i|A_i=1,W_i\\) \\(=1,\\ldots,n\\). vector\nrepresent predicted outcomes intervention sets\nsubjects receive \\(=0\\), \\(Y_i|A_i=0,W_i\\) \\(=1,\\ldots,n\\).\nobtaining vectors counterfactual predicted outcomes, \nneed average take difference order \n“plug-” SL estimator target parameter mapping.\nsl3 current ATE example, achieved \nmean(sl_fit$predict(A1_task)) - mean(sl_fit$predict(A0_task));\nA1_task$data contain 1’s (level pertains \nreceiving treatment) treatment column data (keeping\nelse ), A0_task$data contain 0’s (\nlevel pertains receiving treatment) treatment\ncolumn data.\nexample, suppose average treatment effect (ATE) \nbinary treatment intervention:\n\\(\\Psi_0 = E_{0,W}[E_0(Y|=1,W) - E_0(Y|=0,W)]\\).use SL trained original data (let’s call\nsl_fit) predict outcome subjects \nintervention. need take average difference\ncounterfactual outcomes intervention interest.Considering \\(\\Psi_0\\) , first need two \\(n\\)-length vectors \npredicted outcomes intervention. One vector represent\npredicted outcomes intervention sets subjects \nreceive \\(=1\\), \\(Y_i|A_i=1,W_i\\) \\(=1,\\ldots,n\\). vector\nrepresent predicted outcomes intervention sets\nsubjects receive \\(=0\\), \\(Y_i|A_i=0,W_i\\) \\(=1,\\ldots,n\\).obtaining vectors counterfactual predicted outcomes, \nneed average take difference order \n“plug-” SL estimator target parameter mapping.sl3 current ATE example, achieved \nmean(sl_fit$predict(A1_task)) - mean(sl_fit$predict(A0_task));\nA1_task$data contain 1’s (level pertains \nreceiving treatment) treatment column data (keeping\nelse ), A0_task$data contain 0’s (\nlevel pertains receiving treatment) treatment\ncolumn data.’s worthwhile exercise obtain predicted counterfactual outcomes\ncreate counterfactual sl3 tasks. ’s biased; however, \nplug SL fit target parameter mapping, (e.g., calling result\nmean(sl_fit$predict(A1_task)) - mean(sl_fit$predict(A0_task)) \nestimated ATE. end estimator ATE \noptimized estimation prediction function, ATE!end “analysis day”, want estimator optimized \ntarget estimand interest. ultimately care good job\nestimating \\(\\psi_0\\). SL essential step help us get . \nfact, use counterfactual predicted outcomes explained\nlength . However, SL end estimation procedure.\nSpecifically, Super Learner asymptotically linear\nestimator target estimand; efficient substitution\nestimator. begs question, important estimator \npossess properties?\nasymptotically linear estimator converges estimand \n\\(\\frac{1}{\\sqrt{n}}\\) rate, thereby permitting formal statistical inference\n(.e., confidence intervals \\(p\\)-values).\nSubstitution, plug-, estimators estimand desirable \nrespect local global constraints statistical model\n(e.g., bounds), better finite-sample properties.\nefficient estimator optimal sense lowest\npossible variance, thus precise. estimator efficient\nasymptotically linear influence curve equal \ncanonical gradient.\ncanonical gradient mathematical object specific \ntarget estimand, provides information level \ndifficulty estimation problem. Various canonical gradient \nshown chapters follow.\nPractitioner’s need know calculate canonical\ngradient order understand efficiency use Targeted Maximum\nLikelihood Estimation (TMLE). Metaphorically, need \nYoda order Jedi.\n\nend “analysis day”, want estimator optimized \ntarget estimand interest. ultimately care good job\nestimating \\(\\psi_0\\). SL essential step help us get . \nfact, use counterfactual predicted outcomes explained\nlength . However, SL end estimation procedure.\nSpecifically, Super Learner asymptotically linear\nestimator target estimand; efficient substitution\nestimator. begs question, important estimator \npossess properties?asymptotically linear estimator converges estimand \n\\(\\frac{1}{\\sqrt{n}}\\) rate, thereby permitting formal statistical inference\n(.e., confidence intervals \\(p\\)-values).Substitution, plug-, estimators estimand desirable \nrespect local global constraints statistical model\n(e.g., bounds), better finite-sample properties.efficient estimator optimal sense lowest\npossible variance, thus precise. estimator efficient\nasymptotically linear influence curve equal \ncanonical gradient.\ncanonical gradient mathematical object specific \ntarget estimand, provides information level \ndifficulty estimation problem. Various canonical gradient \nshown chapters follow.\nPractitioner’s need know calculate canonical\ngradient order understand efficiency use Targeted Maximum\nLikelihood Estimation (TMLE). Metaphorically, need \nYoda order Jedi.\nefficient estimator optimal sense lowest\npossible variance, thus precise. estimator efficient\nasymptotically linear influence curve equal \ncanonical gradient.canonical gradient mathematical object specific \ntarget estimand, provides information level \ndifficulty estimation problem. Various canonical gradient \nshown chapters follow.Practitioner’s need know calculate canonical\ngradient order understand efficiency use Targeted Maximum\nLikelihood Estimation (TMLE). Metaphorically, need \nYoda order Jedi.TMLE general strategy succeeds constructing efficient \nasymptotically linear plug-estimators.SL fantastic pure prediction, obtaining initial\nestimate first step TMLE, need second step TMLE \ndesirable statistical properties mentioned .chapters follow, focus targeted maximum likelihood\nestimator targeted minimum loss-based estimator, referred \nTMLE.chapters follow, focus targeted maximum likelihood\nestimator targeted minimum loss-based estimator, referred \nTMLE.","code":""},{"path":"sl3.html","id":"appendix","chapter":"6 Super (Machine) Learning","heading":"Appendix","text":"","code":""},{"path":"sl3.html","id":"sl3ex1-sol","chapter":"6 Super (Machine) Learning","heading":"6.2.1 Exercise 1 Solution","text":"potential solution sl3 Exercise 1 – Predicting Myocardial\nInfarction sl3.","code":"\ndb_data <- url(\n  \"https://raw.githubusercontent.com/benkeser/sllecture/master/chspred.csv\"\n)\nchspred <- read_csv(file = db_data, col_names = TRUE)\n\n# make task\nchspred_task <- make_sl3_Task(\n  data = chspred,\n  covariates = head(colnames(chspred), -1),\n  outcome = \"mi\"\n)\n\n# make learners\nglm_learner <- Lrnr_glm$new()\nlasso_learner <- Lrnr_glmnet$new(alpha = 1)\nridge_learner <- Lrnr_glmnet$new(alpha = 0)\nenet_learner <- Lrnr_glmnet$new(alpha = 0.5)\n# curated_glm_learner uses formula = \"mi ~ smoke + beta + waist\"\ncurated_glm_learner <- Lrnr_glm_fast$new(covariates = c(\"smoke, beta, waist\"))\nmean_learner <- Lrnr_mean$new() # That is one mean learner!\nglm_fast_learner <- Lrnr_glm_fast$new()\nranger_learner <- Lrnr_ranger$new()\nsvm_learner <- Lrnr_svm$new()\nxgb_learner <- Lrnr_xgboost$new()\n\n# screening\nscreen_cor <- make_learner(Lrnr_screener_correlation)\nglm_pipeline <- make_learner(Pipeline, screen_cor, glm_learner)\n\n# stack learners together\nstack <- make_learner(\n  Stack,\n  glm_pipeline, glm_learner,\n  lasso_learner, ridge_learner, enet_learner,\n  curated_glm_learner, mean_learner, glm_fast_learner,\n  ranger_learner, svm_learner, xgb_learner\n)\n\n# make and train SL\nsl <- Lrnr_sl$new(\n  learners = stack\n)\nsl_fit <- sl$train(chspred_task)\nsl_fit$print()\n\nCVsl <- CV_lrnr_sl(sl_fit, chspred_task, loss_loglik_binomial)\nCVsl\n\nvarimp <- importance(sl_fit, type = \"permute\")\nvarimp %>%\n  importance_plot(\n    main = \"sl3 Variable Importance for Myocardial Infarction Prediction\"\n  )"},{"path":"sl3.html","id":"sl3ex2-sol","chapter":"6 Super (Machine) Learning","heading":"6.2.2 Exercise 2 Solution","text":"potential solution sl3 Exercise 2 – Predicting Recurrent\nIschemic Stroke RCT sl3.","code":"\nlibrary(ROCR) # for AUC calculation\n\nist_data <- paste0(\n  \"https://raw.githubusercontent.com/tlverse/\",\n  \"tlverse-handbook/master/data/ist_sample.csv\"\n) %>% fread()\n\n# stack\nist_task <- make_sl3_Task(\n  data = ist_data,\n  outcome = \"DRSISC\",\n  covariates = colnames(ist_data)[-which(names(ist_data) == \"DRSISC\")],\n  drop_missing_outcome = TRUE\n)\n\n# learner library\nlrn_glm <- Lrnr_glm$new()\nlrn_lasso <- Lrnr_glmnet$new(alpha = 1)\nlrn_ridge <- Lrnr_glmnet$new(alpha = 0)\nlrn_enet <- Lrnr_glmnet$new(alpha = 0.5)\nlrn_mean <- Lrnr_mean$new()\nlrn_ranger <- Lrnr_ranger$new()\nlrn_svm <- Lrnr_svm$new()\n# xgboost grid\ngrid_params <- list(\n  max_depth = c(2, 5, 8),\n  eta = c(0.01, 0.15, 0.3)\n)\ngrid <- expand.grid(grid_params, KEEP.OUT.ATTRS = FALSE)\nparams_default <- list(nthread = getOption(\"sl.cores.learners\", 1))\nxgb_learners <- apply(grid, MARGIN = 1, function(params_tune) {\n  do.call(Lrnr_xgboost$new, c(params_default, as.list(params_tune)))\n})\nlearners <- unlist(list(\n  xgb_learners, lrn_ridge, lrn_mean, lrn_lasso,\n  lrn_glm, lrn_enet, lrn_ranger, lrn_svm\n),\nrecursive = TRUE\n)\n\n# SL\nsl <- Lrnr_sl$new(learners)\nsl_fit <- sl$train(ist_task)\n\n# AUC\npreds <- sl_fit$predict()\nobs <- c(na.omit(ist_data$DRSISC))\nAUC <- performance(prediction(sl_preds, obs), measure = \"auc\")@y.values[[1]]\nplot(performance(prediction(sl_preds, obs), \"tpr\", \"fpr\"))\n\n# CVsl\nist_task_CVsl <- make_sl3_Task(\n  data = ist_data,\n  outcome = \"DRSISC\",\n  covariates = colnames(ist_data)[-which(names(ist_data) == \"DRSISC\")],\n  drop_missing_outcome = TRUE,\n  folds = origami::make_folds(\n    n = sum(!is.na(ist_data$DRSISC)),\n    fold_fun = folds_vfold,\n    V = 5\n  )\n)\nCVsl <- CV_lrnr_sl(sl_fit, ist_task_CVsl, loss_loglik_binomial)\nCVsl\n\n# sl3 variable importance plot\nist_varimp <- importance(sl_fit, type = \"permute\")\nist_varimp %>%\n  importance_plot(\n    main = \"Variable Importance for Predicting Recurrent Ischemic Stroke\"\n  )"},{"path":"tmle3.html","id":"tmle3","chapter":"7 The TMLE Framework","heading":"7 The TMLE Framework","text":"Jeremy CoyleBased tmle3 R package.","code":""},{"path":"tmle3.html","id":"learn-tmle","chapter":"7 The TMLE Framework","heading":"7.1 Learning Objectives","text":"end chapter, able toUnderstand use TMLE effect estimation.Use tmle3 estimate Average Treatment Effect (ATE).Understand use tmle3 “Specs” objects.Fit tmle3 custom set target parameters.Use delta method estimate transformations target parameters.","code":""},{"path":"tmle3.html","id":"tmle-intro","chapter":"7 The TMLE Framework","heading":"7.2 Introduction","text":"previous chapter sl3 learned estimate regression\nfunction like \\(\\mathbb{E}[Y \\mid X]\\) data. ’s important first step\nlearning data, can use predictive model estimate\nstatistical causal effects?Going back roadmap targeted learning, suppose ’d like \nestimate effect treatment variable \\(\\) outcome \\(Y\\). discussed,\none potential parameter characterizes effect Average Treatment\nEffect (ATE), defined \\(\\psi_0 = \\mathbb{E}_W[\\mathbb{E}[Y \\mid =1,W] - \\mathbb{E}[Y \\mid =0,W]]\\) interpreted difference mean outcome\ntreatment \\(=1\\) \\(=0\\), averaging distribution \ncovariates \\(W\\). ’ll illustrate several potential estimators \nparameter, motivate use TMLE (targeted maximum likelihood\nestimation; targeted minimum loss-based estimation) framework, using \nfollowing example data:small ticks right indicate mean outcomes (averaging \\(W\\))\n\\(=1\\) \\(=0\\) respectively, difference quantity ’d\nlike estimate.hope motivate application TMLE chapter, refer \ninterested reader two Targeted Learning books associated works \nfull technical details.","code":""},{"path":"tmle3.html","id":"substitution-est","chapter":"7 The TMLE Framework","heading":"7.3 Substitution Estimators","text":"can use sl3 fit Super Learner regression model estimate\noutcome regression function \\(\\mathbb{E}_0[Y \\mid ,W]\\), often refer\n\\(\\overline{Q}_0(,W)\\) whose estimate denote \\(\\overline{Q}_n(,W)\\).\nconstruct estimate ATE \\(\\psi_n\\), need “plug-” \nestimates \\(\\overline{Q}_n(,W)\\), evaluated two intervention contrasts,\ncorresponding ATE “plug-” formula:\n\\(\\psi_n = \\frac{1}{n}\\sum(\\overline{Q}_n(1,W)-\\overline{Q}_n(0,W))\\). kind\nestimator called plug-substitution estimator, since accurate\nestimates \\(\\psi_n\\) parameter \\(\\psi_0\\) may obtained substituting\nestimates \\(\\overline{Q}_n(,W)\\) relevant regression functions\n\\(\\overline{Q}_0(,W)\\) .Applying sl3 estimate outcome regression example, can see\nensemble machine learning predictions fit data quite well:solid lines indicate sl3 estimate regression function, \ndotted lines indicating tmle3 updates (described ).substitution estimators intuitive, naively using approach \nSuper Learner estimate \\(\\overline{Q}_0(,W)\\) several limitations. First,\nSuper Learner selecting learner weights minimize risk across entire\nregression function, instead “targeting” ATE parameter hope \nestimate, leading biased estimation. , sl3 trying well \nfull regression curve left, instead focusing small ticks \nright. ’s , sampling distribution approach \nasymptotically linear, therefore inference possible.can see limitations illustrated estimates generated \nexample data:see Super Learner, estimates true parameter value (indicated \ndashed vertical line) accurately GLM. However, still less\naccurate TMLE, valid inference possible. contrast, TMLE\nachieves less biased estimator valid inference.","code":""},{"path":"tmle3.html","id":"tmle","chapter":"7 The TMLE Framework","heading":"7.4 Targeted Maximum Likelihood Estimation","text":"TMLE takes initial estimate \\(\\overline{Q}_n(,W)\\) well estimate \npropensity score \\(g_n(\\mid W) = \\mathbb{P}(= 1 \\mid W)\\) produces \nupdated estimate \\(\\overline{Q}^{\\star}_n(,W)\\) “targeted” \nparameter interest. TMLE keeps benefits substitution estimators (\none), augments original, potentially erratic estimates correct \nbias also resulting asymptotically linear (thus normally\ndistributed) estimator accommodates inference via asymptotically consistent\nWald-style confidence intervals.","code":""},{"path":"tmle3.html","id":"tmle-updates","chapter":"7 The TMLE Framework","heading":"7.4.1 TMLE Updates","text":"different types TMLEs (, sometimes, multiple set \ntarget parameters) – , give example algorithm TML\nestimation ATE. \\(\\overline{Q}^{\\star}_n(,W)\\) TMLE-augmented\nestimate \\(f(\\overline{Q}^{\\star}_n(,W)) = f(\\overline{Q}_n(,W)) + \\epsilon \\cdot H_n(,W)\\), \\(f(\\cdot)\\) appropriate link function (e.g.,\n\\(\\text{logit}(x) = \\log(x / (1 - x))\\)), estimate \\(\\epsilon_n\\) \ncoefficient \\(\\epsilon\\) “clever covariate” \\(H_n(,W)\\) computed. \nform covariate \\(H_n(,W)\\) differs across target parameters; case\nATE, \\(H_n(,W) = \\frac{}{g_n(\\mid W)} - \\frac{1-}{1-g_n(, W)}\\), \\(g_n(,W) = \\mathbb{P}(=1 \\mid W)\\) estimated propensity\nscore, estimator depends initial fit (sl3) \noutcome regression (\\(\\overline{Q}_n\\)) propensity score (\\(g_n\\)).several robust augmentations used across tlverse,\nincluding use additional layer cross-validation avoid\n-fitting bias (.e., CV-TMLE) well approaches consistently\nestimating several parameters simultaneously (e.g., points survival\ncurve).","code":""},{"path":"tmle3.html","id":"tmle-infer","chapter":"7 The TMLE Framework","heading":"7.4.2 Statistical Inference","text":"Since TMLE yields asymptotically linear estimator, obtaining statistical\ninference convenient. TML estimator corresponding\n(efficient) influence function (often, “EIF”, short) describes \nasymptotic distribution estimator. using estimated EIF, Wald-style\ninference (asymptotically correct confidence intervals) can constructed\nsimply plugging form EIF initial estimates\n\\(\\overline{Q}_n\\) \\(g_n\\), computing sample standard error.following sections describe simple detailed way \nspecifying estimating TMLE tlverse. designing tmle3, \nsought replicate closely possible general estimation framework\nTMLE, theoretical object relevant TMLE encoded \ncorresponding software object/method. First, present simple\napplication tmle3 WASH Benefits example, go describe\nunderlying objects greater detail.","code":""},{"path":"tmle3.html","id":"easy-bake-example-tmle3-for-ate","chapter":"7 The TMLE Framework","heading":"7.5 Easy-Bake Example: tmle3 for ATE","text":"’ll illustrate basic use TMLE using WASH Benefits data\nintroduced earlier estimating average treatment effect.","code":""},{"path":"tmle3.html","id":"load-the-data","chapter":"7 The TMLE Framework","heading":"7.5.1 Load the Data","text":"’ll use WASH Benefits data earlier chapters:","code":"\nlibrary(data.table)\nlibrary(dplyr)\nlibrary(tmle3)\nlibrary(sl3)\nwashb_data <- fread(\n  paste0(\n    \"https://raw.githubusercontent.com/tlverse/tlverse-data/master/\",\n    \"wash-benefits/washb_data.csv\"\n  ),\n  stringsAsFactors = TRUE\n)"},{"path":"tmle3.html","id":"define-the-variable-roles","chapter":"7 The TMLE Framework","heading":"7.5.2 Define the variable roles","text":"’ll use common \\(W\\) (covariates), \\(\\) (treatment/intervention), \\(Y\\)\n(outcome) data structure. tmle3 needs know variables dataset\ncorrespond roles. use list character vectors tell\n. call “Node List” corresponds nodes Directed\nAcyclic Graph (DAG), way displaying causal relationships variables.","code":"\nnode_list <- list(\n  W = c(\n    \"month\", \"aged\", \"sex\", \"momage\", \"momedu\",\n    \"momheight\", \"hfiacat\", \"Nlt18\", \"Ncomp\", \"watmin\",\n    \"elec\", \"floor\", \"walls\", \"roof\", \"asset_wardrobe\",\n    \"asset_table\", \"asset_chair\", \"asset_khat\",\n    \"asset_chouki\", \"asset_tv\", \"asset_refrig\",\n    \"asset_bike\", \"asset_moto\", \"asset_sewmach\",\n    \"asset_mobile\"\n  ),\n  A = \"tr\",\n  Y = \"whz\"\n)"},{"path":"tmle3.html","id":"handle-missingness","chapter":"7 The TMLE Framework","heading":"7.5.3 Handle Missingness","text":"Currently, missingness tmle3 handled fairly simple way:Missing covariates median- (continuous) mode- (discrete)\nimputed, additional covariates indicating imputation generated, just\ndescribed sl3 chapter.Missing treatment variables excluded – observations dropped.Missing outcomes efficiently handled automatic calculation (\nincorporation estimators) inverse probability censoring weights\n(IPCW); also known IPCW-TMLE may thought joint\nintervention remove missingness analogous procedure used \nclassical inverse probability weighted estimators.steps implemented process_missing function tmle3:","code":"\nprocessed <- process_missing(washb_data, node_list)\nwashb_data <- processed$data\nnode_list <- processed$node_list"},{"path":"tmle3.html","id":"create-a-spec-object","chapter":"7 The TMLE Framework","heading":"7.5.4 Create a “Spec” Object","text":"tmle3 general, allows components TMLE procedure \nspecified modular way. However, users interested \nmanually specifying components. Therefore, tmle3 implements \ntmle3_Spec object bundles set components specification\n(“Spec”) , minimal additional detail, can run fit TMLE.’ll start using one specs, work way \ninternals tmle3.","code":"\nate_spec <- tmle_ATE(\n  treatment_level = \"Nutrition + WSH\",\n  control_level = \"Control\"\n)"},{"path":"tmle3.html","id":"define-the-learners","chapter":"7 The TMLE Framework","heading":"7.5.5 Define the learners","text":"Currently, thing user must define sl3 learners used\nestimate relevant factors likelihood: Q g.takes form list sl3 learners, one likelihood factor\nestimated sl3:, use Super Learner defined previous chapter. future,\nplan include reasonable defaults learners.","code":"\n# choose base learners\nlrnr_mean <- make_learner(Lrnr_mean)\nlrnr_rf <- make_learner(Lrnr_ranger)\n\n# define metalearners appropriate to data types\nls_metalearner <- make_learner(Lrnr_nnls)\nmn_metalearner <- make_learner(\n  Lrnr_solnp, metalearner_linear_multinomial,\n  loss_loglik_multinomial\n)\nsl_Y <- Lrnr_sl$new(\n  learners = list(lrnr_mean, lrnr_rf),\n  metalearner = ls_metalearner\n)\nsl_A <- Lrnr_sl$new(\n  learners = list(lrnr_mean, lrnr_rf),\n  metalearner = mn_metalearner\n)\nlearner_list <- list(A = sl_A, Y = sl_Y)"},{"path":"tmle3.html","id":"fit-the-tmle","chapter":"7 The TMLE Framework","heading":"7.5.6 Fit the TMLE","text":"now everything need fit tmle using tmle3:","code":"\ntmle_fit <- tmle3(ate_spec, washb_data, node_list, learner_list)\nprint(tmle_fit)\n#> A tmle3_Fit that took 1 step(s)\n#>    type                                    param  init_est tmle_est       se\n#> 1:  ATE ATE[Y_{A=Nutrition + WSH}-Y_{A=Control}] -0.005231  0.00812 0.050679\n#>        lower   upper psi_transformed lower_transformed upper_transformed\n#> 1: -0.091208 0.10745         0.00812         -0.091208           0.10745"},{"path":"tmle3.html","id":"evaluate-the-estimates","chapter":"7 The TMLE Framework","heading":"7.5.7 Evaluate the Estimates","text":"can see summary results printing fit object. Alternatively, \ncan extra results summary indexing :","code":"\nestimates <- tmle_fit$summary$psi_transformed\nprint(estimates)\n#> [1] 0.00812"},{"path":"tmle3.html","id":"tmle3-components","chapter":"7 The TMLE Framework","heading":"7.6 tmle3 Components","text":"Now ’ve successfully used spec obtain TML estimate, let’s look\nhood components. spec number functions \ngenerate objects necessary define fit TMLE.","code":""},{"path":"tmle3.html","id":"tmle3_task","chapter":"7 The TMLE Framework","heading":"7.6.1 tmle3_task","text":"First , tmle3_Task, analogous sl3_Task, containing data ’re\nfitting TMLE , well NPSEM generated node_list\ndefined , describing variables relationships.","code":"\ntmle_task <- ate_spec$make_tmle_task(washb_data, node_list)\ntmle_task$npsem\n#> $W\n#> tmle3_Node: W\n#>  Variables: month, aged, sex, momedu, hfiacat, Nlt18, Ncomp, watmin, elec, floor, walls, roof, asset_wardrobe, asset_table, asset_chair, asset_khat, asset_chouki, asset_tv, asset_refrig, asset_bike, asset_moto, asset_sewmach, asset_mobile, momage, momheight, delta_momage, delta_momheight\n#>  Parents: \n#> \n#> $A\n#> tmle3_Node: A\n#>  Variables: tr\n#>  Parents: W\n#> \n#> $Y\n#> tmle3_Node: Y\n#>  Variables: whz\n#>  Parents: A, W"},{"path":"tmle3.html","id":"initial-likelihood","chapter":"7 The TMLE Framework","heading":"7.6.2 Initial Likelihood","text":"Next, object representing likelihood, factorized according \nNPSEM described :components likelihood indicate factors estimated: \nmarginal distribution \\(W\\) estimated using NP-MLE, conditional\ndistributions \\(\\) \\(Y\\) estimated using sl3 fits (defined \nlearner_list) .can use tandem tmle_task object obtain likelihood\nestimates observation:","code":"\ninitial_likelihood <- ate_spec$make_initial_likelihood(\n  tmle_task,\n  learner_list\n)\nprint(initial_likelihood)\n#> W: Lf_emp\n#> A: LF_fit\n#> Y: LF_fit\ninitial_likelihood$get_likelihoods(tmle_task)\n#>                W       A        Y\n#>    1: 0.00021299 0.34925 -0.35834\n#>    2: 0.00021299 0.36117 -0.93261\n#>    3: 0.00021299 0.34740 -0.80873\n#>    4: 0.00021299 0.34248 -0.94020\n#>    5: 0.00021299 0.34134 -0.57866\n#>   ---                            \n#> 4691: 0.00021299 0.23375 -0.58997\n#> 4692: 0.00021299 0.23366 -0.22769\n#> 4693: 0.00021299 0.22660 -0.74235\n#> 4694: 0.00021299 0.28944 -0.91796\n#> 4695: 0.00021299 0.19533 -1.03878"},{"path":"tmle3.html","id":"targeted-likelihood-updater","chapter":"7 The TMLE Framework","heading":"7.6.3 Targeted Likelihood (updater)","text":"also need define “Targeted Likelihood” object. special type\nlikelihood able updated using tmle3_Update object. \nobject defines update strategy (e.g., submodel, loss function, CV-TMLE \n).constructing targeted likelihood, can specify different update\noptions. See documentation tmle3_Update details different\noptions. example, can disable CV-TMLE (default tmle3) \nfollows:","code":"\ntargeted_likelihood <- Targeted_Likelihood$new(initial_likelihood)\ntargeted_likelihood_no_cv <-\n  Targeted_Likelihood$new(initial_likelihood,\n    updater = list(cvtmle = FALSE)\n  )"},{"path":"tmle3.html","id":"parameter-mapping","chapter":"7 The TMLE Framework","heading":"7.6.4 Parameter Mapping","text":"Finally, need define parameters interest. , spec defines \nsingle parameter, ATE. next section, ’ll see add additional\nparameters.","code":"\ntmle_params <- ate_spec$make_params(tmle_task, targeted_likelihood)\nprint(tmle_params)\n#> [[1]]\n#> Param_ATE: ATE[Y_{A=Nutrition + WSH}-Y_{A=Control}]"},{"path":"tmle3.html","id":"putting-it-all-together","chapter":"7 The TMLE Framework","heading":"7.6.5 Putting it all together","text":"used spec manually generate components, can now\nmanually fit tmle3:result equivalent fitting using tmle3 function .","code":"\ntmle_fit_manual <- fit_tmle3(\n  tmle_task, targeted_likelihood, tmle_params,\n  targeted_likelihood$updater\n)\nprint(tmle_fit_manual)\n#> A tmle3_Fit that took 1 step(s)\n#>    type                                    param   init_est tmle_est       se\n#> 1:  ATE ATE[Y_{A=Nutrition + WSH}-Y_{A=Control}] -0.0045451  0.01174 0.050807\n#>       lower   upper psi_transformed lower_transformed upper_transformed\n#> 1: -0.08784 0.11132         0.01174          -0.08784           0.11132"},{"path":"tmle3.html","id":"fitting-tmle3-with-multiple-parameters","chapter":"7 The TMLE Framework","heading":"7.7 Fitting tmle3 with multiple parameters","text":", fit tmle3 just one parameter. tmle3 also supports fitting\nmultiple parameters simultaneously. illustrate , ’ll use \ntmle_TSM_all spec:spec generates Treatment Specific Mean (TSM) level \nexposure variable. Note must first generate new targeted likelihood,\nold one targeted ATE. However, can recycle initial\nlikelihood fit , saving us super learner step.","code":"\ntsm_spec <- tmle_TSM_all()\ntargeted_likelihood <- Targeted_Likelihood$new(initial_likelihood)\nall_tsm_params <- tsm_spec$make_params(tmle_task, targeted_likelihood)\nprint(all_tsm_params)\n#> [[1]]\n#> Param_TSM: E[Y_{A=Control}]\n#> \n#> [[2]]\n#> Param_TSM: E[Y_{A=Handwashing}]\n#> \n#> [[3]]\n#> Param_TSM: E[Y_{A=Nutrition}]\n#> \n#> [[4]]\n#> Param_TSM: E[Y_{A=Nutrition + WSH}]\n#> \n#> [[5]]\n#> Param_TSM: E[Y_{A=Sanitation}]\n#> \n#> [[6]]\n#> Param_TSM: E[Y_{A=WSH}]\n#> \n#> [[7]]\n#> Param_TSM: E[Y_{A=Water}]"},{"path":"tmle3.html","id":"delta-method","chapter":"7 The TMLE Framework","heading":"7.7.1 Delta Method","text":"can also define parameters based Delta Method Transformations \nparameters. instance, can estimate ATE using delta method two\nTSM parameters:can similarly used estimate derived parameters like Relative\nRisks, Population Attributable Risks","code":"\nate_param <- define_param(\n  Param_delta, targeted_likelihood,\n  delta_param_ATE,\n  list(all_tsm_params[[1]], all_tsm_params[[4]])\n)\nprint(ate_param)\n#> Param_delta: E[Y_{A=Nutrition + WSH}] - E[Y_{A=Control}]"},{"path":"tmle3.html","id":"fit","chapter":"7 The TMLE Framework","heading":"7.7.2 Fit","text":"can now fit TMLE simultaneously TSM parameters, well \ndefined ATE parameter","code":"\nall_params <- c(all_tsm_params, ate_param)\n\ntmle_fit_multiparam <- fit_tmle3(\n  tmle_task, targeted_likelihood, all_params,\n  targeted_likelihood$updater\n)\n\nprint(tmle_fit_multiparam)\n#> A tmle3_Fit that took 1 step(s)\n#>    type                                       param   init_est  tmle_est\n#> 1:  TSM                            E[Y_{A=Control}] -0.5959678 -0.620830\n#> 2:  TSM                        E[Y_{A=Handwashing}] -0.6188184 -0.660230\n#> 3:  TSM                          E[Y_{A=Nutrition}] -0.6111402 -0.606586\n#> 4:  TSM                    E[Y_{A=Nutrition + WSH}] -0.6005128 -0.608949\n#> 5:  TSM                         E[Y_{A=Sanitation}] -0.5857464 -0.578472\n#> 6:  TSM                                E[Y_{A=WSH}] -0.5205610 -0.448252\n#> 7:  TSM                              E[Y_{A=Water}] -0.5657364 -0.537709\n#> 8:  ATE E[Y_{A=Nutrition + WSH}] - E[Y_{A=Control}] -0.0045451  0.011881\n#>          se     lower    upper psi_transformed lower_transformed\n#> 1: 0.029901 -0.679435 -0.56223       -0.620830         -0.679435\n#> 2: 0.041719 -0.741998 -0.57846       -0.660230         -0.741998\n#> 3: 0.042047 -0.688996 -0.52418       -0.606586         -0.688996\n#> 4: 0.041285 -0.689867 -0.52803       -0.608949         -0.689867\n#> 5: 0.042396 -0.661566 -0.49538       -0.578472         -0.661566\n#> 6: 0.045506 -0.537442 -0.35906       -0.448252         -0.537442\n#> 7: 0.039253 -0.614644 -0.46077       -0.537709         -0.614644\n#> 8: 0.050801 -0.087688  0.11145        0.011881         -0.087688\n#>    upper_transformed\n#> 1:          -0.56223\n#> 2:          -0.57846\n#> 3:          -0.52418\n#> 4:          -0.52803\n#> 5:          -0.49538\n#> 6:          -0.35906\n#> 7:          -0.46077\n#> 8:           0.11145"},{"path":"tmle3.html","id":"exercises-1","chapter":"7 The TMLE Framework","heading":"7.8 Exercises","text":"","code":""},{"path":"tmle3.html","id":"tmle3-ex1","chapter":"7 The TMLE Framework","heading":"7.8.1 Estimation of the ATE with tmle3","text":"Follow steps estimate average treatment effect using data \nCollaborative Perinatal Project (CPP), available sl3 package. \nsimplify example, define binary intervention variable, parity01 –\nindicator one children current child \nbinary outcome, haz01 – indicator average height \nage.Define variable roles \\((W,,Y)\\) creating list nodes.\nInclude following baseline covariates \\(W\\): apgar1, apgar5,\ngagebrth, mage, meducyrs, sexn. \\(\\) \\(Y\\) specified\n. missingness data (specifically, missingness \ncolumns specified node list) need taking care .\nprocess_missing function can used accomplish , like \nwashb_data example .Define tmle3_Spec object ATE, tmle_ATE().Using base learning libraries defined , specify sl3 base\nlearners estimation \\(\\overline{Q}_0 = \\mathbb{E}_0(Y \\mid ,Y)\\) \n\\(g_0 = \\mathbb{P}(= 1 \\mid W)\\).Define metalearner like .Define one super learner estimating \\(\\overline{Q}_0\\) another \nestimating \\(g_0\\). Use metalearner super learners.Create list two super learners defined step call\nobject learner_list. list names (defining super\nlearner estimation \\(g_0\\)) Y (defining super learner \nestimation \\(\\overline{Q}_0\\)).Fit TMLE tmle3 function specifying (1) tmle3_Spec,\ndefined Step 2; (2) data; (3) list nodes, \nspecified Step 1; (4) list super learners estimation \n\\(g_0\\) \\(\\overline{Q}_0\\), defined Step 6. Note: Like ,\nneed explicitly make copy data (work around\ndata.table optimizations), e.g., (cpp2 <- data.table::copy(cpp)), \nuse cpp2 data going forward.","code":"\n# load the data set\ndata(cpp)\ncpp <- cpp %>%\n  as_tibble() %>%\n  dplyr::filter(!is.na(haz)) %>%\n  mutate(\n    parity01 = as.numeric(parity > 0),\n    haz01 = as.numeric(haz > 0)\n  )\nmetalearner <- make_learner(\n  Lrnr_solnp,\n  loss_function = loss_loglik_binomial,\n  learner_function = metalearner_logistic_binomial\n)"},{"path":"tmle3.html","id":"tmle3-ex2","chapter":"7 The TMLE Framework","heading":"7.8.2 Estimation of Strata-Specific ATEs with tmle3","text":"exercise, work random sample 5,000 patients \nparticipated International Stroke Trial (IST). data described \nChapter 3.2 tlverse handbook. included data \nsummarized description relevant exercise.outcome, \\(Y\\), indicates recurrent ischemic stroke within 14 days \nrandomization (DRSISC); treatment interest, \\(\\), randomized\naspirin vs. aspirin treatment allocation (RXASP ist); \nadjustment set, \\(W\\), consists simply variables measured baseline. \ndata, outcome occasionally missing, need create \nvariable indicating missingness (\\(\\Delta\\)) analyses \ntlverse, since missingness automatically detected NA present\noutcome. Covariates missing values (RATRIAL, RASP3 RHEP24)\nalready imputed. Additional covariates created\n(MISSING_RATRIAL_RASP3 MISSING_RHEP24), indicate whether \ncovariate imputed. missingness identical RATRIAL \nRASP3, one covariate indicating imputation two\ncovariates created.Estimate average effect randomized asprin treatment (RXASP = 1) \nrecurrent ischemic stroke. Even though missingness mechanism \\(Y\\),\n\\(\\Delta\\), need specified node list, still need\naccounted TMLE. words, estimation problem,\n\\(\\Delta\\) relevant factor likelihood. Thus, defining \nlist sl3 learners likelihood factor, sure include list\nlearners estimation \\(\\Delta\\), say sl_Delta, specify \nlearner list, like \nlearner_list <- list(= sl_A, delta_Y = sl_Delta, Y = sl_Y).Recall RCT conducted internationally. Suposse concern\ndose asprin may varied across geographical regions, \naverage across geographical regions may warranted. Calculate \nstrata specific ATEs according geographical region (REGION).","code":"\nist_data <- fread(\n  paste0(\n    \"https://raw.githubusercontent.com/tlverse/deming2019-workshop/\",\n    \"master/data/ist_sample.csv\"\n  )\n)"},{"path":"tmle3.html","id":"summary","chapter":"7 The TMLE Framework","heading":"7.9 Summary","text":"tmle3 general purpose framework generating TML estimates. easiest\nway use use predefined spec, allowing just fill \nblanks data, variable roles, sl3 learners. However, digging \nhood allows users specify wide range TMLEs. next sections,\n’ll see framework can used estimate advanced parameters \noptimal treatments stochastic shift interventions.","code":""},{"path":"optimal-individualized-treatment-regimes.html","id":"optimal-individualized-treatment-regimes","chapter":"8 Optimal Individualized Treatment Regimes","heading":"8 Optimal Individualized Treatment Regimes","text":"Ivana MalenicaBased tmle3mopttx R package\nIvana Malenica, Jeremy Coyle, Mark van der Laan.Updated: 2021-04-04","code":""},{"path":"optimal-individualized-treatment-regimes.html","id":"learning-objectives-4","chapter":"8 Optimal Individualized Treatment Regimes","heading":"8.1 Learning Objectives","text":"Differentiate dynamic optimal dynamic treatment interventions static\ninterventions.Explain benefits, challenges, associated using optimal\nindividualized treatment regimes practice.Contrast impact implementing optimal individualized treatment\nregime population impact implementing static dynamic\ntreatment regimes population.Estimate causal effects optimal individualized treatment regimes \ntmle3mopttx R package.Assess mean optimal individualized treatment resource\nconstraints.Implement optimal individualized treatment rules based sub-optimal\nrules, “simple” rules, recognize practical benefit rules.Construct “realistic” optimal individualized treatment regimes respect\nreal data subject-matter knowledge limitations interventions \nconsidering interventions supported data.Measure variable importance defined terms optimal individualized\ntreatment interventions.","code":""},{"path":"optimal-individualized-treatment-regimes.html","id":"introduction-to-optimal-individualized-interventions","chapter":"8 Optimal Individualized Treatment Regimes","heading":"8.2 Introduction to Optimal Individualized Interventions","text":"Identifying intervention effective patient based \nlifestyle, genetic environmental factors common goal precision\nmedicine. put context, Abacavir Tenofovir commonly prescribed\npart antiretroviral therapy Human Immunodeficiency Virus (HIV)\npatients. However, individuals benefit two medications equally.\nparticular, patients renal dysfunction might deteriorate \nprescribed Tenofovir, due high nephrotoxicity caused medication.\nTenofovir still highly effective treatment option HIV patients, \norder maximize patient’s well-, beneficial prescribe\nTenofovir individuals healthy kidney function. Along \nlines, one might seek improve retention HIV care. randomized clinical\ntrial, several interventions show efficacy- including appointment reminders\ntext messages, small cash incentives time clinic visits, peer\nhealth workers. Ideally, want improve effectiveness assigning \npatient intervention likely benefit , well \nimprove efficiency allocating resources individuals need\n, benefit .\nFIGURE 5.1: Dynamic Treatment Regime Clinical Setting\nOne opts administer intervention individuals profit instead,\ninstead assigning treatment population level. know \nintervention works patient? aim motivates different type \nintervention, opposed static exposures described previous chapters. \nparticular, chapter learn dynamic “individualized”\ninterventions tailor treatment decision based collected\ncovariates. Formally, dynamic treatments represent interventions \ntreatment-decision stage allowed respond currently available\ntreatment covariate history.statistics community treatment strategy termed \nindividualized treatment regime (ITR), (counterfactual) population\nmean outcome ITR value ITR (Neyman 1990; Robins 1986; Pearl 2009b). Even , suppose one wishes maximize population mean \noutcome, individual access set measured\ncovariates. means, example, can learn individual\ncharacteristics assigning treatment increases probability beneficial\noutcome. ITR maximal value referred \noptimal ITR optimal individualized treatment. Consequently, value\noptimal ITR termed optimal value, mean optimal\nindividualized treatment.problem estimating optimal individualized treatment received much\nattention statistics literature years, especially \nadvancement precision medicine; see Murphy (2003), Robins (2004), Zhang et al. (2016),\nZhao et al. (2012), Chakraborty Moodie (2013) Robins Rotnitzky (2014) name . However, much \nearly work depends parametric assumptions. , even randomized\ntrial, statistical inference optimal individualized treatment relies\nassumptions generally believed false, can lead biased\nresults.chapter, consider estimation mean outcome optimal\nindividualized treatment candidate rules restricted depend \nuser-supplied subset baseline covariates. estimation problem \naddressed statistical model data distribution \nnonparametric, places restrictions probability patient\nreceiving treatment given covariates (randomized trial). , \ndon’t need make assumptions relationship outcome \ntreatment covariates, relationship treatment \ncovariates. , provide Targeted Maximum Likelihood Estimator \nmean optimal individualized treatment allows us generate valid\ninference parameter, without parametric assumptions. \ntechnical presentation algorithm, interested reader invited \nconsult van der Laan Luedtke (2015) Luedtke van der Laan (2016).","code":""},{"path":"optimal-individualized-treatment-regimes.html","id":"data-structure-and-notation","chapter":"8 Optimal Individualized Treatment Regimes","heading":"8.3 Data Structure and Notation","text":"Suppose observe \\(n\\) independent identically distributed observations \nform \\(O=(W,,Y) \\sim P_0\\). denote \\(\\) categorical treatment, \\(Y\\)\nfinal outcome. particular, define \\(\\\\mathcal{}\\) \n\\(\\mathcal{} \\equiv \\{a_1, \\cdots, a_{n_A} \\}\\) \\(n_A = |\\mathcal{}|\\), \n\\(n_A\\) denoting number categories (possibly two, binary setup).\nNote treat \\(W\\) vector-valued, representing collected\nbaseline covariates. Therefore, single random individual \\(\\), \nobserved data \\(O_i\\): corresponding baseline covariates \\(W_i\\),\ntreatment \\(A_i\\), final outcome \\(Y_i\\). say \\(O \\sim P_0\\), \ndata drawn true probability distribution \\(P_0\\). Let \\(\\mathcal{M}\\)\ndenote statistical model, \\(P_0 \\\\mathcal{M}\\). emphasize \nmake assumptions distribution \\(P_0\\), hence \\(\\mathcal{M}\\) \nfully nonparametric model. previously mentioned, means make \nassumptions relationship variables, might able say\nsomething relationship \\(\\) \\(W\\), case randomized\ntrial. previous chapters, denote \\(P_n\\) empirical distribution\ngives observation weight \\(1/n\\).use nonparametric structural equation model (NPSEM) order define\nprocess gives rise observed (endogenous) observed\n(exogenous) variables, described Pearl (2009a). particular, \ndenote \\(U=(U_W,U_A,U_Y)\\) exogenous random variables, \\(O=(W,,Y)\\) \nendogenous variables observe. joint distribution exogenous \nendogenous random variables \\(\\mathcal{M}^F\\) (defined NPSEM) \n\\(P_{U,X}\\). can define relationships variables following\nstructural equations:\n\\[\\begin{align}\n  W &= f_W(U_W) \\\\ &= f_A(W, U_A) \\\\ Y &= f_Y(, W, U_Y),\n  \\tag{8.1}\n\\end{align}\\]\ncollection \\(f=(f_W,f_A,f_Y)\\) denotes unspecified functions. Note \ncase randomized trial, can write NPSEM \n\\[\\begin{align}\n  W &= f_W(U_W) \\\\ &= U_A \\\\ Y &= f_Y(, W, U_Y),\n  \\tag{8.2}\n\\end{align}\\]\nindicating dependence treatment baseline covariates.likelihood data admits factorization, implied time ordering\n\\(O\\). denote density \\(O\\) \\(p_0\\), corresponding \ndistribution \\(P_0\\) dominating measure \\(\\mu\\).\n\\[\\begin{equation}\n  p_0(O) = p_{Y,0}(Y \\mid ,W) p_{,0}(\\mid W) p_{W,0}(W) =\n    q_{Y,0}(Y \\mid ,W) q_{,0}(\\mid W) q_{W,0}(W),\n  \\tag{8.3}\n\\end{equation}\\]\n\\(p_{Y,0}(Y|,W)\\) conditional density \\(Y\\) given \\((, W)\\) \nrespect dominating measure \\(\\mu_Y\\), \\(p_{,0}\\) conditional density\n\\(\\) given \\(W\\) respect dominating measure \\(\\mu_A\\), \\(p_{W,0}\\) \ndensity \\(W\\) respect dominating measure \\(\\mu_W\\). Consequently, \ndefine \\(P_{Y,0}(Y \\mid , W) = Q_{Y,0}(Y \\mid ,W)\\), \\(P_{,0}(\\mid W) = g_0(\\mid W)\\) \\(P_{W,0}(W)=Q_{W,0}(W)\\) corresponding conditional\ndistribution \\(Y\\) given \\((,W)\\), treatment mechanism \\(\\) given \\(W\\), \ndistribution baseline covariates. notational simplicity, also define\n\\(\\bar{Q}_{Y,0}(,W) \\equiv \\E_0[Y \\mid ,W]\\) conditional expectation \n\\(Y\\) given \\((,W)\\).Lastly, define \\(V\\) subset baseline covariates optimal\nindividualized rule depends , \\(V \\W\\). Note \\(V\\) \n\\(W\\), empty set, depending subject matter knowledge. particular,\nresearcher might want consider known effect modifiers available time\ntreatment decision possible \\(V\\) covariates. Defining \\(V\\) allows us \nconsider possibly sub-optimal rules easier estimate, thereby\nallows statistical inference counterfactual mean outcome \nsub-optimal rule.","code":""},{"path":"optimal-individualized-treatment-regimes.html","id":"defining-the-causal-effect-of-an-optimal-individualized-intervention","chapter":"8 Optimal Individualized Treatment Regimes","heading":"8.4 Defining the Causal Effect of an Optimal Individualized Intervention","text":"Consider dynamic treatment rules \\(d\\) set possible rules\n\\(\\mathcal{D}\\). , \\(d\\) function takes input \\(V\\) outputs \ntreatment decision, \\(V \\rightarrow d(V) \\\\{a_1, \\cdots, a_{n_A} \\} \\times \\{1\\}\\). use dynamic treatment rules, corresponding treatment\ndecision, describe intervention treatment mechanism \ncorresponding outcome dynamic treatment rule.mentioned previous section, causal effects defined terms \nhypothetical interventions NPSEM (8.1). can define\ncounterfactuals \\(Y_{d(V)}\\) defined modified system equation\n\\(\\) replaced rule \\(d(V)\\), dependent covariates \\(V\\). \nmodified system takes following form:\n\\[\\begin{align}\n  W &= f_W(U_W) \\\\ &= d(V) \\\\ Y_{d(V)} &= f_Y(d(V), W, U_Y),\n  \\tag{8.4}\n\\end{align}\\]\ndynamic treatment regime may viewed intervention \\(\\)\nset equal value based hypothetical regime \\(d(V)\\), possibly contrary\nfact, \\(Y_{d(V)}\\) corresponding outcome \\(d(V)\\). \ndenote distribution counterfactual quantities \\(P_{0,d(V)}\\).goal causal analysis motivated dynamic interventions \nestimate parameter defined counterfactual mean outcome \nrespect modified intervention distribution. , subject’s outcome\n, possibly contrary fact, subject received treatment \nassigned rule \\(d(V)\\). can consider different treatment rules,\nset \\(\\mathcal{D}\\):true rule, \\(d_0\\), corresponding causal parameter\n\\(\\E_{U,X}[Y_{d_0(V)}]\\);true rule, \\(d_0\\), corresponding causal parameter\n\\(\\E_{U,X}[Y_{d_0(V)}]\\);estimated rule, \\(d_n\\), corresponding causal parameter\n\\(\\E_{U,X}[Y_{d_n(V)}]\\).estimated rule, \\(d_n\\), corresponding causal parameter\n\\(\\E_{U,X}[Y_{d_n(V)}]\\).chapter, focus estimated rule \\(d_n\\), \ncorresponding data-adaptive parameter.optimal individualized rule rule maximal value:\n\\[d_{opt}(V) \\equiv \\text{argmax}_{d(V) \\\\mathcal{D}}\n\\E_{P_{U,X}}[Y_{d(V)}]\\].note , case problem hand requires minimizing mean \noutcome, optimal individualized rule rule minimal value\ninstead. causal target parameter interest expected outcome \nestimated optimal individualized rule:\\[\\Psi_{d_{n, \\text{opt}}(V)}(P_{U,X}) \\coloneqq \\E_{P_{U,X}}[Y_{d_{n,\n\\text{opt}}(V)}].\\]","code":""},{"path":"optimal-individualized-treatment-regimes.html","id":"identification-and-statistical-estimand","chapter":"8 Optimal Individualized Treatment Regimes","heading":"8.4.1 Identification and Statistical Estimand","text":"optimal individualized rule, well value optimal\nindividualized rule, causal parameters based unobserved\ncounterfactuals. order causal quantities estimated \nobserved data, need identified statistical parameters. step\nroadmap requires make assumptions:Strong ignorability: \\(\\indep Y^{d_n(v)} \\mid W\\), \\(\\\\mathcal{}\\).Positivity (overlap): \\(P_0(\\min_{\\\\mathcal{}} g_0(\\mid W) > 0) = 1\\)causal assumptions, can identify \\(P_{0,d}\\) observed data\nusing G-computation formula:\\[P_{0,d_{n, \\text{opt}}}(O) = Q_{Y,0}(Y \\mid =d_{n,\\text{opt}}(V),W)\ng_0(=d_{n,\\text{opt}}(V) \\mid W)Q_{W,0}(W).\\]\nvalue individualized rule can now expressed \\[\\E_0[Y_{d_n(V)}] = \\E_{0,W}[\\bar{Q}_{Y,0}(=d_n(V),W)],\\], causal assumptions, can interpreted mean outcome \n(possibly contrary fact), treatment assigned according rule.\nFinally, statistical counterpart causal parameter interest \ndefined \n\\[\\psi_0 = \\E_{0,W}[\\bar{Q}_{Y,0}(=d_{n,\\text{opt}}(V),W)].\\]Inference optimal value shown difficult exceptional\nlaws, defined probability distributions treatment neither\nbeneficial harmful. Inference similarly difficult finite samples \ntreatment effect small strata, even though valid asymptotic\nestimators exist setting. mind, address estimation\nproblem assumption non-exceptional laws effect.Many methods learning optimal rule data developed\n(Murphy 2003; Robins 2004; Zhang et al. 2016; Zhao et al. 2012; Chakraborty Moodie 2013). \nchapter, focus methods discussed Luedtke van der Laan (2016) \nvan der Laan Luedtke (2015). Note however, tmle3mopttx also supports widely\nused Q-learning approach, optimal individualized rule based \ninitial estimate \\(\\bar{Q}_{Y,0}(,W)\\) (Sutton, Barto, others 1998).follow methodology outlined Luedtke van der Laan (2016) \nvan der Laan Luedtke (2015), learn optimal ITR using Super Learner\n(van der Laan, Polley, Hubbard 2007), estimate value cross-validated Targeted Minimum\nLoss-based Estimation (CV-TMLE) (Zheng van der Laan 2010). great generality, first\nneed estimate true individual treatment regime, \\(d_0(V)\\), \ncorresponds dynamic treatment rule (\\(d(V)\\)) takes subset covariates\n\\(V \\W\\) assigns treatment individual based observed\ncovariates \\(v\\). estimate true optimal ITR hand, can\nestimate corresponding value.","code":""},{"path":"optimal-individualized-treatment-regimes.html","id":"binary-treatment","chapter":"8 Optimal Individualized Treatment Regimes","heading":"8.4.2 Binary treatment","text":"estimate optimal individualized treatment regime? case \nbinary treatment, key quantity optimal ITR blip function. One can\nshow optimal ITR assigns treatment individuals falling strata \nstratum specific average treatment effect, blip function, \npositive assign treatment individuals quantity \nnegative. Therefore binary treatment, causal assumptions, define\nblip function :\n\\[\\bar{Q}_0(V) \\equiv \\E_0[Y_1-Y_0 \\mid V] \\equiv \\E_0[\\bar{Q}_{Y,0}(1,W) -\n\\bar{Q}_{Y,0}(0,W) \\mid V],\\]\naverage treatment effect within stratum \\(V\\). note \noptimal individualized rule can now derived \\(d_{n,\\text{opt}}(V) = \\mathbb{}(\\bar{Q}_{0}(V) > 0)\\).package tmle3mopttx relies using Super Learner estimate blip\nfunction, easily extends general categorical treatment. \nmind, loss function utilized learning optimal individualized rule\ncorresponds conditional mean type losses. however worth mentioning \nLuedtke van der Laan (2016) present three different approaches learning optimal\nrule. Namely, focus :Super Learning Blip Function,Super Learning Blip Function,Super Learning Weighted Classification Problem,Super Learning Weighted Classification Problem,Joint Super Learner Blip Weighted Classification Problem.Joint Super Learner Blip Weighted Classification Problem.refer interested reader Luedtke van der Laan (2016) reference \nadvantages approach.Relying Targeted Maximum Likelihood (TML) estimator Super Learner\nestimate blip function, follow steps order obtain\nvalue ITR:Estimate \\(\\bar{Q}_{Y,0}(,W)\\) \\(g_0(\\mid W)\\) using sl3. denote \nestimates \\(\\bar{Q}_{Y,n}(,W)\\) \\(g_n(\\mid W)\\).Apply doubly robust Augmented-Inverse Probability Weighted (-IPW)\ntransform outcome, define:\n\\[D_{\\bar{Q}_Y,g,}(O) \\equiv \\frac{\\mathbb{}(=)}{g(\\mid W)} (Y -\n\\bar{Q}_Y(,W)) + \\bar{Q}_Y(=,W)\\]Note randomization positivity assumptions \n\\(\\E[D_{\\bar{Q}_Y,g,}(O) \\mid V] = \\E[Y_a \\mid V]\\). emphasize double\nrobust nature -IPW transform-consistency \\(\\E[Y_a \\mid V]\\) depend\ncorrect estimation either \\(\\bar{Q}_{Y,0}(,W)\\) \\(g_0(\\mid W)\\). \n, randomized trial, guaranteed consistent estimate \\(\\E[Y_a \\mid V]\\) even get \\(\\bar{Q}_{Y,0}(,W)\\) wrong!Using transform, can define following contrast:\n\\(D_{\\bar{Q}_Y,g}(O) = D_{\\bar{Q}_Y, g, =1}(O) - D_{\\bar{Q}_Y, g, =0}(O)\\)estimate blip function, \\(\\bar{Q}_{0,}(V)\\), regressing\n\\(D_{\\bar{Q}_Y,g}(O)\\) \\(V\\) using specified sl3 library learners \nappropriate loss function.estimated rule corresponds \\(\\text{argmax}_{\\\\mathcal{}} \\bar{Q}_{0,}(V)\\).obtain inference mean outcome estimated optimal rule\nusing CV-TMLE.","code":""},{"path":"optimal-individualized-treatment-regimes.html","id":"categorical-treatment","chapter":"8 Optimal Individualized Treatment Regimes","heading":"8.4.3 Categorical treatment","text":"line approach considered binary treatment, extend blip\nfunction allow categorical treatment. denote blip function\nextensions pseudo-blips, new estimation targets \ncategorical setting. define pseudo-blips vector-valued entities \noutput given \\(V\\) vector length equal number treatment\ncategories, \\(n_A\\). , define :\n\\[\\bar{Q}_0^{pblip}(V) = \\{\\bar{Q}_{0,}^{pblip}(V): \\\\mathcal{} \\}\\]implement three different pseudo-blips tmle3mopttx.Blip1 corresponds choosing reference category treatment, \ndefining blip categories relative specified\nreference. Hence :\n\\[\\bar{Q}_{0,}^{pblip-ref}(V) \\equiv \\E_0(Y_a-Y_0 \\mid V)\\] \\(Y_0\\) \nspecified reference category \\(=0\\). Note , case \nbinary treatment, strategy reduces approach described \nbinary setup.Blip1 corresponds choosing reference category treatment, \ndefining blip categories relative specified\nreference. Hence :\n\\[\\bar{Q}_{0,}^{pblip-ref}(V) \\equiv \\E_0(Y_a-Y_0 \\mid V)\\] \\(Y_0\\) \nspecified reference category \\(=0\\). Note , case \nbinary treatment, strategy reduces approach described \nbinary setup.Blip2 approach corresponds defining blip relative average \ncategories. , can define \\(\\bar{Q}_{0,}^{pblip-avg}(V)\\) :\n\\[\\bar{Q}_{0,}^{pblip-avg}(V) \\equiv \\E_0(Y_a - \\frac{1}{n_A} \\sum_{\\\n  \\mathcal{}} Y_a \\mid V)\\]\ncase subject-matter knowledge regarding reference category\nuse available, blip2 might viable option.Blip2 approach corresponds defining blip relative average \ncategories. , can define \\(\\bar{Q}_{0,}^{pblip-avg}(V)\\) :\n\\[\\bar{Q}_{0,}^{pblip-avg}(V) \\equiv \\E_0(Y_a - \\frac{1}{n_A} \\sum_{\\\n  \\mathcal{}} Y_a \\mid V)\\]\ncase subject-matter knowledge regarding reference category\nuse available, blip2 might viable option.Blip3 reflects extension Blip2, average now weighted\naverage:\n\\[\\bar{Q}_{0,}^{pblip-wavg}(V) \\equiv \\E_0(Y_a - \\frac{1}{n_A} \\sum_{\\\n  \\mathcal{}} Y_{} P(=\\mid V) \\mid V)\\]Blip3 reflects extension Blip2, average now weighted\naverage:\n\\[\\bar{Q}_{0,}^{pblip-wavg}(V) \\equiv \\E_0(Y_a - \\frac{1}{n_A} \\sum_{\\\n  \\mathcal{}} Y_{} P(=\\mid V) \\mid V)\\]Just like binary case, pseudo-blips estimated regressing contrasts\ncomposed using -IPW transform \\(V\\).","code":""},{"path":"optimal-individualized-treatment-regimes.html","id":"note-on-inference-and-data-adaptive-parameter","chapter":"8 Optimal Individualized Treatment Regimes","heading":"8.4.4 Note on Inference and data-adaptive parameter","text":"randomized trial, statistical inference relies second-order\ndifference estimator optimal individualized treatment \noptimal individualized treatment asymptotically negligible. \nreasonable condition consider rules depend small number \ncovariates, willing make smoothness assumptions. Alternatively,\ncan consider TMLEs statistical inference data-adaptive target\nparameters defined terms estimate optimal individualized\ntreatment. particular, instead trying estimate mean true\noptimal individualized treatment, aim estimate mean \nestimated optimal individualized treatment. , develop cross-validated\nTMLE approach provides asymptotic inference minimal conditions \nmean estimate optimal individualized treatment. \nparticular, considering data adaptive parameter allows us avoid\nconsistency rate condition fitted optimal rule, required \nasymptotic linearity TMLE mean actual, true optimal\nrule. Practically, estimated (data-adaptive) rule preferred, \npossibly sub-optimal rule one implemented population.","code":""},{"path":"optimal-individualized-treatment-regimes.html","id":"why-cv-tmle","chapter":"8 Optimal Individualized Treatment Regimes","heading":"8.4.5 Why CV-TMLE?","text":"discussed van der Laan Luedtke (2015), CV-TMLE necessary \nnon-cross-validated TMLE biased upward mean outcome rule,\ntherefore overly optimistic. generally however, using CV-TMLE allows us\nfreedom estimation therefore greater data adaptivity, without\nsacrificing inference.","code":""},{"path":"optimal-individualized-treatment-regimes.html","id":"interpreting-the-causal-effect-of-an-optimal-individualized-intervention","chapter":"8 Optimal Individualized Treatment Regimes","heading":"8.5 Interpreting the Causal Effect of an Optimal Individualized Intervention","text":"summary, mean outcome optimal individualized treatment \ncounterfactual quantity interest representing mean outcome \neverybody, contrary fact, received treatment optimized\noutcome. optimal individualized treatment regime rule \noptimizes mean outcome dynamic treatment, candidate\nrules restricted respond user-supplied subset baseline\nintermediate covariates. essence, target parameter answers key\naim precision medicine: allocating available treatment tailoring \nindividual characteristics patient, goal optimizing \nfinal outcome.","code":""},{"path":"optimal-individualized-treatment-regimes.html","id":"oit-eval-bin","chapter":"8 Optimal Individualized Treatment Regimes","heading":"8.6 Evaluating the Causal Effect of an OIT with Binary Treatment","text":"Finally, demonstrate evaluate mean outcome optimal\nindividualized treatment using tmle3mopptx. start, let’s load packages\n’ll use set seed:","code":"\nlibrary(data.table)\nlibrary(sl3)\nlibrary(tmle3)\nlibrary(tmle3mopttx)"},{"path":"optimal-individualized-treatment-regimes.html","id":"simulated-data","chapter":"8 Optimal Individualized Treatment Regimes","heading":"8.6.1 Simulated Data","text":"First, load simulated data. start general setup\ntreatment binary variable; later chapter consider\nanother data-generating distribution \\(\\) categorical. example,\ndata generating distribution following form:\n\\[\\begin{align*}\n  W &\\sim \\mathcal{N}(\\bf{0},I_{3 \\times 3})\\\\\n  P(=1|W) &= \\frac{1}{1+\\exp^{(-0.8*W_1)}}\\\\\n  P(Y=1|,W) &= 0.5\\text{logit}^{-1}[-5I(=1)(W_1-0.5)+5I(=0)(W_1-0.5)] +\n     0.5\\text{logit}^{-1}(W_2W_3)\n\\end{align*}\\]composes observed data structure \\(O = (W, , Y)\\). Note \nmean true optimal rule \\(\\psi=0.578\\) data generating\ndistribution.formally express fact using tlverse grammar introduced \ntmle3 package, create single data object specify functional\nrelationships nodes directed acyclic graph (DAG) via\nnonparametric structural equation models (NPSEMs), reflected node list\nset :now observed data structure (data) specification role\nvariable data set plays nodes DAG.","code":"\ndata(\"data_bin\")\n# organize data and nodes for tmle3\ndata <- data_bin\nnode_list <- list(\n  W = c(\"W1\", \"W2\", \"W3\"),\n  A = \"A\",\n  Y = \"Y\"\n)"},{"path":"optimal-individualized-treatment-regimes.html","id":"constructing-optimal-stacked-regressions-with-sl3","chapter":"8 Optimal Individualized Treatment Regimes","heading":"8.6.2 Constructing Optimal Stacked Regressions with sl3","text":"easily incorporate ensemble machine learning estimation procedure,\nrely facilities provided sl3 R\npackage. Using framework provided sl3\npackage, nuisance parameters TML estimator\nmay fit ensemble learning, using cross-validation framework \nSuper Learner algorithm van der Laan, Polley, Hubbard (2007).seen , generate three different ensemble learners must fit,\ncorresponding learners outcome regression (Q), propensity score\n(g), blip function (B). make explicit respect \nstandard notation bundling ensemble learners list object :learner_list object specifies role ensemble\nlearners ’ve generated play computing initial estimators. Recall \nneed initial estimators relevant parts likelihood order \nbuilding TMLE parameter interest. particular, learner_list\nmakes explicit fact Y used fitting outcome regression,\nused fitting treatment mechanism regression, finally B\nused fitting blip function.","code":"\n# Define sl3 library and metalearners:\nlrn_xgboost_50 <- Lrnr_xgboost$new(nrounds = 50)\nlrn_xgboost_100 <- Lrnr_xgboost$new(nrounds = 100)\nlrn_xgboost_500 <- Lrnr_xgboost$new(nrounds = 500)\nlrn_mean <- Lrnr_mean$new()\nlrn_glm <- Lrnr_glm_fast$new()\n\n## Define the Q learner:\nQ_learner <- Lrnr_sl$new(\n  learners = list(\n    lrn_xgboost_50, lrn_xgboost_100,\n    lrn_xgboost_500, lrn_mean, lrn_glm\n  ),\n  metalearner = Lrnr_nnls$new()\n)\n\n## Define the g learner:\ng_learner <- Lrnr_sl$new(\n  learners = list(lrn_xgboost_100, lrn_glm),\n  metalearner = Lrnr_nnls$new()\n)\n\n## Define the B learner:\nb_learner <- Lrnr_sl$new(\n  learners = list(\n    lrn_xgboost_50, lrn_xgboost_100,\n    lrn_xgboost_500, lrn_mean, lrn_glm\n  ),\n  metalearner = Lrnr_nnls$new()\n)\n# specify outcome and treatment regressions and create learner list\nlearner_list <- list(Y = Q_learner, A = g_learner, B = b_learner)"},{"path":"optimal-individualized-treatment-regimes.html","id":"targeted-estimation-of-the-mean-under-the-optimal-individualized-interventions-effects","chapter":"8 Optimal Individualized Treatment Regimes","heading":"8.6.3 Targeted Estimation of the Mean under the Optimal Individualized Interventions Effects","text":"start, initialize specification TMLE parameter \ninterest simply calling tmle3_mopttx_blip_revere. specify argument\nV = c(\"W1\", \"W2\", \"W3\") initializing tmle3_Spec object order \ncommunicate ’re interested learning rule dependent V\ncovariates. Note don’t specify V- result rule\nbased collected covariates. also need specify type\npseudo-blip use estimation problem, list learners used\nestimate blip function, whether want maximize minimize final\noutcome, advanced features including searching less\ncomplex rule realistic interventions.seen , tmle3_mopttx_blip_revere specification object\n(like tmle3_Spec objects) store data \nspecific analysis interest. Later,\n’ll see passing data object directly tmle3 wrapper function,\nalongside instantiated tmle_spec, serve construct tmle3_Task\nobject internally.elaborate initialization specifications. initializing \nspecification TMLE parameter interest, specified \nset covariates rule depends (V), type pseudo-blip use\n(type), learners used estimating relevant parts \nlikelihood blip function. addition, need specify whether \nwant maximize mean outcome rule (maximize), whether \nwant estimate rule covariates \\(V\\) provided user\n(complex). FALSE, tmle3mopttx instead consider possible\nrules smaller set covariates including static rules, optimize\nmean outcome subsets \\(V\\). , user might \nprovided full set collected covariates input \\(V\\), possible\ntrue rule depends subset set provided user. \ncase, returned mean optimal individualized rule based\nsmaller subset. addition, provide option search realistic\noptimal individualized interventions via realistic specification. \nTRUE, treatments supported data considered, therefore\nalleviating concerns regarding practical positivity issues. explore \nimportant extensions tmle3mopttx later sections.can see estimate \\(psi_0\\) \\(0.56\\), confidence\ninterval covers true mean true optimal individualized treatment.","code":"\n# initialize a tmle specification\ntmle_spec <- tmle3_mopttx_blip_revere(\n  V = c(\"W1\", \"W2\", \"W3\"), type = \"blip1\",\n  learners = learner_list,\n  maximize = TRUE, complex = TRUE, realistic = FALSE\n)\n# fit the TML estimator\nfit <- tmle3(tmle_spec, data, node_list, learner_list)\nfit\n#> A tmle3_Fit that took 1 step(s)\n#>    type         param init_est tmle_est       se   lower   upper\n#> 1:  TSM E[Y_{A=NULL}]  0.42223  0.56606 0.027015 0.51311 0.61901\n#>    psi_transformed lower_transformed upper_transformed\n#> 1:         0.56606           0.51311           0.61901"},{"path":"optimal-individualized-treatment-regimes.html","id":"oit-eval-cat","chapter":"8 Optimal Individualized Treatment Regimes","heading":"8.7 Evaluating the Causal Effect of an optimal ITR with Categorical Treatment","text":"section, consider evaluate mean outcome optimal\nindividualized treatment \\(\\) two categories. \nprocedure analogous previously described binary treatment, now need\npay attention type blip define estimation stage, well\nconstruct learners.","code":""},{"path":"optimal-individualized-treatment-regimes.html","id":"simulated-data-1","chapter":"8 Optimal Individualized Treatment Regimes","heading":"8.7.1 Simulated Data","text":"First, load simulated data. , data generating distribution \nfollowing form:\n\\[\\begin{align*}\n  W &\\sim \\mathcal{N}(\\bf{0},I_{4 \\times 4})\\\\\n  P(=|W) &= \\frac{1}{1+\\exp^{(-0.8*W_1)}}\\\\\n  P(Y=1|,W) = 0.5\\text{logit}^{-1}[15I(=1)(W_1-0.5) - 3I(=2)(2W_1+0.5) +\n    3I(=3)(3W_1-0.5)] +\\text{logit}^{-1}(W_2W_1)\n\\end{align*}\\]can just load data available part package follows:composes observed data structure \\(O = (W, , Y)\\). Note \nmean true optimal rule \\(\\psi=0.658\\), quantity aim\nestimate.","code":"\ndata(\"data_cat_realistic\")\n# organize data and nodes for tmle3\ndata <- data_cat_realistic\nnode_list <- list(\n  W = c(\"W1\", \"W2\", \"W3\", \"W4\"),\n  A = \"A\",\n  Y = \"Y\"\n)"},{"path":"optimal-individualized-treatment-regimes.html","id":"constructing-optimal-stacked-regressions-with-sl3-1","chapter":"8 Optimal Individualized Treatment Regimes","heading":"8.7.2 Constructing Optimal Stacked Regressions with sl3","text":"seen , generate three different ensemble learners must fit,\ncorresponding learners outcome regression, propensity score, \nblip function. Note need estimate \\(g_0(\\mid W)\\) \ncategorical \\(\\) – therefore, use multinomial Super Learner option\navailable within sl3 package learners can address multi-class\nclassification problems. order see learners can used estimate\n\\(g_0(\\mid W)\\) sl3, run following:Note since corresponding blip vector valued, \ncolumn additional level treatment. , need create\nmultivariate learners helper function create_mv_learners takes \nlist initialized learners input.make explicit respect standard notation bundling \nensemble learners list object :","code":"\n# Initialize few of the learners:\nlrn_xgboost_50 <- Lrnr_xgboost$new(nrounds = 50)\nlrn_xgboost_100 <- Lrnr_xgboost$new(nrounds = 100)\nlrn_xgboost_500 <- Lrnr_xgboost$new(nrounds = 500)\nlrn_mean <- Lrnr_mean$new()\nlrn_glm <- Lrnr_glm_fast$new()\n\n## Define the Q learner, which is just a regular learner:\nQ_learner <- Lrnr_sl$new(\n  learners = list(\n    lrn_xgboost_50, lrn_xgboost_100, lrn_xgboost_500, lrn_mean,\n    lrn_glm\n  ),\n  metalearner = Lrnr_nnls$new()\n)\n\n# Define the g learner, which is a multinomial learner:\n# specify the appropriate loss of the multinomial learner:\nmn_metalearner <- make_learner(Lrnr_solnp,\n  loss_function = loss_loglik_multinomial,\n  learner_function =\n    metalearner_linear_multinomial\n)\ng_learner <- make_learner(\n  Lrnr_sl,\n  list(lrn_xgboost_100, lrn_xgboost_500, lrn_mean),\n  mn_metalearner\n)\n\n# Define the Blip learner, which is a multivariate learner:\nlearners <- list(\n  lrn_xgboost_50, lrn_xgboost_100, lrn_xgboost_500, lrn_mean,\n  lrn_glm\n)\nb_learner <- create_mv_learners(learners = learners)\n# See which learners support multi-class classification:\nsl3_list_learners(c(\"categorical\"))\n#>  [1] \"Lrnr_bound\"                \"Lrnr_caret\"               \n#>  [3] \"Lrnr_cv_selector\"          \"Lrnr_glmnet\"              \n#>  [5] \"Lrnr_grf\"                  \"Lrnr_gru_keras\"           \n#>  [7] \"Lrnr_h2o_glm\"              \"Lrnr_h2o_grid\"            \n#>  [9] \"Lrnr_independent_binomial\" \"Lrnr_lstm_keras\"          \n#> [11] \"Lrnr_mean\"                 \"Lrnr_multivariate\"        \n#> [13] \"Lrnr_nnet\"                 \"Lrnr_optim\"               \n#> [15] \"Lrnr_polspline\"            \"Lrnr_pooled_hazards\"      \n#> [17] \"Lrnr_randomForest\"         \"Lrnr_ranger\"              \n#> [19] \"Lrnr_rpart\"                \"Lrnr_screener_correlation\"\n#> [21] \"Lrnr_solnp\"                \"Lrnr_svm\"                 \n#> [23] \"Lrnr_xgboost\"\n# specify outcome and treatment regressions and create learner list\nlearner_list <- list(Y = Q_learner, A = g_learner, B = b_learner)"},{"path":"optimal-individualized-treatment-regimes.html","id":"targeted-estimation-of-the-mean-under-the-optimal-individualized-interventions-effects-1","chapter":"8 Optimal Individualized Treatment Regimes","heading":"8.7.3 Targeted Estimation of the Mean under the Optimal Individualized Interventions Effects","text":"can see estimate \\(psi_0\\) \\(0.60\\), confidence\ninterval covers true mean true optimal individualized treatment.","code":"\n# initialize a tmle specification\ntmle_spec <- tmle3_mopttx_blip_revere(\n  V = c(\"W1\", \"W2\", \"W3\", \"W4\"), type = \"blip2\",\n  learners = learner_list, maximize = TRUE, complex = TRUE,\n  realistic = FALSE\n)\n# fit the TML estimator\nfit <- tmle3(tmle_spec, data, node_list, learner_list)\nfit\n#> A tmle3_Fit that took 1 step(s)\n#>    type         param init_est tmle_est       se   lower   upper\n#> 1:  TSM E[Y_{A=NULL}]    0.551  0.61063 0.065332 0.48258 0.73867\n#>    psi_transformed lower_transformed upper_transformed\n#> 1:         0.61063           0.48258           0.73867"},{"path":"optimal-individualized-treatment-regimes.html","id":"extensions-to-causal-effect-of-an-oit","chapter":"8 Optimal Individualized Treatment Regimes","heading":"8.8 Extensions to Causal Effect of an OIT","text":"section, consider two extensions procedure described \nestimating value OIT. First one considers setting user\nmight interested grid possible sub-optimal rules, corresponding \npotentially limited knowledge potential effect modifiers. second\nextension concerns implementation realistic optimal individual\ninterventions certain regimes might preferred, due practical \nglobal positivity restraints realistic implement.","code":""},{"path":"optimal-individualized-treatment-regimes.html","id":"simpler-rules","chapter":"8 Optimal Individualized Treatment Regimes","heading":"8.8.1 Simpler Rules","text":"order consider ambitious fully \\(V\\)-optimal rule, \ndefine \\(S\\)-optimal rules optimal rule considers possible subsets\n\\(V\\) covariates, card(\\(S\\)) \\(\\leq\\) card(\\(V\\)) \\(\\emptyset \\S\\). \nallows us consider sub-optimal rules easier estimate \npotentially provide realistic rules- , allow statistical\ninference counterfactual mean outcome sub-optimal rule.\nWithin tmle3mopttx paradigm, just need change complex\nparameter FALSE:Therefore even though user specified baseline covariates basis\nrule estimation, simpler rule based \\(W_2\\) \\(W_1\\) sufficient\nmaximize mean optimal individualized treatment.","code":"\n# initialize a tmle specification\ntmle_spec <- tmle3_mopttx_blip_revere(\n  V = c(\"W4\", \"W3\", \"W2\", \"W1\"), type = \"blip2\",\n  learners = learner_list,\n  maximize = TRUE, complex = FALSE, realistic = FALSE\n)\n# fit the TML estimator\nfit <- tmle3(tmle_spec, data, node_list, learner_list)\nfit\n#> A tmle3_Fit that took 1 step(s)\n#>    type             param init_est tmle_est       se   lower   upper\n#> 1:  TSM E[Y_{A=W3,W2,W1}]  0.54309  0.61946 0.070471 0.48134 0.75758\n#>    psi_transformed lower_transformed upper_transformed\n#> 1:         0.61946           0.48134           0.75758"},{"path":"optimal-individualized-treatment-regimes.html","id":"realistic-optimal-individual-regimes","chapter":"8 Optimal Individualized Treatment Regimes","heading":"8.8.2 Realistic Optimal Individual Regimes","text":"addition considering less complex rules, tmle3mopttx also provides \noption estimate mean realistic, implementable, optimal\nindividualized treatment. often case assigning particular regime\nmight ability fully maximize (minimize) desired outcome, \ndue global practical positivity constrains, treatment can never \nimplemented real life (highly unlikely). , specifying\nrealistic TRUE, consider possibly suboptimal treatments optimize\noutcome question supported data.","code":"\n# initialize a tmle specification\ntmle_spec <- tmle3_mopttx_blip_revere(\n  V = c(\"W4\", \"W3\", \"W2\", \"W1\"), type = \"blip2\",\n  learners = learner_list,\n  maximize = TRUE, complex = TRUE, realistic = TRUE\n)\n# fit the TML estimator\nfit <- tmle3(tmle_spec, data, node_list, learner_list)\nfit\n#> A tmle3_Fit that took 1 step(s)\n#>    type         param init_est tmle_est       se   lower   upper\n#> 1:  TSM E[Y_{A=NULL}]  0.54847  0.65455 0.021603 0.61221 0.69689\n#>    psi_transformed lower_transformed upper_transformed\n#> 1:         0.65455           0.61221           0.69689\n\n# How many individuals got assigned each treatment?\ntable(tmle_spec$return_rule)\n#> \n#>   2   3 \n#> 507 493"},{"path":"optimal-individualized-treatment-regimes.html","id":"q-learning","chapter":"8 Optimal Individualized Treatment Regimes","heading":"8.8.3 Q-learning","text":"Alternatively, estimate mean optimal individualized\ntreatment using Q-learning. optimal rule can learned fitting \nlikelihood, consequently estimating optimal rule fit \nlikelihood (Sutton, Barto, others 1998, @murphy2003).outline use tmle3mopttx package order estimate mean\nITR using Q-learning. demonstrated previous sections, \nfirst need initialize specification TMLE parameter \ninterest. opposed previous section however, now use\ntmle3_mopttx_Q instead tmle3_mopttx_blip_revere order indicate \nwant use Q-learning instead TMLE.","code":"\n# initialize a tmle specification\ntmle_spec_Q <- tmle3_mopttx_Q(maximize = TRUE)\n\n# Define data:\ntmle_task <- tmle_spec_Q$make_tmle_task(data, node_list)\n\n# Define likelihood:\ninitial_likelihood <- tmle_spec_Q$make_initial_likelihood(\n  tmle_task,\n  learner_list\n)\n\n# Estimate the parameter:\nQ_learning(tmle_spec_Q, initial_likelihood, tmle_task)[1]\n#> [1] 0.47964"},{"path":"optimal-individualized-treatment-regimes.html","id":"variable-importance-analysis-with-oit","chapter":"8 Optimal Individualized Treatment Regimes","heading":"8.9 Variable Importance Analysis with OIT","text":"Suppose one wishes assess importance observed covariate, \nterms maximizing (minimizing) population mean outcome \noptimal individualized treatment regime. particular, covariate \nmaximizes (minimizes) population mean outcome optimal\nindividualized treatment considered covariates optimal\nassignment might considered important outcome. put \ncontext, perhaps optimal allocation treatment 1, denoted \\(A_1\\), results \nlarger mean outcome optimal allocation another treatment (\\(A_2\\)).\nTherefore, label \\(A_1\\) higher variable importance \nregard maximizing (minimizing) mean outcome optimal\nindividualized treatment.","code":""},{"path":"optimal-individualized-treatment-regimes.html","id":"simulated-data-2","chapter":"8 Optimal Individualized Treatment Regimes","heading":"8.9.1 Simulated Data","text":"order run tmle3mopttx variable importance measure, need consider\ncovariates categorical variables. illustration purpose, bin\nbaseline covariates corresponding data-generating distribution\ndescribed previously:Note node list now includes \\(W_1\\) treatments well! Don’t worry,\nstill properly adjust baseline covariates.","code":"\n# bin baseline covariates to 3 categories:\ndata$W1 <- ifelse(data$W1 < quantile(data$W1)[2], 1,\n  ifelse(data$W1 < quantile(data$W1)[3], 2, 3)\n)\n\nnode_list <- list(\n  W = c(\"W3\", \"W4\", \"W2\"),\n  A = c(\"W1\", \"A\"),\n  Y = \"Y\"\n)"},{"path":"optimal-individualized-treatment-regimes.html","id":"variable-importance-using-targeted-estimation-of-the-value-of-the-itr","chapter":"8 Optimal Individualized Treatment Regimes","heading":"8.9.2 Variable Importance using Targeted Estimation of the value of the ITR","text":"previous sections seen obtain contrast mean\noptimal individualized rule mean observed outcome\nsingle covariate- now ready run variable importance analysis\nspecified covariates. order run variable importance\nanalysis, first need initialize specification TMLE \nparameter interest done . addition, need specify\ndata corresponding list nodes, well appropriate\nlearners outcome regression, propensity score, blip function.\nFinally, need specify whether adjust \ncovariates assessing variable importance . adjust \\(W\\)s\nanalysis, adjust_for_other_A=TRUE, also \\(\\) covariates\ntreated exposure variable importance loop.start, initialize specification TMLE parameter \ninterest (called tmle3_Spec tlverse nomenclature) simply calling\ntmle3_mopttx_vim. First, indicate method used learning optimal\nindividualized treatment specifying method argument \ntmle3_mopttx_vim. method=\"Q\", using Q-learning rule\nestimation, need specify V, type learners arguments\nspec, since important Q-learning. However, \nmethod=\"SL\", corresponds learning optimal individualized\ntreatment using outlined methodology, need specify type\npseudo-blip use estimation problem, whether want \nmaximize minimize outcome, complex realistic rules. Finally, \nmethod=\"SL\" also need communicate ’re interested learning \nrule dependent V covariates specifying V argument. \nmethod=\"Q\" method=\"SL\", need indicate whether want maximize\nminimize mean optimal individualized rule. Finally, also\nneed specify whether final comparison mean optimal\nindividualized rule mean observed outcome \nmultiplicative scale (risk ratio) linear (similar average treatment\neffect).final result tmle3_vim tmle3mopttx spec ordered list\nmean outcomes optimal individualized treatment categorical\ncovariates dataset.","code":"\n# initialize a tmle specification\ntmle_spec <- tmle3_mopttx_vim(\n  V = c(\"W2\"),\n  type = \"blip2\",\n  learners = learner_list,\n  contrast = \"multiplicative\",\n  maximize = FALSE,\n  method = \"SL\",\n  complex = TRUE,\n  realistic = FALSE\n)\n# fit the TML estimator\nvim_results <- tmle3_vim(tmle_spec, data, node_list, learner_list,\n  adjust_for_other_A = TRUE\n)\nprint(vim_results)\n#>    type                  param    init_est  tmle_est       se     lower\n#> 1:   RR RR(E[Y_{A=NULL}]/E[Y]) -0.02858893 -0.145989 0.054757 -0.253311\n#> 2:   RR RR(E[Y_{A=NULL}]/E[Y])  0.00035671  0.088742 0.033090  0.023886\n#>        upper psi_transformed lower_transformed upper_transformed  A           W\n#> 1: -0.038667         0.86417           0.77623           0.96207 W1  W3,W4,W2,A\n#> 2:  0.153598         1.09280           1.02417           1.16602  A W3,W4,W2,W1\n#>     Z_stat      p_nz p_nz_corrected\n#> 1: -2.6661 0.0038367      0.0038367\n#> 2:  2.6818 0.0036614      0.0038367"},{"path":"optimal-individualized-treatment-regimes.html","id":"exercises-2","chapter":"8 Optimal Individualized Treatment Regimes","heading":"8.10 Exercises","text":"","code":""},{"path":"optimal-individualized-treatment-regimes.html","id":"real-world-data-and-tmle3mopttx","chapter":"8 Optimal Individualized Treatment Regimes","heading":"8.10.1 Real World Data and tmle3mopttx","text":"Finally, cement everything learned far real data application.previous sections, using WASH Benefits data,\ncorresponding effect water quality, sanitation, hand washing, \nnutritional interventions child development rural Bangladesh.main aim cluster-randomized controlled trial assess \nimpact six intervention groups, including:control;control;hand-washing soap;hand-washing soap;improved nutrition counseling provision lipid-based nutrient\nsupplements;improved nutrition counseling provision lipid-based nutrient\nsupplements;combined water, sanitation, hand-washing, nutrition;combined water, sanitation, hand-washing, nutrition;improved sanitation;improved sanitation;combined water, sanitation, hand-washing;combined water, sanitation, hand-washing;chlorinated drinking water.chlorinated drinking water.aim estimate optimal ITR corresponding value optimal\nITR main intervention WASH Benefits data.outcome interest weight--height Z-score, whereas primary\ntreatment six intervention groups aimed improving living conditions.Questions:Define \\(V\\) mother’s education (momedu), current living conditions (floor),\npossession material items including refrigerator (asset_refrig).\nthink use covariates \\(V\\)? want minimize \nmaximize outcome? blip type use?Define \\(V\\) mother’s education (momedu), current living conditions (floor),\npossession material items including refrigerator (asset_refrig).\nthink use covariates \\(V\\)? want minimize \nmaximize outcome? blip type use?Load WASH Benefits data, define appropriate nodes treatment\noutcome. Use rest covariates \\(W\\) except \nmomheight now. Construct appropriate sl3 library \\(\\), \\(Y\\) \n\\(B\\).Load WASH Benefits data, define appropriate nodes treatment\noutcome. Use rest covariates \\(W\\) except \nmomheight now. Construct appropriate sl3 library \\(\\), \\(Y\\) \n\\(B\\).Based \\(V\\) defined previous question, estimate mean \nITR main randomized intervention used WASH Benefits trial\nweight--height Z-score outcome. ’s TMLE value \noptimal ITR? change initial estimate? \nintervention dominant? think ?Based \\(V\\) defined previous question, estimate mean \nITR main randomized intervention used WASH Benefits trial\nweight--height Z-score outcome. ’s TMLE value \noptimal ITR? change initial estimate? \nintervention dominant? think ?Using formulation questions 1 2, estimate realistic\noptimal ITR corresponding value realistic ITR. results\nchange? intervention dominant realistic rules? \nthink ?Using formulation questions 1 2, estimate realistic\noptimal ITR corresponding value realistic ITR. results\nchange? intervention dominant realistic rules? \nthink ?Consider simpler rules WASH benefits data example. set rules\npicked?Consider simpler rules WASH benefits data example. set rules\npicked?Change treatment binary variable (asset_sewmach), estimate \nvalue ITR setting \\(60\\%\\) resource constraint. \nresults indicate?Change treatment binary variable (asset_sewmach), estimate \nvalue ITR setting \\(60\\%\\) resource constraint. \nresults indicate?Change treatment , now mother’s education (momedu), \nestimate value ITR setting. results\nindicate? Can intervene variable?Change treatment , now mother’s education (momedu), \nestimate value ITR setting. results\nindicate? Can intervene variable?","code":""},{"path":"optimal-individualized-treatment-regimes.html","id":"review-of-key-concepts-1","chapter":"8 Optimal Individualized Treatment Regimes","heading":"8.10.2 Review of Key Concepts","text":"difference dynamic optimal individualized regimes?difference dynamic optimal individualized regimes?’s intuition behind using different blip types? switch\nblip1 blip2 considering categorical treatment? \nadvantages ?’s intuition behind using different blip types? switch\nblip1 blip2 considering categorical treatment? \nadvantages ?Look back results generated section categorical\ntreatments, compare mean optimal\nindividualized treatment section binary\ntreatments. think estimate higher \nless complex rule? set covariates picked tmle3mopttx\ncompare baseline covariates true rule depends ?Look back results generated section categorical\ntreatments, compare mean optimal\nindividualized treatment section binary\ntreatments. think estimate higher \nless complex rule? set covariates picked tmle3mopttx\ncompare baseline covariates true rule depends ?Compare distribution treatments assigned true optimal\nindividualized treatment realistic optimal individualized treatment.\nReferring back data-generating distribution, think \ndistribution allocated treatment changed?Compare distribution treatments assigned true optimal\nindividualized treatment realistic optimal individualized treatment.\nReferring back data-generating distribution, think \ndistribution allocated treatment changed?Using simulation, perform variable importance analysis using\nQ-learning. results change ?Using simulation, perform variable importance analysis using\nQ-learning. results change ?","code":""},{"path":"optimal-individualized-treatment-regimes.html","id":"advanced-topics-1","chapter":"8 Optimal Individualized Treatment Regimes","heading":"8.10.3 Advanced Topics","text":"can extend current approach include exceptional laws?can extend current approach include exceptional laws?can extend current approach continuous interventions?can extend current approach continuous interventions?","code":""},{"path":"stochastic-treatment-regimes.html","id":"stochastic-treatment-regimes","chapter":"9 Stochastic Treatment Regimes","heading":"9 Stochastic Treatment Regimes","text":"Nima HejaziBased tmle3shift R package\nNima Hejazi, Jeremy Coyle, Mark van der Laan.Updated: 2021-04-04","code":""},{"path":"stochastic-treatment-regimes.html","id":"learning-objectives-5","chapter":"9 Stochastic Treatment Regimes","heading":"9.1 Learning Objectives","text":"Differentiate stochastic treatment regimes static, dynamic, optimal\ntreatment regimes.Describe estimating causal effects stochastic interventions informs \nreal-world data analysis.Contrast population level stochastic intervention policy modified\ntreatment policy.Estimate causal effects stochastic treatment regimes \ntmle3shift R package.Specify grid counterfactual shift interventions used defining\nset stochastic intervention policies.Interpret set effect estimates grid counterfactual shift\ninterventions.Construct marginal structural models measure variable importance terms\nstochastic interventions, using grid shift interventions.Implement shift intervention individual level, facilitate\nshifting individual value ’s supported data.Define novel shift intervention functions extend tmle3shift R\npackage.","code":""},{"path":"stochastic-treatment-regimes.html","id":"introduction-to-stochastic-interventions","chapter":"9 Stochastic Treatment Regimes","heading":"9.2 Introduction to Stochastic Interventions","text":"Stochastic treatment regimes present relatively simple, yet extremely flexible\nmanner realistic causal effects (contrasts thereof) may \ndefined. Importantly, stochastic treatment regimes may applied nearly\nmanner treatment variable – continuous, ordinal, categorical, binary –\nallowing rich set causal effects defined formalism.\nchapter, examine simple example stochastic treatment regimes \ncontext continuous treatment variable interest, defining \nintuitive causal effect examine stochastic interventions \ngenerally. later sections, introduce numerous extensions based \nbroad class interventions – stochastic interventions binary\ntreatment variables stochastic mediation effects data-adaptive inference\nstochastic intervention effects. first step using stochastic\ntreatment regimes practice, present tmle3shift R\npackage, features \nimplementation recently developed algorithm computing targeted minimum\nloss-based estimates causal effect based stochastic treatment regime\nshifts natural value treatment based shifting function\n\\(d(,W)\\). comprehensive technical presentation material \nchapter, interested reader invited consult Díaz van der Laan (2018).\nAdditional background field Targeted Learning, well prior work\nstochastic treatment regimes, available van der Laan Rose (2011),\nvan der Laan Rose (2018), Díaz van der Laan (2012).stochastic treatment regimes arguably general \nclasses interventions causal effects may defined, \ninterventions conceptually simple.","code":""},{"path":"stochastic-treatment-regimes.html","id":"data-structure-and-notation-1","chapter":"9 Stochastic Treatment Regimes","heading":"9.3 Data Structure and Notation","text":"Consider \\(n\\) observed units \\(O_1, \\ldots, O_n\\), random variable \\(O = (W, , Y)\\) corresponds single observational unit. Let \\(W\\) denote baseline\ncovariates (e.g., age, sex, education level), \\(\\) intervention variable \ninterest (e.g., nutritional supplements), \\(Y\\) outcome interest (e.g.,\ndisease status). Though need case, let \\(\\) continuous-valued,\n.e. \\(\\\\R\\). Let \\(O_i \\sim \\mathcal{P} \\\\M\\), \\(\\M\\) \nnonparametric statistical model defined set continuous densities \n\\(O\\) respect dominating measure. formalize definition \nstochastic interventions corresponding causal effects, introduce \nnonparametric structural equation model (NPSEM), based Pearl (2009a),\ndefine system changes posited interventions:\n\\[\\begin{align}\n  W &= f_W(U_W) \\\\ &= f_A(W, U_A) \\\\ Y &= f_Y(, W, U_Y),\n  \\tag{9.1}\n\\end{align}\\]\nset structural equations provide mechanistic model \nobserved data \\(O\\) assumed generated. several standard\nassumptions embedded NPSEM – specifically, temporal ordering \nsupposes \\(Y\\) occurs \\(\\), occurs \\(W\\); variable (.e.,\n\\(\\{W, , Y\\}\\)) assumed generated corresponding\ndeterministic function (.e., \\(\\{f_W, f_A, f_Y\\}\\)) observed variables\nprecede temporally, well exogenous variable, denoted \\(U\\);\nlastly, exogenous variable assumed contain unobserved causes \ncorresponding observed variable.likelihood data \\(O\\) admits factorization, wherein, \\(p_0^O\\),\ndensity \\(O\\) respect product measure, density evaluated\nparticular observation \\(o\\) may written\n\\[\\begin{equation}\n  p_0^O(x) = q^O_{0,Y}(y \\mid = , W = w) q^O_{0,}(\\mid W = w)\n  q^O_{0,W}(w),\n  \\tag{8.3}\n\\end{equation}\\]\n\\(q_{0, Y}\\) conditional density \\(Y\\) given \\((, W)\\) respect\ndominating measure, \\(q_{0, }\\) conditional density \\(\\) given\n\\(W\\) respect dominating measure \\(\\mu\\), \\(q_{0, W}\\) density \n\\(W\\) respect dominating measure \\(\\nu\\). , ease notation, let\n\\(Q(, W) = \\E[Y \\mid , W]\\), \\(g(\\mid W) = \\P(\\mid W)\\), \\(q_W\\) \nmarginal distribution \\(W\\). components likelihood \nessential developing understanding manner stochastic\ntreatment regimes pertrub system corresponding causal effect may \nevaluated. Importantly, NPSEM parameterizes \\(p_0^O\\) terms \ndistribution random variables \\((O, U)\\) modeled system equations. \nturn, implies model distribution counterfactual random\nvariables generated interventions data-generating process.","code":""},{"path":"stochastic-treatment-regimes.html","id":"defining-the-causal-effect-of-a-stochastic-intervention","chapter":"9 Stochastic Treatment Regimes","heading":"9.4 Defining the Causal Effect of a Stochastic Intervention","text":"causal effects defined terms hypothetical interventions \nNPSEM (9.1), may consider stochastic interventions two\nequivalent ways: (1) equation \\(f_A\\), giving rise \\(\\), replaced\nprobabilistic mechanism \\(g_{\\delta}(\\mid W)\\) differs \noriginal \\(g(\\mid W)\\), (2) observed value \\(\\) replaced \nnew value \\(A_{d(,W)}\\) based applying user-defined function \\(d(,W)\\) \n\\(\\). former case, stochastically modified value treatment\n\\(A_{\\delta}\\) drawn user-specified distribution \\(g_\\delta(\\mid W)\\),\nmay depend original distribution \\(g(\\mid W)\\) indexed \nuser-specified parameter \\(\\delta\\). case, stochastically modified\nvalue treatment \\(A_{\\delta} \\sim g_{\\delta}(\\cdot \\mid W)\\).\nAlternatively, latter case, stochastic treatment regime may \nviewed intervention \\(\\) set equal value based \nhypothetical regime \\(d(, W)\\), regime \\(d\\) depends treatment level\n\\(\\) assigned absence regime well \ncovariates \\(W\\). either case, one may view stochastic intervention \ngenerating counterfactual random variable \\(Y_{d(,W)} := f_Y(d(,W), W, U_Y) \\equiv Y_{g_{\\delta}} := f_Y(A_{\\delta}, W, U_Y)\\), counterfactual\noutcome \\(Y_{d(,W)} \\sim \\mathcal{P}_0^{\\delta}\\).Stochastic interventions second variety may referred depending\nnatural value treatment modified treatment policies.\nHaneuse Rotnitzky (2013) Young, Hernán, Robins (2014) provide discussion \ncritical differences similarities identification interpretation\ntwo classes stochastic intervention. sequel, \nrestrict attention simple stochastic treatment regime \ncharacterized modified treatment policy (MTP). Letting \\(\\) denote \ncontinuous-valued treatment, taking nutritional supplements\n(e.g., number vitamin pills) assume distribution \\(\\)\nconditional \\(W = w\\) support interval \\((l(w), u(w))\\). , \nminimum observed number pills taken \\(\\) individual covariates\n\\(W = w\\) \\(l(w)\\); similarly, maximum \\(u(w)\\). , simple stochastic\nintervention, based shift \\(\\delta\\), may defined\n\\[\\begin{equation}\n  d(, w) =\n  \\begin{cases}\n    - \\delta & \\text{} > l(w) + \\delta \\\\\n    & \\text{} \\leq l(w) + \\delta,\n  \\end{cases}\n  \\tag{9.2}\n\\end{equation}\\]\n\\(0 \\leq \\delta \\leq u(w)\\) arbitrary pre-specified value \ndefines degree observed value \\(\\) shifted, \npossible. stochastic treatment regime may interpreted result\nclinic policy encourages individuals consume \\(\\delta\\) vitamin\npills normally, .e., based baseline characteristics.\ninterpretation stochastic intervention may made interesting\nallowing modification \\(\\delta\\) engenders function \nbaseline covariates \\(W\\), thereby allowing number vitamin pills taken\nfunction covariates age, sex, comorbidities, etc. class\nstochastic interventions first introduced Díaz van der Laan (2012) \ndiscussed Haneuse Rotnitzky (2013), Díaz van der Laan (2018), \nHejazi et al. (2020). Note intervention may written manner\nconsistent first class stochastic treatment regimes discussed \nwell – , per Díaz van der Laan (2012), \\(\\P_{\\delta}(g_0)(= \\mid W) = g_0(- \\delta(W) \\mid W)\\).goal causal analysis motivated stochastic intervention \nestimate parameter defined counterfactual mean outcome \nrespect stochastically modified intervention distribution. \nparticular, target causal estimand analysis \\(\\psi_{0, \\delta} \\coloneqq \\E_{P_0^{\\delta}}\\{Y_{d(,W)}\\}\\), mean counterfactual\noutcome variable \\(Y_{d(, W)}\\). prior work, Díaz van der Laan (2012) showed \ncausal quantity interest \\(\\E_0 \\{Y_{d(, W)}\\}\\) identified \nfunctional distribution \\(O\\):\n\\[\\begin{align}\n  \\psi_{0,d} = \\int_{\\mathcal{W}} \\int_{\\mathcal{}} & \\E_{P_0}\n   \\{Y \\mid = d(, w), W = w\\} \\cdot \\\\ &q_{0, }^O(\\mid W = w) \\cdot\n   q_{0, W}^O(w) d\\mu()d\\nu(w).\n  \\tag{9.3}\n\\end{align}\\]\nidentification conditions may assumed hold, statistical\nparameter (9.3) matches exactly counterfactual\noutcome \\(\\psi_{0, \\delta}\\) intervention, allowing causal\neffect learned observed data \\(O\\). Díaz van der Laan (2012) provide \nderivation based efficient influence function (EIF) nonparametric\nmodel \\(\\M\\) develop several estimators quantity, including\nsubstitution, inverse probability weighted (IPW), one-step (OS) targeted\nmaximum likelihood (TML) estimators, allowing semiparametric-efficient\nestimation inference quantity interest. per\nDíaz van der Laan (2018), statistical target parameter may also denoted\n\\(\\Psi(P_0) = \\E_{P_0}{\\overline{Q}(d(, W), W)}\\), \\(\\overline{Q}(d(, W), W)\\) counterfactual outcome value given individual \nstochastic intervention distribution.Although focus work neither establishment identification\nresults development theoretical details, review necessary\nidentification details counterfactual mean stochastic\nintervention , interest completeness. Paraphrasing \nDíaz van der Laan (2012) Díaz van der Laan (2018), four standard assumptions \nnecessary order establish identifiability causal parameter \nobserved data via statistical functional – areConsistency: \\(Y^{d(a_i, w_i)}_i = Y_i\\) event \\(A_i = d(a_i, w_i)\\),\n\\(= 1, \\ldots, n\\)Stable unit value treatment assumption (SUTVA): \\(Y^{d(a_i, w_i)}_i\\) \ndepend \\(d(a_j, w_j)\\) \\(= 1, \\ldots, n\\) \\(j \\neq \\), lack\ninterference (Rubin 1978, 1980).Strong ignorability: \\(A_i \\indep Y^{d(a_i, w_i)}_i \\mid W_i\\), \\(= 1, \\ldots, n\\).Positivity (overlap): \\(a_i \\\\mathcal{} \\implies d(a_i, w_i) \\\\mathcal{}\\) \\(w \\\\mathcal{W}\\), \\(\\mathcal{}\\) denotes \nsupport \\(\\mid W = w_i \\quad \\forall = 1, \\ldots n\\).identification assumptions satisfied, Díaz van der Laan (2012) \nDíaz van der Laan (2018) provide efficient influence function respect \nnonparametric model \\(\\M\\) \n\\[\\begin{equation}\n  D(P_0)(x) = H(, w)({y - \\overline{Q}(, w)}) +\n  \\overline{Q}(d(, w), w) - \\Psi(P_0),\n  \\tag{9.4}\n\\end{equation}\\]\nauxiliary covariate \\(H(,w)\\) may expressed\n\\[\\begin{equation}\n  H(,w) = \\mathbb{}(+ \\delta < u(w)) \\frac{g_0(- \\delta \\mid w)}\n  {g_0(\\mid w)} + \\mathbb{}(+ \\delta \\geq u(w)),\n  \\tag{9.5}\n\\end{equation}\\]\nmay reduced \n\\[\\begin{equation}\n  H(,w) = \\frac{g_0(- \\delta \\mid w)}{g_0(\\mid w)} + 1\n  \\tag{9.6}\n\\end{equation}\\]\ncase treatment within limits arise conditioning\n\\(W\\), .e., \\(A_i \\(u(w) - \\delta, u(w))\\).efficient influence function allows construction \nsemiparametric-efficient estimators may constructed. sequel, focus\ntargeted maximum likelihood (TML) estimator, Díaz van der Laan (2018)\ngive recipe:Construct initial estimators \\(g_n\\) \\(g_0(, W)\\) \\(Q_n\\) \n\\(\\overline{Q}_0(, W)\\), perhaps using data-adaptive regression techniques.observation \\(\\), compute estimate \\(H_n(a_i, w_i)\\) \nauxiliary covariate \\(H(a_i,w_i)\\).Estimate parameter \\(\\epsilon\\) logistic regression model\n\\[ \\text{logit}\\overline{Q}_{\\epsilon, n}(, w) =\n\\text{logit}\\overline{Q}_n(, w) + \\epsilon H_n(, w),\\]\nalternative regression model incorporating weights.Compute TML estimator \\(\\Psi_n\\) target parameter, defining update\n\\(\\overline{Q}_n^{\\star}\\) initial estimate\n\\(\\overline{Q}_{n, \\epsilon_n}\\):\n\\[\\begin{equation}\n  \\Psi_n = \\Psi(P_n^{\\star}) = \\frac{1}{n} \\sum_{= 1}^n\n  \\overline{Q}_n^{\\star}(d(A_i, W_i), W_i).\n  \\tag{9.7}\n\\end{equation}\\]","code":""},{"path":"stochastic-treatment-regimes.html","id":"interpreting-the-causal-effect-of-a-stochastic-intervention","chapter":"9 Stochastic Treatment Regimes","heading":"9.5 Interpreting the Causal Effect of a Stochastic Intervention","text":"\nFIGURE 5.1: counterfactual outcome changes natural treatment distribution shifted simple stochastic intervention\n","code":""},{"path":"stochastic-treatment-regimes.html","id":"evaluating-the-causal-effect-of-a-stochastic-intervention","chapter":"9 Stochastic Treatment Regimes","heading":"9.6 Evaluating the Causal Effect of a Stochastic Intervention","text":"start, let’s load packages ’ll using throughout simple data exampleWe need estimate two components likelihood order construct TML\nestimator. first components outcome regression, \\(\\hat{Q}_n\\),\nsimple regression form \\(\\E[Y \\mid ,W]\\). estimate\nquantity may constructed using Super Learner algorithm. \nconstruct components sl3-style Super Learner regression ,\nusing small variety parametric nonparametric regression techniques:second estimate treatment mechanism, \\(\\hat{g}_n\\),\n.e., propensity score. case continuous intervention node \\(\\),\nquantity takes form \\(p(\\mid W)\\), conditional density.\nGenerally speaking, conditional density estimation challenging problem \nreceived much attention literature. estimate treatment\nmechanism, must make use learning algorithms specifically suited \nconditional density estimation; list learners may extracted \nsl3 using sl3_list_learners():proceed, ’ll select two learners, Lrnr_haldensify using\nhighly adaptive lasso conditional density estimation, based \nalgorithm given Díaz van der Laan (2011) implemented Hejazi, Benkeser, van der Laan (2020), \nsemiparametric location-scale conditional density estimators implemented \nsl3 package. Super Learner may \nconstructed pooling estimates modified conditional density\nregression techniques.Finally, construct learner_list object use constructing TML\nestimator target parameter interest:learner_list object specifies role ensemble\nlearners generated play computing initial estimators \nused building TMLE parameter interest . particular, \nmakes explicit fact Q_learner used fitting outcome\nregression g_learner used estimating treatment mechanism.","code":"\nlibrary(data.table)\nlibrary(haldensify)\nlibrary(sl3)\nlibrary(tmle3)\nlibrary(tmle3shift)\n# learners used for conditional mean of the outcome\nmean_lrnr <- Lrnr_mean$new()\nfglm_lrnr <- Lrnr_glm_fast$new()\nrf_lrnr <- Lrnr_ranger$new()\nhal_lrnr <- Lrnr_hal9001$new(max_degree = 3, n_folds = 3)\n\n# SL for the outcome regression\nsl_reg_lrnr <- Lrnr_sl$new(\n  learners = list(mean_lrnr, fglm_lrnr, rf_lrnr, hal_lrnr),\n  metalearner = Lrnr_nnls$new()\n)\nsl3_list_learners(\"density\")\n#> [1] \"Lrnr_density_discretize\"     \"Lrnr_density_hse\"           \n#> [3] \"Lrnr_density_semiparametric\" \"Lrnr_haldensify\"            \n#> [5] \"Lrnr_solnp_density\"\n# learners used for conditional densities (i.e., generalized propensity score)\nhaldensify_lrnr <- Lrnr_haldensify$new(\n  n_bins = c(3, 5),\n  lambda_seq = exp(seq(-1, -10, length = 200))\n)\n# semiparametric density estimator based on homoscedastic errors (HOSE)\nhose_hal_lrnr <- make_learner(Lrnr_density_semiparametric,\n  mean_learner = hal_lrnr\n)\n# semiparametric density estimator based on heteroscedastic errors (HESE)\nhese_rf_glm_lrnr <- make_learner(Lrnr_density_semiparametric,\n  mean_learner = rf_lrnr,\n  var_learner = fglm_lrnr\n)\n\n# SL for the conditional treatment density\nsl_dens_lrnr <- Lrnr_sl$new(\n  learners = list(haldensify_lrnr, hose_hal_lrnr, hese_rf_glm_lrnr),\n  metalearner = Lrnr_solnp_density$new()\n)\nlearner_list <- list(Y = sl_reg_lrnr, A = sl_dens_lrnr)"},{"path":"stochastic-treatment-regimes.html","id":"example-with-simulated-data","chapter":"9 Stochastic Treatment Regimes","heading":"9.6.1 Example with Simulated Data","text":"composes observed data structure \\(O = (W, , Y)\\). formally\nexpress fact using tlverse grammar introduced tmle3 package,\ncreate single data object specify functional relationships \nnodes directed acyclic graph (DAG) via nonparametric structural\nequation models (NPSEMs), reflected node list set :now observed data structure (data) specification role\nvariable data set plays nodes DAG.start, initialize specification TMLE parameter \ninterest (called tmle3_Spec tlverse nomenclature) simply calling\ntmle_shift. specify argument shift_val = 0.5 initializing \ntmle3_Spec object communicate ’re interested shift \\(0.5\\) \nscale treatment \\(\\) – , specify \\(\\delta = 0.5\\) (note \narbitrarily chosen value example).seen , tmle_shift specification object (like tmle3_Spec\nobjects) store data specific analysis interest. Later,\n’ll see passing data object directly tmle3 wrapper function,\nalongside instantiated tmle_spec, serve construct tmle3_Task\nobject internally (see tmle3 documentation details).","code":"\n# simulate simple data for tmle-shift sketch\nn_obs <- 400 # number of observations\ntx_mult <- 2 # multiplier for the effect of W = 1 on the treatment\n\n## baseline covariates -- simple, binary\nW <- replicate(2, rbinom(n_obs, 1, 0.5))\n\n## create treatment based on baseline W\nA <- rnorm(n_obs, mean = tx_mult * W, sd = 1)\n\n## create outcome as a linear function of A, W + white noise\nY <- rbinom(n_obs, 1, prob = plogis(A + W))\n\n# organize data and nodes for tmle3\ndata <- data.table(W, A, Y)\nsetnames(data, c(\"W1\", \"W2\", \"A\", \"Y\"))\nnode_list <- list(\n  W = c(\"W1\", \"W2\"),\n  A = \"A\",\n  Y = \"Y\"\n)\nhead(data)\n#>    W1 W2         A Y\n#> 1:  1  1  0.271651 1\n#> 2:  0  0 -0.663368 1\n#> 3:  0  0  0.113366 0\n#> 4:  0  1 -0.732558 0\n#> 5:  1  1  0.388835 1\n#> 6:  0  0  0.043986 0\n# initialize a tmle specification\ntmle_spec <- tmle_shift(\n  shift_val = 0.5,\n  shift_fxn = shift_additive,\n  shift_fxn_inv = shift_additive_inv\n)"},{"path":"stochastic-treatment-regimes.html","id":"targeted-estimation-of-stochastic-interventions-effects","chapter":"9 Stochastic Treatment Regimes","heading":"9.6.2 Targeted Estimation of Stochastic Interventions Effects","text":"print method resultant tmle_fit object conveniently displays \nresults computing TML estimator.","code":"\ntmle_fit <- tmle3(tmle_spec, data, node_list, learner_list)\n#> \n#> Iter: 1 fn: 534.2313  Pars:  0.43334 0.38683 0.17983\n#> Iter: 2 fn: 534.2312  Pars:  0.43334 0.38684 0.17982\n#> solnp--> Completed in 2 iterations\ntmle_fit\n#> A tmle3_Fit that took 1 step(s)\n#>    type         param init_est tmle_est       se   lower   upper\n#> 1:  TSM E[Y_{A=NULL}]  0.76199   0.7626 0.021965 0.71955 0.80565\n#>    psi_transformed lower_transformed upper_transformed\n#> 1:          0.7626           0.71955           0.80565"},{"path":"stochastic-treatment-regimes.html","id":"statistical-inference-for-targeted-maximum-likelihood-estimates","chapter":"9 Stochastic Treatment Regimes","heading":"9.6.3 Statistical Inference for Targeted Maximum Likelihood Estimates","text":"Recall asymptotic distribution TML estimators studied\nthoroughly:\n\\[\\psi_n - \\psi_0 = (P_n - P_0) \\cdot D(\\bar{Q}_n^{\\star}, g_n) +\nR(\\hat{P}^{\\star}, P_0),\\]\n, provided following two conditions,\\(D(\\bar{Q}_n^{\\star}, g_n)\\) converges \\(D(P_0)\\) \\(L_2(P_0)\\) norm, andthe size class functions considered estimation \n\\(\\bar{Q}_n^{\\star}\\) \\(g_n\\) bounded (technically, \\(\\exists \\mathcal{F}\\)\n\\(D(\\bar{Q}_n^{\\star}, g_n) \\\\mathcal{F}\\) whp, \n\\(\\mathcal{F}\\) Donsker class),\nreadily admits conclusion \n\\(\\psi_n - \\psi_0 = (P_n - P_0) \\cdot D(P_0) + R(\\hat{P}^{\\star}, P_0)\\).additional condition remainder term \\(R(\\hat{P}^{\\star}, P_0)\\)\ndecays \\(o_P \\left( \\frac{1}{\\sqrt{n}} \\right),\\) \n\\[\\psi_n - \\psi_0 = (P_n - P_0) \\cdot D(P_0) + o_P \\left( \\frac{1}{\\sqrt{n}}\n\\right),\\]\n, central limit theorem, establishes Gaussian limiting distribution\nestimator:\\[\\sqrt{n}(\\psi_n - \\psi) \\N(0, V(D(P_0))),\\]\n\\(V(D(P_0))\\) variance efficient influence curve (canonical\ngradient) \\(\\psi\\) admits asymptotically linear representation.implies \\(\\psi_n\\) \\(\\sqrt{n}\\)-consistent estimator \\(\\psi\\),\nasymptotically normal (given ), locally\nefficient. allows us build Wald-type confidence intervals \nstraightforward manner:\\[\\psi_n \\pm z_{\\alpha} \\cdot \\frac{\\sigma_n}{\\sqrt{n}},\\]\n\\(\\sigma_n^2\\) estimator \\(V(D(P_0))\\). estimator \\(\\sigma_n^2\\)\nmay obtained using bootstrap computed directly via following\\[\\sigma_n^2 = \\frac{1}{n} \\sum_{= 1}^{n} D^2(\\bar{Q}_n^{\\star}, g_n)(O_i)\\]now re-examined facts, let’s simply examine results \ncomputing TML estimator:","code":""},{"path":"stochastic-treatment-regimes.html","id":"extensions-variable-importance-analysis-with-stochastic-interventions","chapter":"9 Stochastic Treatment Regimes","heading":"9.7 Extensions: Variable Importance Analysis with Stochastic Interventions","text":"","code":""},{"path":"stochastic-treatment-regimes.html","id":"defining-a-grid-of-counterfactual-interventions","chapter":"9 Stochastic Treatment Regimes","heading":"9.7.1 Defining a grid of counterfactual interventions","text":"order specify grid shifts \\(\\delta\\) used defining set \nstochastic intervention policies priori manner, let us consider \narbitrary scalar \\(\\delta\\) defines counterfactual outcome \\(\\psi_n = Q_n(d(, W), W)\\), , simplicity, let \\(d(, W) = + \\delta\\). \nsimplified expression auxiliary covariate TMLE \\(\\psi\\) \n\\(H_n = \\frac{g^{\\star}(\\mid w)}{g(\\mid w)}\\), \\(g^{\\star}(\\mid w)\\)\ndefines treatment mechanism stochastic intervention implemented.\n, ascertain whether given choice shift \\(\\delta\\) admissable\n(sense avoiding violations positivity assumption), let \nbound \\(C(\\delta) = \\frac{g^{\\star}(\\mid w)}{g(\\mid w)} < M\\), \n\\(g^{\\star}(\\mid w)\\) function \\(\\delta\\) part, \\(M\\) potentially\nuser-specified upper bound \\(C(\\delta)\\). , \\(C(\\delta)\\) measure \ninfluence given observation, thereby providing way limit \nmaximum influence given observation (way bound \\(M\\) placed \n\\(C(\\delta)\\)) choice shift \\(\\delta\\).formalize extend procedure determine acceptable set values\nshift \\(\\delta\\) sequel. Specifically, let shift \\(d(, W) = + \\delta(, W)\\), shift \\(\\delta(, W)\\) defined \n\\[\\begin{equation}\n  \\delta(, w) =\n    \\begin{cases}\n      \\delta, & \\delta_{\\text{min}}(,w) \\leq \\delta \\leq\n        \\delta_{\\text{max}}(,w) \\\\\n      \\delta_{\\text{max}}(,w), & \\delta \\geq \\delta_{\\text{max}}(,w) \\\\\n      \\delta_{\\text{min}}(,w), & \\delta \\leq \\delta_{\\text{min}}(,w) \\\\\n    \\end{cases},\n\\end{equation}\\]\n\\[\\delta_{\\text{max}}(, w) = \\text{argmax}_{\\left\\{\\delta \\geq 0,\n\\frac{g(- \\delta \\mid w)}{g(\\mid w)} \\leq M \\right\\}} \\frac{g(- \\delta\n\\mid w)}{g(\\mid w)}\\] \n\\[\\delta_{\\text{min}}(, w) = \\text{argmin}_{\\left\\{\\delta \\leq 0,\n\\frac{g(- \\delta \\mid w)}{g(\\mid w)} \\leq M \\right\\}} \\frac{g(- \\delta\n\\mid w)}{g(\\mid w)}.\\]provides strategy implementing shift level given\nobservation \\((a_i, w_i)\\), thereby allowing observations shifted\nappropriate value – whether \\(\\delta_{\\text{min}}\\), \\(\\delta\\), \n\\(\\delta_{\\text{max}}\\).purpose using shift practice, present software\nprovides functions shift_additive_bounded \nshift_additive_bounded_inv, define variation shift:\n\\[\\begin{equation}\n  \\delta(, w) =\n    \\begin{cases}\n      \\delta, & C(\\delta) \\leq M \\\\\n      0, \\text{otherwise} \\\\\n    \\end{cases},\n  \\tag{9.8}\n\\end{equation}\\]\ncorresponds intervention natural value treatment\ngiven observational unit shifted value \\(\\delta\\) case \nratio intervened density \\(g^{\\star}(\\mid w)\\) natural\ndensity \\(g(\\mid w)\\) (, \\(C(\\delta)\\)) exceed bound \\(M\\). \ncase ratio \\(C(\\delta)\\) exceeds bound \\(M\\), stochastic\nintervention policy apply given unit remain \nnatural value treatment \\(\\).","code":""},{"path":"stochastic-treatment-regimes.html","id":"initializing-vimshift-through-its-tmle3_spec","chapter":"9 Stochastic Treatment Regimes","heading":"9.7.2 Initializing vimshift through its tmle3_Spec","text":"start, initialize specification TMLE parameter \ninterest (called tmle3_Spec tlverse nomenclature) simply calling\ntmle_shift. specify argument shift_grid = seq(-1, 1, = 1)\ninitializing tmle3_Spec object communicate ’re interested\nassessing mean counterfactual outcome grid shifts -1, 0, 1 scale treatment \\(\\) (note numerical\nchoice shift arbitrarily chosen set values example).seen , tmle_vimshift specification object (like tmle3_Spec\nobjects) store data specific analysis interest. Later,\n’ll see passing data object directly tmle3 wrapper function,\nalongside instantiated tmle_spec, serve construct tmle3_Task\nobject internally (see tmle3 documentation details).","code":"\n# what's the grid of shifts we wish to consider?\ndelta_grid <- seq(-1, 1, 1)\n\n# initialize a tmle specification\ntmle_spec <- tmle_vimshift_delta(\n  shift_grid = delta_grid,\n  max_shifted_ratio = 2\n)"},{"path":"stochastic-treatment-regimes.html","id":"targeted-estimation-of-stochastic-interventions-effects-1","chapter":"9 Stochastic Treatment Regimes","heading":"9.7.3 Targeted Estimation of Stochastic Interventions Effects","text":"One may walk step--step procedure fitting TML estimator\nmean counterfactual outcome shift grid, using \nmachinery exposed tmle3 R package.One may invoke tmle3 wrapper function (user-facing convenience utility)\nfit series TML estimators (one parameter defined grid\ndelta) single function call:Remark: print method resultant tmle_fit object conveniently\ndisplays results computing TML estimator.","code":"\ntmle_fit <- tmle3(tmle_spec, data, node_list, learner_list)\n#> \n#> Iter: 1 fn: 534.0196  Pars:  0.40783 0.35788 0.23429\n#> Iter: 2 fn: 534.0196  Pars:  0.40783 0.35787 0.23430\n#> solnp--> Completed in 2 iterations\ntmle_fit\n#> A tmle3_Fit that took 1 step(s)\n#>          type          param init_est tmle_est        se   lower   upper\n#> 1:        TSM  E[Y_{A=NULL}]  0.55351  0.56184 0.0226250 0.51749 0.60618\n#> 2:        TSM  E[Y_{A=NULL}]  0.69755  0.69748 0.0229975 0.65240 0.74255\n#> 3:        TSM  E[Y_{A=NULL}]  0.82085  0.80031 0.0183466 0.76435 0.83627\n#> 4: MSM_linear MSM(intercept)  0.69063  0.68654 0.0198658 0.64761 0.72548\n#> 5: MSM_linear     MSM(slope)  0.13367  0.11924 0.0091106 0.10138 0.13709\n#>    psi_transformed lower_transformed upper_transformed\n#> 1:         0.56184           0.51749           0.60618\n#> 2:         0.69748           0.65240           0.74255\n#> 3:         0.80031           0.76435           0.83627\n#> 4:         0.68654           0.64761           0.72548\n#> 5:         0.11924           0.10138           0.13709"},{"path":"stochastic-treatment-regimes.html","id":"inference-with-marginal-structural-models","chapter":"9 Stochastic Treatment Regimes","heading":"9.7.4 Inference with Marginal Structural Models","text":"Since consider estimating mean counterfactual outcome \\(\\psi_n\\) \nseveral values intervention \\(\\delta\\), taken aforementioned\n\\(\\delta\\)-grid, one approach obtaining inference single summary measure\nestimated quantities involves leveraging working marginal structural\nmodels (MSMs). Summarizing estimates \\(\\psi_n\\) working MSM allows\ninference trend imposed \\(\\delta\\)-grid evaluated via \nsimple hypothesis test parameter working MSM. Letting\n\\(\\psi_{\\delta}(P_0)\\) mean outcome shift \\(\\delta\\) \ntreatment, \\(\\vec{\\psi}_{\\delta} = (\\psi_{\\delta}: \\delta)\\) \ncorresponding estimators \\(\\vec{\\psi}_{n, \\delta} = (\\psi_{n, \\delta}: \\delta)\\).\n, let \\(\\beta(\\vec{\\psi}_{\\delta}) = \\phi((\\psi_{\\delta}: \\delta))\\).given MSM \\(m_{\\beta}(\\delta)\\), \n\\[\\beta_0 = \\text{argmin}_{\\beta} \\sum_{\\delta}(\\psi_{\\delta}(P_0) -\nm_{\\beta}(\\delta))^2 h(\\delta),\\]\nsolution \n\\[u(\\beta, (\\psi_{\\delta}: \\delta)) = \\sum_{\\delta}h(\\delta)\n\\left(\\psi_{\\delta}(P_0) - m_{\\beta}(\\delta) \\right) \\frac{d}{d\\beta}\nm_{\\beta}(\\delta) = 0.\\]\nleads following expansion\n\\[\\beta(\\vec{\\psi}_n) - \\beta(\\vec{\\psi}_0) \\approx -\\frac{d}{d\\beta}\n  u(\\beta_0, \\vec{\\psi}_0)^{-1} \\frac{d}{d\\psi} u(\\beta_0, \\psi_0)\n  (\\vec{\\psi}_n - \\vec{\\psi}_0),\\]\n\n\\[\\frac{d}{d\\beta} u(\\beta, \\psi) = -\\sum_{\\delta} h(\\delta) \\frac{d}{d\\beta}\nm_{\\beta}(\\delta)^t \\frac{d}{d\\beta} m_{\\beta}(\\delta)\n-\\sum_{\\delta} h(\\delta) m_{\\beta}(\\delta) \\frac{d^2}{d\\beta^2}\nm_{\\beta}(\\delta),\\]\n, case MSM linear model (since\n\\(\\frac{d^2}{d\\beta^2} m_{\\beta}(\\delta) = 0\\)), reduces simply \n\\[\\frac{d}{d\\beta} u(\\beta, \\psi) = -\\sum_{\\delta} h(\\delta) \\frac{d}{d\\beta}\nm_{\\beta}(\\delta)^t \\frac{d}{d\\beta} m_{\\beta}(\\delta),\\]\n\n\\[\\frac{d}{d\\psi}u(\\beta, \\psi)(\\psi_n - \\psi_0) = \\sum_{\\delta} h(\\delta)\n\\frac{d}{d\\beta} m_{\\beta}(\\delta) (\\psi_n - \\psi_0)(\\delta),\\]\nmay write terms efficient influence function (EIF) \\(\\psi\\)\nusing first order approximation \\((\\psi_n - \\psi_0)(\\delta) = \\frac{1}{n}\\sum_{= 1}^n \\text{EIF}_{\\psi_{\\delta}}(O_i)\\),\n\\(\\text{EIF}_{\\psi_{\\delta}}\\) efficient influence function (EIF) \n\\(\\vec{\\psi}\\).Now, say, \\(\\vec{\\psi} = (\\psi(\\delta): \\delta)\\) d-dimensional, may\nwrite efficient influence function MSM parameter \\(\\beta\\) follows\n\\[\\text{EIF}_{\\beta}(O) = \\left(\\sum_{\\delta} h(\\delta) \\frac{d}{d\\beta}\nm_{\\beta}(\\delta) \\frac{d}{d\\beta} m_{\\beta}(\\delta)^t \\right)^{-1} \\cdot\n\\sum_{\\delta} h(\\delta) \\frac{d}{d\\beta} m_{\\beta}(\\delta)\n\\text{EIF}_{\\psi_{\\delta}}(O),\\] first term dimension\n\\(d \\times d\\) second term dimension \\(d \\times 1\\). , \nassume linear working MSM; however, analogous procedure may applied \nworking MSMs based GLMs.Inference parameter MSM may obtained straightforward\napplication delta method (discussed previously) – , may\nwrite efficient influence function MSM parameter \\(\\beta\\) terms \nEIFs corresponding point estimates. Based , inference\nworking MSM rather straightforward. wit, limiting distribution\n\\(m_{\\beta}(\\delta)\\) may expressed \\[\\sqrt{n}(\\beta_n - \\beta_0) \\N(0,\n\\Sigma),\\] \\(\\Sigma\\) empirical covariance matrix \n\\(\\text{EIF}_{\\beta}(O)\\).","code":"\ntmle_fit$summary[4:5, ]\n#>          type          param init_est tmle_est        se   lower   upper\n#> 1: MSM_linear MSM(intercept)  0.69063  0.68654 0.0198658 0.64761 0.72548\n#> 2: MSM_linear     MSM(slope)  0.13367  0.11924 0.0091106 0.10138 0.13709\n#>    psi_transformed lower_transformed upper_transformed\n#> 1:         0.68654           0.64761           0.72548\n#> 2:         0.11924           0.10138           0.13709"},{"path":"stochastic-treatment-regimes.html","id":"directly-targeting-the-msm-parameter-beta","chapter":"9 Stochastic Treatment Regimes","heading":"9.7.4.1 Directly Targeting the MSM Parameter \\(\\beta\\)","text":"Note , working MSM fit individual TML estimates \nmean counterfactual outcome given value shift \\(\\delta\\) \nsupplied grid. parameter interest \\(\\beta\\) MSM asymptotically\nlinear (, fact, TML estimator) consequence construction \nindividual TML estimators. smaller samples, may prudent perform \nTML estimation procedure targets parameter \\(\\beta\\) directly, opposed\nconstructing several independently targeted TML estimates. \napproach constructing estimator proposed sequel.Suppose simple working MSM \\(\\mathbb{E}Y_{g^0_{\\delta}} = \\beta_0 + \\beta_1 \\delta\\), TML estimator targeting \\(\\beta_0\\) \\(\\beta_1\\) may \nconstructed \n\\[\\overline{Q}_{n, \\epsilon}(,W) = \\overline{Q}_n(,W) + \\epsilon (H_1(g),\nH_2(g),\\] \\(\\delta\\), \\(H_1(g)\\) auxiliary covariate \n\\(\\beta_0\\) \\(H_2(g)\\) auxiliary covariate \\(\\beta_1\\).construct targeted maximum likelihood estimator directly targets \nparameters working marginal structural model, may use \ntmle_vimshift_msm Spec (instead tmle_vimshift_delta Spec \nappears ):","code":"\n# initialize a tmle specification\ntmle_msm_spec <- tmle_vimshift_msm(\n  shift_grid = delta_grid,\n  max_shifted_ratio = 2\n)\n\n# fit the TML estimator and examine the results\ntmle_msm_fit <- tmle3(tmle_msm_spec, data, node_list, learner_list)\n#> \n#> Iter: 1 fn: 536.5917  Pars:  0.33422 0.55591 0.10986\n#> Iter: 2 fn: 536.5917  Pars:  0.33423 0.55591 0.10986\n#> solnp--> Completed in 2 iterations\ntmle_msm_fit\n#> A tmle3_Fit that took 1 step(s)\n#>          type          param init_est tmle_est        se   lower   upper\n#> 1: MSM_linear MSM(intercept)  0.69029  0.69005 0.0200303 0.65079 0.72931\n#> 2: MSM_linear     MSM(slope)  0.13238  0.13222 0.0091809 0.11423 0.15021\n#>    psi_transformed lower_transformed upper_transformed\n#> 1:         0.69005           0.65079           0.72931\n#> 2:         0.13222           0.11423           0.15021"},{"path":"stochastic-treatment-regimes.html","id":"example-with-the-wash-benefits-data","chapter":"9 Stochastic Treatment Regimes","heading":"9.7.5 Example with the WASH Benefits Data","text":"complete walk , let’s turn using stochastic interventions \ninvestigate data WASH Benefits trial. start, let’s load \ndata, convert columns class numeric, take quick look itNext, specify NPSEM via node_list object. example analysis,\n’ll consider outcome weight--height Z-score (previous\nchapters), intervention interest mother’s age time \nchild’s birth, take covariates potential confounders.consider counterfactual weight--height Z-score shifts \nage mother child’s birth, interpret estimates \nparameter? simplify interpretation, consider shift just year \nmother’s age (.e., \\(\\delta = 1\\)); setting, stochastic\nintervention correspond policy advocating potential mothers\ndefer child single calendar year, possibly implemented \nencouragement design deployed clinical setting.example, ’ll use variable importance strategy considering \ngrid stochastic interventions evaluate weight--height Z-score \nshift mother’s age two years (\\(\\delta = -2\\)) two years\n(\\(\\delta = 2\\)). , simply initialize Spec tmle_vimshift_delta\njust previous example:Prior running analysis, ’ll modify learner_list object \ncreated density estimation procedure rely \nlocation-scale conditional density estimation procedure, nonparametric\nconditional density approach based highly adaptive lasso (Díaz van der Laan 2011; Benkeser van der Laan 2016; Coyle, Hejazi, van der Laan 2020; Hejazi, Coyle, van der Laan 2020; Hejazi, Benkeser, van der Laan 2020)\ncurrently unable accommodate larger datasets.made preparations, ’re now ready estimate \ncounterfactual mean weight--height Z-score small grid \nshifts mother’s age child’s birth. Just , \nsimple call tmle3 wrapper function:","code":"\nwashb_data <- fread(\n  paste0(\n    \"https://raw.githubusercontent.com/tlverse/tlverse-data/master/\",\n    \"wash-benefits/washb_data.csv\"\n  ),\n  stringsAsFactors = TRUE\n)\nwashb_data <- washb_data[!is.na(momage), lapply(.SD, as.numeric)]\nhead(washb_data, 3)\n#>      whz tr fracode month aged sex momage momedu momheight hfiacat Nlt18 Ncomp\n#> 1:  0.00  1       4     9  268   2     30      2    146.40       1     3    11\n#> 2: -1.16  1       4     9  286   2     25      2    148.75       3     2     4\n#> 3: -1.05  1      20     9  264   2     25      2    152.15       1     1    10\n#>    watmin elec floor walls roof asset_wardrobe asset_table asset_chair\n#> 1:      0    1     0     1    1              0           1           1\n#> 2:      0    1     0     1    1              0           1           0\n#> 3:      0    0     0     1    1              0           0           1\n#>    asset_khat asset_chouki asset_tv asset_refrig asset_bike asset_moto\n#> 1:          1            0        1            0          0          0\n#> 2:          1            1        0            0          0          0\n#> 3:          0            1        0            0          0          0\n#>    asset_sewmach asset_mobile\n#> 1:             0            1\n#> 2:             0            1\n#> 3:             0            1\nnode_list <- list(\n  W = names(washb_data)[!(names(washb_data) %in%\n    c(\"whz\", \"momage\"))],\n  A = \"momage\",\n  Y = \"whz\"\n)\n# initialize a tmle specification for the variable importance parameter\nwashb_vim_spec <- tmle_vimshift_delta(\n  shift_grid = c(-2, 2),\n  max_shifted_ratio = 2\n)\n# we need to turn on cross-validation for the HOSE learner\ncv_hose_hal_lrnr <- Lrnr_cv$new(\n  learner = hose_hal_lrnr,\n  full_fit = TRUE\n)\n\n# modify learner list, using existing SL for Q fit\nlearner_list <- list(Y = sl_reg_lrnr, A = cv_hose_hal_lrnr)\nwashb_tmle_fit <- tmle3(washb_vim_spec, washb_data, node_list, learner_list)\nwashb_tmle_fit"},{"path":"stochastic-treatment-regimes.html","id":"exercises-3","chapter":"9 Stochastic Treatment Regimes","heading":"9.8 Exercises","text":"","code":""},{"path":"stochastic-treatment-regimes.html","id":"the-ideas-in-action-1","chapter":"9 Stochastic Treatment Regimes","heading":"9.8.1 The Ideas in Action","text":"Set sl3 library algorithms Super Learner simple,\ninterpretable library use new library estimate counterfactual\nmean mother’s age child’s birth (momage) shift \\(\\delta = 0\\).\ncounterfactual mean equate terms observed data?Set sl3 library algorithms Super Learner simple,\ninterpretable library use new library estimate counterfactual\nmean mother’s age child’s birth (momage) shift \\(\\delta = 0\\).\ncounterfactual mean equate terms observed data?Using grid values shift parameter \\(\\delta\\) (e.g., \\(\\{-1, 0, +1\\}\\)), repeat analysis variable chosen preceding question,\nsummarizing trend sequence shifts using marginal structural\nmodel.Using grid values shift parameter \\(\\delta\\) (e.g., \\(\\{-1, 0, +1\\}\\)), repeat analysis variable chosen preceding question,\nsummarizing trend sequence shifts using marginal structural\nmodel.Repeat preceding analysis, using grid shifts, instead\ndirectly targeting parameters marginal structural model. Interpret\nresults – , slope marginal structural model\ntell us trend across chosen sequence shifts?Repeat preceding analysis, using grid shifts, instead\ndirectly targeting parameters marginal structural model. Interpret\nresults – , slope marginal structural model\ntell us trend across chosen sequence shifts?","code":""},{"path":"stochastic-treatment-regimes.html","id":"review-of-key-concepts-2","chapter":"9 Stochastic Treatment Regimes","heading":"9.8.2 Review of Key Concepts","text":"Describe two (equivalent) ways causal effects stochastic\ninterventions may interpreted.Describe two (equivalent) ways causal effects stochastic\ninterventions may interpreted.marginal structural model used summarize trend along\nsequence shifts previously help contextualize estimated effect\nsingle shift? , access estimates across several\nshifts marginal structural model parameters allow us richly\ninterpret findings?marginal structural model used summarize trend along\nsequence shifts previously help contextualize estimated effect\nsingle shift? , access estimates across several\nshifts marginal structural model parameters allow us richly\ninterpret findings?advantages, , targeting directly parameters \nmarginal structural model?advantages, , targeting directly parameters \nmarginal structural model?","code":""},{"path":"r6.html","id":"r6","chapter":"10 A Primer on the R6 Class System","heading":"10 A Primer on the R6 Class System","text":"central goal Targeted Learning statistical paradigm estimate\nscientifically relevant parameters realistic (usually nonparametric) models.tlverse designed using basic OOP principles R6 OOP framework.\n’ve tried make easy use tlverse packages without worrying\nmuch OOP, helpful intuition tlverse \nstructured. , briefly outline key concepts OOP. Readers\nfamiliar OOP basics invited skip section.","code":""},{"path":"r6.html","id":"classes-fields-and-methods","chapter":"10 A Primer on the R6 Class System","heading":"10.1 Classes, Fields, and Methods","text":"key concept OOP object, collection data functions\ncorresponds conceptual unit. Objects two main types \nelements:fields, can thought nouns, information object,\nandmethods, can thought verbs, actions object can\nperform.Objects members classes, define specific fields \nmethods . Classes can inherit elements classes (sometimes called\nbase classes) – accordingly, classes similar, exactly \n, can share parts definitions.Many different implementations OOP exist, variations \nconcepts implemented used. R several different implementations,\nincluding S3, S4, reference classes, R6. tlverse uses R6\nimplementation. R6, methods fields class object accessed using\n$ operator. thorough introduction R’s various OOP systems,\nsee http://adv-r..co.nz/OO-essentials.html, Hadley Wickham’s Advanced\nR (Wickham 2014).","code":""},{"path":"r6.html","id":"object-oriented-programming-python-and-r","chapter":"10 A Primer on the R6 Class System","heading":"10.2 Object Oriented Programming: Python and R","text":"OO concepts (classes inherentence) baked Python first\npublished version (version 0.9 1991). contrast, R gets OO “approach”\npredecessor, S, first released 1976. first 15 years, S\nsupport classes, , suddenly, S got two OO frameworks bolted \nrapid succession: informal classes S3 1991, formal classes \nS4 1998. process continues, new OO frameworks periodically\nreleased, try improve lackluster OO support R, reference\nclasses (R5, 2010) R6 (2014). , R6 behaves like Python\nclasses (also like OOP focused languages like C++ Java), including\nmethod definitions part class definitions, allowing objects \nmodified reference.","code":""},{"path":"references.html","id":"references","chapter":"References","heading":"References","text":"Anonymous. 2015. “Let’s Think Cognitive Bias.” Nature 526 (7572). Springer Nature. https://doi.org/10.1038/526163a.Baker, Monya. 2016. “Reproducibility Crisis? Nature Survey Lifts Lid Researchers View Crisis Rocking Science Think Help.” Nature 533 (7604). Nature Publishing Group: 452–55.Bengtsson, Henrik. 2020. “Unifying Framework Parallel Distributed Processing R Using Futures.” https://arxiv.org/abs/2008.00553.Benkeser, David, Mark J van der Laan. 2016. “Highly Adaptive Lasso Estimator.” 2016 IEEE International Conference Data Science Advanced Analytics (DSAA). IEEE. https://doi.org/10.1109/dsaa.2016.93.Breiman, Leo. 1996. “Stacked Regressions.” Machine Learning 24 (1). Springer: 49–64.———. 2001. “Random Forests.” Machine Learning 45 (1). Springer: 5–32.Buckheit, Jonathan B, David L Donoho. 1995. “Wavelab Reproducible Research.” Wavelets Statistics, 55–81. Springer.Chakraborty, Bibhas, Erica EM Moodie. 2013. Statistical Methods Dynamic Treatment Regimes: Reinforcement Learning, Causal Inference, Personalized Medicine (Statistics Biology Health). Springer.Coyle, Jeremy R, Nima S Hejazi. 2018. “Origami: Generalized Framework Cross-Validation R.” Journal Open Source Software 3 (21). Open Journal. https://doi.org/10.21105/joss.00512.Coyle, Jeremy R, Nima S Hejazi, Ivana Malenica, Rachael V Phillips, Benjamin F Arnold, Andrew Mertens, Jade Benjamin-Chung, et al. 2021. “Targeting Learning: Robust Statistics Reproducible Research.” arXiv. https://arxiv.org/abs/2006.07333.Coyle, Jeremy R, Nima S Hejazi, Mark J van der Laan. 2020. hal9001: Scalable Highly Adaptive Lasso. https://doi.org/10.5281/zenodo.3558313.Díaz, Iván, Mark J van der Laan. 2011. “Super Learner Based Conditional Density Estimation Application Marginal Structural Models.” International Journal Biostatistics 7 (1). De Gruyter: 1–20.———. 2012. “Population Intervention Causal Effects Based Stochastic Interventions.” Biometrics 68 (2). Wiley Online Library: 541–49.———. 2018. “Stochastic Treatment Regimes.” Targeted Learning Data Science: Causal Inference Complex Longitudinal Studies, 167–80. Springer Science & Business Media.Dudoit, Sandrine, Mark J van der Laan. 2005. “Asymptotics Cross-Validated Risk Estimation Estimator Selection Performance Assessment.” Statistical Methodology 2 (2). Elsevier: 131–54.Editorial, Nature. 2015. “Scientists Fool — Can Stop.” Nature 526 (7572). Springer Nature.Haneuse, Sebastian, Andrea Rotnitzky. 2013. “Estimation Effect Interventions Modify Received Treatment.” Statistics Medicine 32 (30). Wiley Online Library: 5260–77.Hejazi, Nima S, David C Benkeser, Mark J van der Laan. 2020. haldensify: Highly Adaptive Lasso Conditional Density Estimation. https://github.com/nhejazi/haldensify. https://doi.org/10.5281/zenodo.3698329.Hejazi, Nima S, Jeremy R Coyle, Mark J van der Laan. 2020. “hal9001: Scalable Highly Adaptive Lasso Regression R.” Journal Open Source Software. Open Journal. https://doi.org/10.21105/joss.02526.Hejazi, Nima S, Mark J van der Laan, Holly E Janes, Peter B Gilbert, David C Benkeser. 2020. “Efficient Nonparametric Inference Effects Stochastic Interventions Two-Phase Sampling, Applications Vaccine Efficacy Trials.” Biometrics. Wiley Online Library. https://doi.org/10.1111/biom.13375.Luedtke, ., M. J van der Laan. 2016. “Super-Learning Optimal Dynamic Treatment Rule.” International Journal Biostatistics 12 (1): 305–32.Munafò, Marcus R, Brian Nosek, Dorothy VM Bishop, Katherine S Button, Christopher D Chambers, Nathalie Percie Du Sert, Uri Simonsohn, Eric-Jan Wagenmakers, Jennifer J Ware, John PA Ioannidis. 2017. “Manifesto Reproducible Science.” Nature Human Behaviour 1 (1). Nature Publishing Group: 0021.Murphy, Susan . 2003. “Optimal Dynamic Treatment Regimes.” Journal Royal Statistical Society: Series B (Statistical Methodology) 65 (2). Wiley Online Library: 331–55.Neyman, Jerzy. 1990. “Application Probability Agricultural Experiments. Essay Principles (Dm Dabrowska & Tp Speed, Trans.).” Statistical Science 5: 465–80. http://www.jstor.org/stable/2245382.Nosek, Brian , Charles R Ebersole, Alexander C DeHaven, David T Mellor. 2018. “Preregistration Revolution.” Proceedings National Academy Sciences 115 (11). National Acad Sciences: 2600–2606.Pearl, Judea. 2009a. Causality: Models, Reasoning, Inference. Cambridge University Press.———. 2009b. Causality: Models, Reasoning Inference. 2nd ed. New York, NY, USA: Cambridge University Press.Peng, Roger. 2015. “Reproducibility Crisis Science: Statistical Counterattack.” Significance 12 (3). Wiley Online Library: 30–32.Polley, Eric C, Mark J van der Laan. 2010. “Super Learner Prediction.” bepress.Pullenayegum, Eleanor M, Robert W Platt, Melanie Barwick, Brian M Feldman, Martin Offringa, Lehana Thabane. 2016. “Knowledge Translation Biostatistics: Survey Current Practices, Preferences, Barriers Dissemination Uptake New Statistical Methods.” Statistics Medicine 35 (6). Wiley Online Library: 805–18.Robins, James. 1986. “New Approach Causal Inference Mortality Studies Sustained Exposure Period—Application Control Healthy Worker Survivor Effect.” Mathematical Modelling 7 (9): 1393–1512. https://doi.org/https://doi.org/10.1016/0270-0255(86)90088-6.Robins, James M. 2004. “Optimal Structural Nested Models Optimal Sequential Decisions.” Proceedings Second Seattle Symposium Biostatistics: Analysis Correlated Data, 189–326. Springer New York. https://doi.org/10.1007/978-1-4419-9076-1_11.Robins, James, Andrea Rotnitzky. 2014. “Discussion ‘Dynamic Treatment Regimes: Technical Challenges Applications’.” Electron. J. Statist. 8 (1). Institute Mathematical Statistics; Bernoulli Society: 1273–89. https://doi.org/10.1214/14-EJS908.Rubin, Donald B. 1978. “Bayesian Inference Causal Effects: Role Randomization.” Annals Statistics. JSTOR, 34–58.———. 1980. “Randomization Analysis Experimental Data: Fisher Randomization Test Comment.” Journal American Statistical Association 75 (371). JSTOR: 591–93.Sandercock, P, R Collins, C Counsell, B Farrell, R Peto, J Slattery, C Warlow. 1997. “International Stroke Trial (Ist): Randomized Trial Aspirin, Subcutaneous Heparin, , Neither Among 19,435 Patients Acute Ischemic Stroke.” Lancet 349 (9065): 1569–81.Sandercock, Peter AG, Maciej Niewada, Anna Członkowska. 2011. “International Stroke Trial Database.” Trials 12 (1). BioMed Central: 101.Stark, Philip B, Andrea Saltelli. 2018. “Cargo-Cult Statistics Scientific Crisis.” Significance 15 (4). Wiley Online Library: 40–43.Stromberg, Arnold, others. 2004. “Write Statistical Software? Case Robust Statistical Methods.” Journal Statistical Software 10 (5): 1–8.Sutton, Richard S, Andrew G Barto, others. 1998. Introduction Reinforcement Learning. Vol. 135. MIT press Cambridge.Szucs, Denes, John Ioannidis. 2017. “Null Hypothesis Significance Testing Unsuitable Research: Reassessment.” Frontiers Human Neuroscience 11. Frontiers: 390.Textor, Johannes, Juliane Hardt, Sven Knüppel. 2011. “DAGitty: Graphical Tool Analyzing Causal Diagrams.” Epidemiology 22 (5). LWW: 745.Tofail, Fahmida, Lia CH Fernald, Kishor K Das, Mahbubur Rahman, Tahmeed Ahmed, Kaniz K Jannat, Leanne Unicomb, et al. 2018. “Effect Water Quality, Sanitation, Hand Washing, Nutritional Interventions Child Development Rural Bangladesh (Wash Benefits Bangladesh): Cluster-Randomised Controlled Trial.” Lancet Child & Adolescent Health 2 (4). Elsevier: 255–68.van der Laan, Mark J, Sandrine Dudoit. 2003. “Unified Cross-Validation Methodology Selection Among Estimators General Cross-Validated Adaptive Epsilon-Net Estimator: Finite Sample Oracle Inequalities Examples.” bepress.van der Laan, Mark J, Sandrine Dudoit, Sunduz Keles. 2004. “Asymptotic Optimality Likelihood-Based Cross-Validation.” Statistical Applications Genetics Molecular Biology 3 (1): 1–23.van der Laan, Mark J, Eric C Polley, Alan E Hubbard. 2007. “Super Learner.” Statistical Applications Genetics Molecular Biology 6 (1).van der Laan, Mark J, Sherri Rose. 2011. Targeted Learning: Causal Inference Observational Experimental Data. Springer Science & Business Media.———. 2018. Targeted Learning Data Science: Causal Inference Complex Longitudinal Studies. Springer Science & Business Media.van der Laan, Mark J, Richard JCM Starmans. 2014. “Entering Era Data Science: Targeted Learning Integration Statistics Computational Data Analysis.” Advances Statistics 2014. Hindawi.van der Laan, M. J, . Luedtke. 2015. “Targeted Learning Mean Outcome Optimal Dynamic Treatment Rule.” Journal Causal Inference 3 (1): 61–95.Van der Vaart, Aad W, Sandrine Dudoit, Mark J van der Laan. 2006. “Oracle Inequalities Multi-Fold Cross Validation.” Statistics & Decisions 24 (3). Oldenbourg Wissenschaftsverlag: 351–71.Wickham, Hadley. 2014. Advanced R. Chapman; Hall/CRC.Wolpert, David H. 1992. “Stacked Generalization.” Neural Networks 5 (2). Elsevier: 241–59.Young, Jessica G, Miguel Hernán, James M Robins. 2014. “Identification, Estimation Approximation Risk Interventions Depend Natural Value Treatment Using Observational Data.” Epidemiologic Methods 3 (1). De Gruyter: 1–19.Zhang, Baqun, Anastasios Tsiatis, Marie Davidian, Min Zhang, Eric Laber. 2016. “Estimating Optimal Treatment Regimes Classification Perspective.” Stat 5 (1): 278–78. https://doi.org/10.1002/sta4.124.Zhao, Yingqi, Donglin Zeng, John Rush, Michael R Kosorok. 2012. “Estimating Individualized Treatment Rules Using Outcome Weighted Learning.” Journal American Statistical Association 107 (499). Taylor & Francis: 1106–18. https://doi.org/10.1080/01621459.2012.695674.Zheng, W., M. J van der Laan. 2010. “Asymptotic Theory Cross-validated Targeted Maximum Likelihood Estimation.” U.C. Berkeley Division Biostatistics Working Paper Series.","code":""}]
